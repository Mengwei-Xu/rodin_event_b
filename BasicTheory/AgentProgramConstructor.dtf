<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="0d941e21bd4bf8a064aeaf3b2d08d125" org.eventb.theory.core.outdated="false">
    <org.eventb.theory.core.scTypeParameter name="Belief_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#'" org.eventb.core.type="ℙ(Belief_predicate_symbols)"/>
    <org.eventb.theory.core.scTypeParameter name="Event_Action_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#(" org.eventb.core.type="ℙ(Event_Action_predicate_symbols)"/>
    <org.eventb.theory.core.scTypeParameter name="Terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(Terms)"/>
    <org.eventb.theory.core.scDatatypeDefinition name="UserP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="Belief_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="Belief_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Event_Action_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="Event_Action_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="Terms"/>
        <org.eventb.theory.core.scDatatypeConstructor name="BasicP_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element1">
            <org.eventb.theory.core.scConstructorArgument name="basic_program_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Sequence_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2">
            <org.eventb.theory.core.scConstructorArgument name="head_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="UserP"/>
            <org.eventb.theory.core.scConstructorArgument name="tail_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="UserP"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Concurrency_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3">
            <org.eventb.theory.core.scConstructorArgument name="left_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="UserP"/>
            <org.eventb.theory.core.scConstructorArgument name="right_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="UserP"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Declarative_goal_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4">
            <org.eventb.theory.core.scConstructorArgument name="success_condition_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
            <org.eventb.theory.core.scConstructorArgument name="event_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
            <org.eventb.theory.core.scConstructorArgument name="failure_condition_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scDatatypeDefinition name="P" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="Belief_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="Belief_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Event_Action_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="Event_Action_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="Terms"/>
        <org.eventb.theory.core.scDatatypeConstructor name="Nil" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#\/"/>
        <org.eventb.theory.core.scDatatypeConstructor name="BasicP_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#+">
            <org.eventb.theory.core.scConstructorArgument name="basic_program_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#+|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Sequence_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-">
            <org.eventb.theory.core.scConstructorArgument name="head_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="tail_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Concurrency_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.">
            <org.eventb.theory.core.scConstructorArgument name="left_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="right_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Declarative_goal_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*">
            <org.eventb.theory.core.scConstructorArgument name="success_condition" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
            <org.eventb.theory.core.scConstructorArgument name="procedural_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="failure_condition" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Try_current_with_backups" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1">
            <org.eventb.theory.core.scConstructorArgument name="current_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="backup_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Relevant_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2">
            <org.eventb.theory.core.scConstructorArgument name="triggering_event" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
            <org.eventb.theory.core.scConstructorArgument name="set_of_guarded_plan_bodies" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="ℙ(ℙ(Belief_predicate_symbols×Terms)×UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="False" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element3"/>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolt" org.eventb.core.label="isRevelant_plans" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="/" org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#\/" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolu" org.eventb.core.label="type_UserP_to_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="userP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="userP">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Declarative_goal_user(s,evt,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="Declarative_goal_intention(s,BasicP_intention(evt),failure)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="BasicP_user(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Sequence_user(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="Sequence_intention(type_UserP_to_P(head),type_UserP_to_P(tail))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Concurrency_user(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="Concurrency_intention(type_UserP_to_P(left),type_UserP_to_P(right))"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolv" org.eventb.core.label="next_programs_to_progress" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({BasicP_intention(basic_program)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="{Relevant_plans(event,guarded_plan_bodies)}"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="next_programs_to_progress(head)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="next_programs_to_progress(left)∪next_programs_to_progress(right)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{Declarative_goal_intention(s,procedual,f)}"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="next_programs_to_progress(current)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolw" org.eventb.core.label="update_intention" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="current_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="new_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current=BasicP_intention(basic_program)∧new=new_program ∣ current ↦ new}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current=Relevant_plans(event,guarded_plan_bodies)∧new=new_program ∣ current ↦ new}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="/" org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#\/" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(tail,head)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="Sequence_intention(update_intention(tail,current_program,new_program),head)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current∈next_programs_to_progress(left)∧current∉next_programs_to_progress(right)∧new=Concurrency_intention(update_intention(left,current_program,new_program),right))∨(current∉next_programs_to_progress(left)∧current∈next_programs_to_progress(right)∧new=Concurrency_intention(left,update_intention(right,current_program,new_program))) ∣ current ↦ new}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current=Declarative_goal_intention(s,procedual,f)∧new=new_program)∨(current≠Declarative_goal_intention(s,procedual,f)∧new=Declarative_goal_intention(s,update_intention(procedual,current_program,new_program),f)) ∣ current ↦ new}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="Try_current_with_backups(update_intention(current,current_program,new_program),backups)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolx" org.eventb.core.label="isBasicP_intention" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symboly" org.eventb.core.label="isSequence_intention" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolz" org.eventb.core.label="isConcurrency_intention" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol{" org.eventb.core.label="isDeclarative_goal_intention" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol|" org.eventb.core.label="isTry_current_with_backups" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol}" org.eventb.core.label="isNil" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol~" org.eventb.core.label="NilRemove" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="Relevant_plans(event,guarded_plan_bodies)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="{new_intention⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),h⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),t⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(isNil(h)∧new_intention=t)∨(¬isNil(h)∧new_intention=Sequence_intention(NilRemove(h),t)) ∣ h ↦ t ↦ new_intention}(head ↦ tail)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{new_intention⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),l1⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),r1⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),l2⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),r2⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·l2=NilRemove(l1)∧r2=NilRemove(r1)∧((isNil(l2)∧isNil(r2)∧new_intention=(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))∨((¬isNil(l2)∨¬isNil(r2))∧new_intention=Concurrency_intention(l2,r2))) ∣ l1 ↦ r1 ↦ new_intention}(left ↦ right)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="Declarative_goal_intention(s,NilRemove(procedual),f)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="{new_intention⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),curr⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),back⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(isNil(curr)∧new_intention=(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))∨(¬isNil(curr)∧new_intention=Try_current_with_backups(NilRemove(curr),back)) ∣ curr ↦ back ↦ new_intention}(current ↦ backups)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbom'" org.eventb.core.label="isFalse" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbom(" org.eventb.core.label="failure_recovery" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="current_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="backup_relevant_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#*" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="Relevant_plans(event,guarded_plan_bodies)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current∈next_programs_to_progress(head)∧new_search=Sequence_intention(failure_recovery(head,current_program,backup_relevant_plans),tail) ∣ current ↦ new_search}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current∈next_programs_to_progress(left)∧current∉next_programs_to_progress(right)∧new_search=Concurrency_intention(failure_recovery(left,current_program,backup_relevant_plans),right))∨(current∉next_programs_to_progress(left)∧current∈next_programs_to_progress(right)∧new_search=Concurrency_intention(left,failure_recovery(right,current_program,backup_relevant_plans))) ∣ current ↦ new_search}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedural,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current∈next_programs_to_progress(procedural)∧new_search=Declarative_goal_intention(s,failure_recovery(procedural,current_program,backup_relevant_plans),f) ∣ current ↦ new_search}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backup)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="{curr⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),back⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_intention_or_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(back=backup_relevant_plans∧current_program∈next_programs_to_progress(curr)∧new_intention_or_search=back)∨(¬(back=backup_relevant_plans∧current_program∈next_programs_to_progress(curr))∧new_intention_or_search=Try_current_with_backups(failure_recovery(current,current_program,backup_relevant_plans),back)) ∣ curr ↦ back ↦ new_intention_or_search}(current ↦ backup)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbom)" org.eventb.core.label="get_backups_for_current_program" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="current_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="backup_relevant_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="backup_relevant_plans"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="backup_relevant_plans"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="backup_relevant_plans"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="backup_relevant_plans"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current∈next_programs_to_progress(head)∧new_search=get_backups_for_current_program(head,current_program,backup_relevant_plans) ∣ current ↦ new_search}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),next_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current∈next_programs_to_progress(left)∧current∉next_programs_to_progress(right)∧next_search=get_backups_for_current_program(left,current_program,backup_relevant_plans))∨(current∉next_programs_to_progress(left)∧current∈next_programs_to_progress(right)∧next_search=get_backups_for_current_program(right,current_program,backup_relevant_plans)) ∣ current ↦ next_search}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Declarative_goal_intention(s,procedural,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search_or_return⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current=Declarative_goal_intention(s,procedural,f)∧new_search_or_return=backup_relevant_plans)∨(current≠Declarative_goal_intention(s,procedural,f)∧current∈next_programs_to_progress(procedural)∧new_search_or_return=get_backups_for_current_program(procedural,current_program,backup_relevant_plans)) ∣ current ↦ new_search_or_return}(current_program)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{curr⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·curr∈next_programs_to_progress(current)∧new_search=get_backups_for_current_program(current,current_program,backups) ∣ curr ↦ new_search}(current_program)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+">
        <org.eventb.theory.core.scMetavariable name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="basic_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        <org.eventb.theory.core.scMetavariable name="event" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        <org.eventb.theory.core.scMetavariable name="guarded_plan_bodies" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(ℙ(Belief_predicate_symbols×Terms)×UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        <org.eventb.theory.core.scMetavariable name="head" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="tail" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="left" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="right" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="f" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        <org.eventb.theory.core.scMetavariable name="procedual" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="s" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        <org.eventb.theory.core.scMetavariable name="backups" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="current" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="userP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="evt" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        <org.eventb.theory.core.scMetavariable name="failure" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        <org.eventb.theory.core.scMetavariable name="head_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="tail_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="left_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="right_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="current_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="new_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="backup_relevant_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="procedural" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="backup" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(Declarative_goal_user(s,evt,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="Declarative_goal_intention(s,BasicP_intention(evt),failure)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(BasicP_user(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(Sequence_user(head_,tail_))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="Sequence_intention(type_UserP_to_P(head_),type_UserP_to_P(tail_))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(Concurrency_user(left_,right_))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="Concurrency_intention(type_UserP_to_P(left_),type_UserP_to_P(right_))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({BasicP_intention(basic_program)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="{Relevant_plans(event,guarded_plan_bodies)}"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="next_programs_to_progress(head)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="next_programs_to_progress(left)∪next_programs_to_progress(right)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="{Declarative_goal_intention(s,procedual,f)}"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="next_programs_to_progress(current)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(BasicP_intention(basic_program),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current=BasicP_intention(basic_program)∧new=new_program ∣ current ↦ new}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(Relevant_plans(event,guarded_plan_bodies),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current=Relevant_plans(event,guarded_plan_bodies)∧new=new_program ∣ current ↦ new}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(Sequence_intention(tail,head),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="Sequence_intention(update_intention(tail,current_program,new_program),head)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(Concurrency_intention(left,right),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current∈next_programs_to_progress(left)∧current∉next_programs_to_progress(right)∧new=Concurrency_intention(update_intention(left,current_program,new_program),right))∨(current∉next_programs_to_progress(left)∧current∈next_programs_to_progress(right)∧new=Concurrency_intention(left,update_intention(right,current_program,new_program))) ∣ current ↦ new}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(Declarative_goal_intention(s,procedual,f),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current=Declarative_goal_intention(s,procedual,f)∧new=new_program)∨(current≠Declarative_goal_intention(s,procedual,f)∧new=Declarative_goal_intention(s,update_intention(procedual,current_program,new_program),f)) ∣ current ↦ new}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update_intention case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update_intention case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update_intention expansion" org.eventb.theory.core.formula="update_intention(Try_current_with_backups(current,backups),current_program,new_program)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update_intention rhs" org.eventb.core.label="update_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="Try_current_with_backups(update_intention(current,current_program,new_program),backups)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicP_intention case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicP_intention case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicP_intention expansion" org.eventb.theory.core.formula="isBasicP_intention(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicP_intention rhs" org.eventb.core.label="isBasicP_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSequence_intention case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSequence_intention case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSequence_intention expansion" org.eventb.theory.core.formula="isSequence_intention(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSequence_intention rhs" org.eventb.core.label="isSequence_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrency_intention case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrency_intention case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrency_intention expansion" org.eventb.theory.core.formula="isConcurrency_intention(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrency_intention rhs" org.eventb.core.label="isConcurrency_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isDeclarative_goal_intention case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isDeclarative_goal_intention case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isDeclarative_goal_intention expansion" org.eventb.theory.core.formula="isDeclarative_goal_intention(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isDeclarative_goal_intention rhs" org.eventb.core.label="isDeclarative_goal_intention rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isTry_current_with_backups case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isTry_current_with_backups case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isTry_current_with_backups expansion" org.eventb.theory.core.formula="isTry_current_with_backups(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isTry_current_with_backups rhs" org.eventb.core.label="isTry_current_with_backups rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isNil case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isNil case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isNil expansion" org.eventb.theory.core.formula="isNil(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isNil rhs" org.eventb.core.label="isNil rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="Relevant_plans(event,guarded_plan_bodies)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="{new_intention⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),h⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),t⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(isNil(h)∧new_intention=t)∨(¬isNil(h)∧new_intention=Sequence_intention(NilRemove(h),t)) ∣ h ↦ t ↦ new_intention}(head ↦ tail)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="{new_intention⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),l1⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),r1⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),l2⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),r2⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·l2=NilRemove(l1)∧r2=NilRemove(r1)∧((isNil(l2)∧isNil(r2)∧new_intention=(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))∨((¬isNil(l2)∨¬isNil(r2))∧new_intention=Concurrency_intention(l2,r2))) ∣ l1 ↦ r1 ↦ new_intention}(left ↦ right)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="Declarative_goal_intention(s,NilRemove(procedual),f)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.NilRemove case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.NilRemove case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="NilRemove expansion" org.eventb.theory.core.formula="NilRemove(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="NilRemove rhs" org.eventb.core.label="NilRemove rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.formula="{new_intention⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),curr⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),back⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(isNil(curr)∧new_intention=(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))∨(¬isNil(curr)∧new_intention=Try_current_with_backups(NilRemove(curr),back)) ∣ curr ↦ back ↦ new_intention}(current ↦ backups)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isFalse case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isFalse case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isFalse expansion" org.eventb.theory.core.formula="isFalse(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isFalse rhs" org.eventb.core.label="isFalse rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(BasicP_intention(basic_program),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(Relevant_plans(event,guarded_plan_bodies),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="Relevant_plans(event,guarded_plan_bodies)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(Sequence_intention(head,tail),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current∈next_programs_to_progress(head)∧new_search=Sequence_intention(failure_recovery(head,current_program,backup_relevant_plans),tail) ∣ current ↦ new_search}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(Concurrency_intention(left,right),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current∈next_programs_to_progress(left)∧current∉next_programs_to_progress(right)∧new_search=Concurrency_intention(failure_recovery(left,current_program,backup_relevant_plans),right))∨(current∉next_programs_to_progress(left)∧current∈next_programs_to_progress(right)∧new_search=Concurrency_intention(left,failure_recovery(right,current_program,backup_relevant_plans))) ∣ current ↦ new_search}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(Declarative_goal_intention(s,procedural,f),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current∈next_programs_to_progress(procedural)∧new_search=Declarative_goal_intention(s,failure_recovery(procedural,current_program,backup_relevant_plans),f) ∣ current ↦ new_search}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.failure_recovery case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.failure_recovery case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="failure_recovery expansion" org.eventb.theory.core.formula="failure_recovery(Try_current_with_backups(current,backup),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="failure_recovery rhs" org.eventb.core.label="failure_recovery rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.formula="{curr⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),back⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_intention_or_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(back=backup_relevant_plans∧current_program∈next_programs_to_progress(curr)∧new_intention_or_search=back)∨(¬(back=backup_relevant_plans∧current_program∈next_programs_to_progress(curr))∧new_intention_or_search=Try_current_with_backups(failure_recovery(current,current_program,backup_relevant_plans),back)) ∣ curr ↦ back ↦ new_intention_or_search}(current ↦ backup)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(BasicP_intention(basic_program),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="backup_relevant_plans"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(Relevant_plans(event,guarded_plan_bodies),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="backup_relevant_plans"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="backup_relevant_plans"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="backup_relevant_plans"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(Sequence_intention(head,tail),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·current∈next_programs_to_progress(head)∧new_search=get_backups_for_current_program(head,current_program,backup_relevant_plans) ∣ current ↦ new_search}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(Concurrency_intention(left,right),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),next_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current∈next_programs_to_progress(left)∧current∉next_programs_to_progress(right)∧next_search=get_backups_for_current_program(left,current_program,backup_relevant_plans))∨(current∉next_programs_to_progress(left)∧current∈next_programs_to_progress(right)∧next_search=get_backups_for_current_program(right,current_program,backup_relevant_plans)) ∣ current ↦ next_search}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(Declarative_goal_intention(s,procedural,f),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="{current⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search_or_return⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·(current=Declarative_goal_intention(s,procedural,f)∧new_search_or_return=backup_relevant_plans)∨(current≠Declarative_goal_intention(s,procedural,f)∧current∈next_programs_to_progress(procedural)∧new_search_or_return=get_backups_for_current_program(procedural,current_program,backup_relevant_plans)) ∣ current ↦ new_search_or_return}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.get_backups_for_current_program case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.get_backups_for_current_program case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="get_backups_for_current_program expansion" org.eventb.theory.core.formula="get_backups_for_current_program(Try_current_with_backups(current,backups),current_program,backup_relevant_plans)">
            <org.eventb.theory.core.scRewriteRuleRHS name="get_backups_for_current_program rhs" org.eventb.core.label="get_backups_for_current_program rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.formula="{curr⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms),new_search⦂P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)·curr∈next_programs_to_progress(current)∧new_search=get_backups_for_current_program(current,current_program,backups) ∣ curr ↦ new_search}(current_program)"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
