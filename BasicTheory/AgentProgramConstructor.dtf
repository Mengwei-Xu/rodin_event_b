<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.deployedTheoryRoot org.eventb.core.accurate="true" org.eventb.core.comment="GENERATED THEORY FILE: !DO NOT CHANGE!" org.eventb.theory.core.modificationHashValue="bdc70fda3c167380d4014f6a24bb9c61" org.eventb.theory.core.outdated="false">
    <org.eventb.theory.core.scTypeParameter name="non_belief_predicates" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#(" org.eventb.core.type="ℙ(non_belief_predicates)"/>
    <org.eventb.theory.core.scTypeParameter name="belief_predicates" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#'" org.eventb.core.type="ℙ(belief_predicates)"/>
    <org.eventb.theory.core.scTypeParameter name="terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(terms)"/>
    <org.eventb.theory.core.scDatatypeDefinition name="UserP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="belief_predicates"/>
        <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="non_belief_predicates"/>
        <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="terms"/>
        <org.eventb.theory.core.scDatatypeConstructor name="BasicP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element1">
            <org.eventb.theory.core.scConstructorArgument name="getBasicP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="non_belief_predicates×terms"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Seq" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2">
            <org.eventb.theory.core.scConstructorArgument name="leftSeq" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="UserP"/>
            <org.eventb.theory.core.scConstructorArgument name="rightSeq" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="UserP"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Concurrent" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3">
            <org.eventb.theory.core.scConstructorArgument name="leftConc" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="UserP"/>
            <org.eventb.theory.core.scConstructorArgument name="rightConc" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="UserP"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Goal" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4">
            <org.eventb.theory.core.scConstructorArgument name="SuccesUser" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
            <org.eventb.theory.core.scConstructorArgument name="EventUser" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="non_belief_predicates×terms"/>
            <org.eventb.theory.core.scConstructorArgument name="FailureUser" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scDatatypeDefinition name="Plan_body" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="belief_predicates"/>
        <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="non_belief_predicates"/>
        <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="terms"/>
        <org.eventb.theory.core.scDatatypeConstructor name="NilComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#\/"/>
        <org.eventb.theory.core.scDatatypeConstructor name="BasicPComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#+">
            <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#+|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="non_belief_predicates×terms"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="SeqComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-">
            <org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Plan_body"/>
            <org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="Plan_body"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="ConcurrentComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.">
            <org.eventb.theory.core.scConstructorArgument name="left" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Plan_body"/>
            <org.eventb.theory.core.scConstructorArgument name="right" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="Plan_body"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="GoalComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*">
            <org.eventb.theory.core.scConstructorArgument name="SuccessComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
            <org.eventb.theory.core.scConstructorArgument name="getGoalPlanBody" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="Plan_body"/>
            <org.eventb.theory.core.scConstructorArgument name="FailureComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Rhd" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1">
            <org.eventb.theory.core.scConstructorArgument name="current" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Plan_body"/>
            <org.eventb.theory.core.scConstructorArgument name="backup" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="Plan_body"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="EventComp" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2">
            <org.eventb.theory.core.scConstructorArgument name="getEvent" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="non_belief_predicates×terms"/>
            <org.eventb.theory.core.scConstructorArgument name="UserPlan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms)))"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicatet" org.eventb.core.label="isEventComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicateu" org.eventb.core.label="UserP2Plan_body" org.eventb.core.predicate="Plan_library∈non_belief_predicates ⇸ (ℙ(belief_predicates × terms) × terms ⇸ ℙ(UserP(belief_predicates,non_belief_predicates,terms)))" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="uP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="Plan_library" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(non_belief_predicates×ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms))))"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="uP">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Goal(succes,evtxterms,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="GoalComp(succes,EventComp(evtxterms,Plan_library((prj1 ⦂ ℙ(non_belief_predicates×terms×non_belief_predicates))(evtxterms))),fail)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="BasicP(nonbeliefpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms) ◁ (id ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)×Plan_body(belief_predicates,non_belief_predicates,terms))))(BasicPComp(nonbeliefpred))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="SeqComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="ConcurrentComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicatev" org.eventb.core.label="GetFirsts" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)) ◁ (id ⦂ ℙ(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))×ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)))))({BasicPComp(evt)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="{EventComp(evt,planlib)}"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="GetFirsts(l)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="GetFirsts(l)∪GetFirsts(r)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{GoalComp(succes,planrec,failure)}"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="GetFirsts(cur)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicatew" org.eventb.core.label="update" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="prev" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="new" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="new"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="new"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="new"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="SeqComp(update(l,prev,new),r)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{pre⦂Plan_body(belief_predicates,non_belief_predicates,terms),ne⦂Plan_body(belief_predicates,non_belief_predicates,terms)·(pre∈GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(update(l,pre,new),r))∨(pre∈GetFirsts(r)∧ne=ConcurrentComp(l,update(r,pre,new)))∨(pre∉GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(l,r)) ∣ pre ↦ ne}(prev)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="GoalComp(succes,update(planrec,prev,new),failure)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="Rhd(update(cur,prev,new),back)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicatex" org.eventb.core.label="isBasicComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicatey" org.eventb.core.label="isSeqComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicatez" org.eventb.core.label="isConcurrentComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicate{" org.eventb.core.label="isGoalComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="non_belief_predicate|" org.eventb.core.label="isRhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+">
        <org.eventb.theory.core.scMetavariable name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="evt" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="non_belief_predicates×terms"/>
        <org.eventb.theory.core.scMetavariable name="planlib" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms)))"/>
        <org.eventb.theory.core.scMetavariable name="l" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="r" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="failure" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
        <org.eventb.theory.core.scMetavariable name="planrec" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="succes" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
        <org.eventb.theory.core.scMetavariable name="back" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="cur" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="uP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="Plan_library" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="ℙ(non_belief_predicates×ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms))))"/>
        <org.eventb.theory.core.scMetavariable name="evtxterms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="non_belief_predicates×terms"/>
        <org.eventb.theory.core.scMetavariable name="fail" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
        <org.eventb.theory.core.scMetavariable name="nonbeliefpred" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="non_belief_predicates×terms"/>
        <org.eventb.theory.core.scMetavariable name="ag1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="ag2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="prev" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scMetavariable name="new" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isEventComp case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isEventComp case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isEventComp expansion" org.eventb.theory.core.formula="isEventComp(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isEventComp rhs" org.eventb.core.label="isEventComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.UserP2Plan_body case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.UserP2Plan_body case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="UserP2Plan_body expansion" org.eventb.theory.core.formula="UserP2Plan_body(Goal(succes,evtxterms,fail),Plan_library)">
            <org.eventb.theory.core.scRewriteRuleRHS name="UserP2Plan_body rhs" org.eventb.core.label="UserP2Plan_body rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="GoalComp(succes,EventComp(evtxterms,Plan_library((prj1 ⦂ ℙ(non_belief_predicates×terms×non_belief_predicates))(evtxterms))),fail)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.UserP2Plan_body case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.UserP2Plan_body case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="UserP2Plan_body expansion" org.eventb.theory.core.formula="UserP2Plan_body(BasicP(nonbeliefpred),Plan_library)">
            <org.eventb.theory.core.scRewriteRuleRHS name="UserP2Plan_body rhs" org.eventb.core.label="UserP2Plan_body rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms) ◁ (id ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)×Plan_body(belief_predicates,non_belief_predicates,terms))))(BasicPComp(nonbeliefpred))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.UserP2Plan_body case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.UserP2Plan_body case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="UserP2Plan_body expansion" org.eventb.theory.core.formula="UserP2Plan_body(Seq(ag1,ag2),Plan_library)">
            <org.eventb.theory.core.scRewriteRuleRHS name="UserP2Plan_body rhs" org.eventb.core.label="UserP2Plan_body rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="SeqComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.UserP2Plan_body case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.UserP2Plan_body case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="UserP2Plan_body expansion" org.eventb.theory.core.formula="UserP2Plan_body(Concurrent(ag1,ag2),Plan_library)">
            <org.eventb.theory.core.scRewriteRuleRHS name="UserP2Plan_body rhs" org.eventb.core.label="UserP2Plan_body rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="ConcurrentComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="∅ ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)) ◁ (id ⦂ ℙ(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))×ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)))))({BasicPComp(evt)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="{EventComp(evt,planlib)}"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="GetFirsts(l)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="GetFirsts(l)∪GetFirsts(r)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="{GoalComp(succes,planrec,failure)}"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.GetFirsts case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.GetFirsts case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="GetFirsts expansion" org.eventb.theory.core.formula="GetFirsts(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="GetFirsts rhs" org.eventb.core.label="GetFirsts rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="GetFirsts(cur)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="new"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(BasicPComp(evt),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="new"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(EventComp(evt,planlib),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="new"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(SeqComp(l,r),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="SeqComp(update(l,prev,new),r)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(ConcurrentComp(l,r),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="{pre⦂Plan_body(belief_predicates,non_belief_predicates,terms),ne⦂Plan_body(belief_predicates,non_belief_predicates,terms)·(pre∈GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(update(l,pre,new),r))∨(pre∈GetFirsts(r)∧ne=ConcurrentComp(l,update(r,pre,new)))∨(pre∉GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(l,r)) ∣ pre ↦ ne}(prev)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(GoalComp(succes,planrec,failure),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="GoalComp(succes,update(planrec,prev,new),failure)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.update case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.update case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="update expansion" org.eventb.theory.core.formula="update(Rhd(cur,back),prev,new)">
            <org.eventb.theory.core.scRewriteRuleRHS name="update rhs" org.eventb.core.label="update rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.formula="Rhd(update(cur,prev,new),back)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isBasicComp case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isBasicComp case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isBasicComp expansion" org.eventb.theory.core.formula="isBasicComp(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isBasicComp rhs" org.eventb.core.label="isBasicComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isSeqComp case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isSeqComp case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isSeqComp expansion" org.eventb.theory.core.formula="isSeqComp(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isSeqComp rhs" org.eventb.core.label="isSeqComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isConcurrentComp case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isConcurrentComp case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isConcurrentComp expansion" org.eventb.theory.core.formula="isConcurrentComp(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isConcurrentComp rhs" org.eventb.core.label="isConcurrentComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isGoalComp case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isGoalComp case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isGoalComp expansion" org.eventb.theory.core.formula="isGoalComp(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isGoalComp rhs" org.eventb.core.label="isGoalComp rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(BasicPComp(evt))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(EventComp(evt,planlib))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(SeqComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(ConcurrentComp(l,r))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(GoalComp(succes,planrec,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRhd case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRhd case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRhd expansion" org.eventb.theory.core.formula="isRhd(Rhd(cur,back))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRhd rhs" org.eventb.core.label="isRhd rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.deployedTheoryRoot>
