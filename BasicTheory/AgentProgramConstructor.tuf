<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.theoryRoot org.eventb.core.configuration="org.eventb.theory.core.thy">
    <org.eventb.theory.core.typeParameter name="'" org.eventb.core.identifier="belief_predicates"/>
    <org.eventb.theory.core.typeParameter name="(" org.eventb.core.identifier="non_belief_predicates"/>
    <org.eventb.theory.core.typeParameter name=")" org.eventb.core.identifier="terms"/>
    <org.eventb.theory.core.newOperatorDefinition name="+" org.eventb.core.comment="Just to make a example of a filter to add in the guard. " org.eventb.core.label="isEventComp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="/" org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.datatypeDefinition name="element:" org.eventb.core.comment="The two data type follow the grammar define in the fig 4 a yours SCP paper entitle &quot;Modelling and verifying BDI agents with bigraphs&quot;" org.eventb.core.identifier="UserP">
        <org.eventb.theory.core.typeArgument name="'" org.eventb.theory.core.givenType="belief_predicates"/>
        <org.eventb.theory.core.typeArgument name="(" org.eventb.theory.core.givenType="non_belief_predicates"/>
        <org.eventb.theory.core.typeArgument name=")" org.eventb.theory.core.givenType="terms"/>
        <org.eventb.theory.core.datatypeConstructor name="element1" org.eventb.core.identifier="BasicP">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="getBasicP" org.eventb.theory.core.type="non_belief_predicates ×terms"/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="element2" org.eventb.core.identifier="Seq">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="leftSeq" org.eventb.theory.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="rightSeq" org.eventb.theory.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="element3" org.eventb.core.identifier="Concurrent">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="leftConc" org.eventb.theory.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="rightConc" org.eventb.theory.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="element4" org.eventb.core.identifier="Goal">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="SuccesUser" org.eventb.theory.core.type="ℙ(belief_predicates×terms)"/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="EventUser" org.eventb.theory.core.type="non_belief_predicates×terms"/>
            <org.eventb.theory.core.constructorArgument name=")" org.eventb.core.identifier="FailureUser" org.eventb.theory.core.type="ℙ(belief_predicates×terms)"/>
        </org.eventb.theory.core.datatypeConstructor>
    </org.eventb.theory.core.datatypeDefinition>
    <org.eventb.theory.core.datatypeDefinition name="*" org.eventb.core.identifier="Plan_body">
        <org.eventb.theory.core.typeArgument name="'" org.eventb.theory.core.givenType="belief_predicates"/>
        <org.eventb.theory.core.typeArgument name="(" org.eventb.theory.core.givenType="non_belief_predicates"/>
        <org.eventb.theory.core.typeArgument name=")" org.eventb.theory.core.givenType="terms"/>
        <org.eventb.theory.core.datatypeConstructor name="/" org.eventb.core.identifier="NilComp"/>
        <org.eventb.theory.core.datatypeConstructor name="+" org.eventb.core.identifier="BasicPComp">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="getBasicPB" org.eventb.theory.core.type="non_belief_predicates ×terms"/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="-" org.eventb.core.identifier="SeqComp">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="head" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="tail" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="." org.eventb.core.identifier="ConcurrentComp">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="left" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="right" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="*" org.eventb.core.identifier="GoalComp">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="SuccessComp" org.eventb.theory.core.type="ℙ (belief_predicates × terms)"/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="getGoalPlanBody" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
            <org.eventb.theory.core.constructorArgument name=")" org.eventb.core.identifier="FailureComp" org.eventb.theory.core.type="ℙ (belief_predicates × terms)"/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="element1" org.eventb.core.comment=" it is the name of the command in latex for the symbol to define the backup, of course you can change it. " org.eventb.core.identifier="Rhd">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="current" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="backup" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms) "/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="element2" org.eventb.core.identifier="EventComp">
            <org.eventb.theory.core.constructorArgument name="'" org.eventb.core.identifier="getEvent" org.eventb.theory.core.type="non_belief_predicates×terms"/>
            <org.eventb.theory.core.constructorArgument name="(" org.eventb.core.identifier="UserPlan" org.eventb.theory.core.type="ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms)))"/>
        </org.eventb.theory.core.datatypeConstructor>
        <org.eventb.theory.core.datatypeConstructor name="element3" org.eventb.core.comment="for declarative goal when the failure conditions holds, it progresses to False. " org.eventb.core.identifier="False"/>
    </org.eventb.theory.core.datatypeDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="element;" org.eventb.core.label="UserP2Plan_body" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="UserP(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="uP"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="uP">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.comment="GoalComp(succes,EventComp(evtxterms,Plan_library(prj1(evtxterms))  ),fail)   why should it be ? " org.eventb.core.expression="Goal(success,evtxterms,fail)" org.eventb.theory.core.formula="GoalComp(success, BasicPComp(evtxterms), fail)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.comment="I add the id application to Id to add the missing information for the typing " org.eventb.core.expression="BasicP(nonbeliefpred)" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms)◁id)(BasicPComp(nonbeliefpred))"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="Seq(ag1,ag2)" org.eventb.theory.core.formula="SeqComp(UserP2Plan_body( ag1)  , UserP2Plan_body(ag2)  )"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="Concurrent(ag1,ag2)" org.eventb.theory.core.formula="ConcurrentComp( UserP2Plan_body( ag1)   , UserP2Plan_body(ag2)    ) "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="element=" org.eventb.core.comment="similar to the stack, get first return the set of atomic elementon the top of the plan " org.eventb.core.label="GetFirsts" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))◁id)({NilComp})"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula=" (ℙ(Plan_body(belief_predicates,non_belief_predicates,terms) )◁ id)({BasicPComp(evt)})"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.comment="corresponds to the rule of ;" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="GetFirsts(l)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.comment="corresponds to the rule of ||1 and ||2" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="GetFirsts(l)∪GetFirsts(r)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="{GoalComp(succes,planrec,failure) }"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.comment="corresponds to the rule rhd_;" org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="GetFirsts(cur)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="{EventComp(evt,planlib)}"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))◁id)({False})"/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="element&gt;" org.eventb.core.comment="update a plan, and preserve the concurent et sequence order" org.eventb.core.label="update" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.operatorArgument name="(" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="prev"/>
        <org.eventb.theory.core.operatorArgument name=")" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="new"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="*" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="new"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.comment="corresponds to the rule ;" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="SeqComp(update(l,prev,new),r)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.comment="the third is for well-definedness, most of time, update will only happen meaningfully to actually change the intention" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="{pre↦ne∣ (pre∈GetFirsts(l)∧ pre∉GetFirsts(r)∧ne=ConcurrentComp(update(l,pre,new),r))&#10;&#9;&#9;∨ ( pre∈GetFirsts(r) ∧ne=ConcurrentComp(l,update(r,pre,new)))&#10;&#9;&#9;∨ (pre∉GetFirsts(l)∧ pre∉GetFirsts(r)∧ ne= ConcurrentComp(l,r) )  }(prev)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="GoalComp(succes,update(planrec,prev,new),failure)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="Rhd(update(cur,prev,new) ,back) "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="new"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.comment="no change as i do not need the case of nil, but the Rodin forces me to include all cases" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms)◁id)(NilComp)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="/" org.eventb.core.expression="False" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms)◁id)(False)"/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="element?" org.eventb.core.label="isBasicComp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="element@" org.eventb.core.label="isSeqComp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="elementA" org.eventb.core.label="isConcurrentComp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="elementB" org.eventb.core.label="isGoalComp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="elementC" org.eventb.core.label="isRhd" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="elementD" org.eventb.core.label="isNilComp" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊤ "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊥ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="elementE" org.eventb.core.comment="the operator to deal with the update of intention when there is nil, including sequence, Rhd, and concurrency. " org.eventb.core.label="NilRemove" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan_body"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan_body">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.comment="the ID is to infer the missing type information, this implies ultimately in the end, a successfully completed intention wil become a nil, which is actually nice for us to handle, or leave us a problem with nil after nil || nil" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms)◁id)(NilComp) "/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms)◁id)(BasicPComp(evt))"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="GoalComp(success,plan,failure)" org.eventb.theory.core.formula="GoalComp(success,NilRemove(plan),failure)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="{plan,l1,r1 · (isNilComp(l1) ∧ plan=r1) ∨ (¬isNilComp(l1) ∧ plan=SeqComp(NilRemove(l1),r1))∣(l1↦r1)↦plan}(l↦r)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula=" {plan,l1,r1, l2, r2 · l2=NilRemove(l1) ∧ r2=NilRemove(r1) ∧ ( (isNilComp(l2) ∧ isNilComp(r2) ∧ plan= NilComp) ∨ ( (¬ isNilComp(l2)  ∨ ¬ isNilComp(r2) ) ∧ plan = ConcurrentComp(l2, r2) ) ) ∣ (l1↦r1)↦plan}(l↦r)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(plan,plans)" org.eventb.theory.core.formula="{finalplan,plan1, plans1 · (isNilComp(plan1) ∧ finalplan = NilComp) ∨ (¬ isNilComp(plan1) ∧ finalplan= Rhd(NilRemove(plan1),plans1)) ∣ (plan1 ↦ plans1) ↦ finalplan}(plan ↦ plans)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.comment="nothing will need to change" org.eventb.core.expression="EventComp(evt,userplan)" org.eventb.theory.core.formula="EventComp(evt,userplan)"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms)◁id)(False) "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
    <org.eventb.theory.core.newOperatorDefinition name="elementF" org.eventb.core.label="isFalse" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.operatorArgument name="'" org.eventb.core.expression="Plan_body(belief_predicates,non_belief_predicates,terms) " org.eventb.core.identifier="plan"/>
        <org.eventb.theory.core.recursiveOperatorDefinition name="(" org.eventb.theory.core.inductiveArgument="plan">
            <org.eventb.theory.core.recursiveDefinitionCase name="'" org.eventb.core.expression="NilComp" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.recursiveDefinitionCase name="." org.eventb.core.expression="False" org.eventb.theory.core.formula="⊤ "/>
        </org.eventb.theory.core.recursiveOperatorDefinition>
    </org.eventb.theory.core.newOperatorDefinition>
</org.eventb.theory.core.theoryRoot>
