<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.theory.core.scTheoryRoot org.eventb.core.accurate="false" org.eventb.core.configuration="org.eventb.theory.core.thy" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf">
    <org.eventb.theory.core.scTypeParameter name="Belief_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#'" org.eventb.core.type="ℙ(Belief_predicate_symbols)"/>
    <org.eventb.theory.core.scTypeParameter name="Event_Action_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#(" org.eventb.core.type="ℙ(Event_Action_predicate_symbols)"/>
    <org.eventb.theory.core.scTypeParameter name="Terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.typeParameter#)" org.eventb.core.type="ℙ(Terms)"/>
    <org.eventb.theory.core.scDatatypeDefinition name="UserP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="Belief_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="Belief_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Event_Action_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="Event_Action_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="Terms"/>
        <org.eventb.theory.core.scDatatypeConstructor name="BasicP_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element1">
            <org.eventb.theory.core.scConstructorArgument name="basic_program_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Sequence_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2">
            <org.eventb.theory.core.scConstructorArgument name="head_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="UserP"/>
            <org.eventb.theory.core.scConstructorArgument name="tail_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="UserP"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Concurrency_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3">
            <org.eventb.theory.core.scConstructorArgument name="left_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="UserP"/>
            <org.eventb.theory.core.scConstructorArgument name="right_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element3|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="UserP"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Declarative_goal_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4">
            <org.eventb.theory.core.scConstructorArgument name="success_condition_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
            <org.eventb.theory.core.scConstructorArgument name="event_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
            <org.eventb.theory.core.scConstructorArgument name="failure_condition_user" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#element:|org.eventb.theory.core.datatypeConstructor#element4|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scDatatypeDefinition name="P" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*" org.eventb.theory.core.hasError="false">
        <org.eventb.theory.core.scTypeArgument name="Belief_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#'" org.eventb.theory.core.givenType="Belief_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Event_Action_predicate_symbols" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#(" org.eventb.theory.core.givenType="Event_Action_predicate_symbols"/>
        <org.eventb.theory.core.scTypeArgument name="Terms" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.typeArgument#)" org.eventb.theory.core.givenType="Terms"/>
        <org.eventb.theory.core.scDatatypeConstructor name="Nil" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#\/"/>
        <org.eventb.theory.core.scDatatypeConstructor name="BasicP_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#+">
            <org.eventb.theory.core.scConstructorArgument name="basic_program_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#+|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Sequence_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-">
            <org.eventb.theory.core.scConstructorArgument name="head_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="tail_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#-|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Concurrency_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.">
            <org.eventb.theory.core.scConstructorArgument name="left_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="right_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#.|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Declarative_goal_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*">
            <org.eventb.theory.core.scConstructorArgument name="success_condition" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
            <org.eventb.theory.core.scConstructorArgument name="procedural_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="failure_condition" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#*|org.eventb.theory.core.constructorArgument#)" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Try_current_with_backups" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1">
            <org.eventb.theory.core.scConstructorArgument name="current_intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="P"/>
            <org.eventb.theory.core.scConstructorArgument name="backup_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element1|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="P"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="Relevant_plans" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2">
            <org.eventb.theory.core.scConstructorArgument name="triggering_event" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#'" org.eventb.core.type="Event_Action_predicate_symbols"/>
            <org.eventb.theory.core.scConstructorArgument name="set_of_guarded_plan_bodies" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element2|org.eventb.theory.core.constructorArgument#(" org.eventb.core.type="ℙ(ℙ(Belief_predicate_symbols×Terms)×UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        </org.eventb.theory.core.scDatatypeConstructor>
        <org.eventb.theory.core.scDatatypeConstructor name="False" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.datatypeDefinition#*|org.eventb.theory.core.datatypeConstructor#element3"/>
    </org.eventb.theory.core.scDatatypeDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolt" org.eventb.core.label="isRevelant_plans" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊤"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="/" org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#\/" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolu" org.eventb.core.label="type_UserP_to_P" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="userP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="userP">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Declarative_goal_user(s,evt,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="Declarative_goal_intention(s,BasicP_intention(evt),failure)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="BasicP_user(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Sequence_user(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="Sequence_intention(type_UserP_to_P(head),type_UserP_to_P(tail))"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Concurrency_user(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="Concurrency_intention(type_UserP_to_P(left),type_UserP_to_P(right))"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolv" org.eventb.core.label="next_programs_to_progress" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))" org.eventb.theory.core.wd="⊤">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="intention">
            <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicP_intention(basic_program)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({BasicP_intention(basic_program)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Relevant_plans(event,guarded_plan_bodies)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="{Relevant_plans(event,guarded_plan_bodies)}"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Sequence_intention(head,tail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="next_programs_to_progress(head)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Concurrency_intention(left,right)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="next_programs_to_progress(left)∪next_programs_to_progress(right)"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="Declarative_goal_intention(s,procedual,f)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{Declarative_goal_intention(s,procedual,f)}"/>
            <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Try_current_with_backups(current,backups)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="next_programs_to_progress(current)"/>
        </org.eventb.theory.core.scRecursiveOperatorDefinition>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolw" org.eventb.core.label="update_intention" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX">
        <org.eventb.theory.core.scOperatorArgument name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="current_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scOperatorArgument name="new_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="intention"/>
    </org.eventb.theory.core.scNewOperatorDefinition>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolx" org.eventb.core.label="isBasicComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symboly" org.eventb.core.label="isSeqComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbolz" org.eventb.core.label="isConcurrentComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol{" org.eventb.core.label="isGoalComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol|" org.eventb.core.label="isRhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol}" org.eventb.core.label="isNilComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementD" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbol~" org.eventb.core.label="NilRemove" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementE" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbom'" org.eventb.core.label="isFalse" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementF" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbom(" org.eventb.core.label="Failure_Recovery" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scNewOperatorDefinition name="Event_Action_predicate_symbom)" org.eventb.core.label="GetFirstRhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementG" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.hasError="true" org.eventb.theory.core.notationType="PREFIX"/>
    <org.eventb.theory.core.scProofRulesBlock name="generatedBlock" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+">
        <org.eventb.theory.core.scMetavariable name="intention" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="basic_program" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊤"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="event" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="Event_Action_predicate_symbols"/>
        <org.eventb.theory.core.scMetavariable name="guarded_plan_bodies" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(ℙ(Belief_predicate_symbols×Terms)×UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="head" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="tail" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="left" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="right" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="f" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        <org.eventb.theory.core.scMetavariable name="procedual" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="s" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.isRevelant_plans case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.isRevelant_plans case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="isRevelant_plans expansion" org.eventb.theory.core.formula="isRevelant_plans(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="isRevelant_plans rhs" org.eventb.core.label="isRevelant_plans rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.formula="⊥"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="backups" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="current" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.core.type="P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="userP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(Declarative_goal_user(s,evt,failure))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="Declarative_goal_intention(s,BasicP_intention(evt),failure)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="evt" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="Event_Action_predicate_symbols×Terms"/>
        <org.eventb.theory.core.scMetavariable name="failure" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="ℙ(Belief_predicate_symbols×Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(BasicP_user(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms) ◁ (id ⦂ ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)×P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))))(BasicP_intention(basic_program))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(Sequence_user(head_,tail_))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="Sequence_intention(type_UserP_to_P(head_),type_UserP_to_P(tail_))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="head_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="tail_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.type_UserP_to_P case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.type_UserP_to_P case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="type_UserP_to_P expansion" org.eventb.theory.core.formula="type_UserP_to_P(Concurrency_user(left_,right_))">
            <org.eventb.theory.core.scRewriteRuleRHS name="type_UserP_to_P rhs" org.eventb.core.label="type_UserP_to_P rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.formula="Concurrency_intention(type_UserP_to_P(left_),type_UserP_to_P(right_))"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scMetavariable name="left_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scMetavariable name="right_" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.core.type="UserP(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)"/>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 0" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 0" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({Nil ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 1" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(BasicP_intention(basic_program))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({BasicP_intention(basic_program)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 2" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 2" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Relevant_plans(event,guarded_plan_bodies))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="{Relevant_plans(event,guarded_plan_bodies)}"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 3" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 3" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)) ◁ (id ⦂ ℙ(ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms))×ℙ(P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)))))({False ⦂ P(Belief_predicate_symbols,Event_Action_predicate_symbols,Terms)})"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 4" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 4" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Sequence_intention(head,tail))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="next_programs_to_progress(head)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 5" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 5" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Concurrency_intention(left,right))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="next_programs_to_progress(left)∪next_programs_to_progress(right)"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 6" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 6" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Declarative_goal_intention(s,procedual,f))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="{Declarative_goal_intention(s,procedual,f)}"/>
        </org.eventb.theory.core.scRewriteRule>
        <org.eventb.theory.core.scRewriteRule name="AgentProgramConstructor.next_programs_to_progress case 7" org.eventb.core.accurate="true" org.eventb.core.label="AgentProgramConstructor.next_programs_to_progress case 7" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.applicability="interactive" org.eventb.theory.core.complete="true" org.eventb.theory.core.definitional="true" org.eventb.theory.core.desc="next_programs_to_progress expansion" org.eventb.theory.core.formula="next_programs_to_progress(Try_current_with_backups(current,backups))">
            <org.eventb.theory.core.scRewriteRuleRHS name="next_programs_to_progress rhs" org.eventb.core.label="next_programs_to_progress rhs" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.formula="next_programs_to_progress(current)"/>
        </org.eventb.theory.core.scRewriteRule>
    </org.eventb.theory.core.scProofRulesBlock>
</org.eventb.theory.core.scTheoryRoot>
