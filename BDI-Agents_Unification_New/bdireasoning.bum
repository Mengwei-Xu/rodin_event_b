<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.machineFile org.eventb.core.configuration="org.eventb.core.fwd" version="5">
    <org.eventb.core.event name="'" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="INITIALISATION">
        <org.eventb.core.action name="'" org.eventb.core.assignment="belief_base ≔ Initial_belief_base" org.eventb.core.label="act1"/>
        <org.eventb.core.action name="(" org.eventb.core.assignment="external_events ≔ Initial_external_event_set" org.eventb.core.label="act2"/>
        <org.eventb.core.action name=")" org.eventb.core.assignment="intentions ≔ ∅" org.eventb.core.label="act3"/>
    </org.eventb.core.event>
    <org.eventb.core.seesContext name="(" org.eventb.core.target="BDIcontext"/>
    <org.eventb.core.event name=")" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="AddressExternalEvent">
        <org.eventb.core.guard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="event ↦ terms ∈ external_events"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="event"/>
        <org.eventb.core.action name="*" org.eventb.core.assignment="intentions ≔ intentions ∪ {BasicPComp(event ↦ terms)}" org.eventb.core.comment="Here for type convenience the external event is treated as a non-declarative problem which is the case " org.eventb.core.label="act1"/>
        <org.eventb.core.parameter name="+" org.eventb.core.identifier="terms"/>
        <org.eventb.core.action name="," org.eventb.core.assignment="external_events ≔ external_events ∖ {(event ↦ terms)} " org.eventb.core.label="act2"/>
    </org.eventb.core.event>
    <org.eventb.core.variable name="*" org.eventb.core.identifier="belief_base"/>
    <org.eventb.core.invariant name="+" org.eventb.core.label="inv1" org.eventb.core.predicate="belief_base ∈ ℙ(Belief_predicates × Terms)"/>
    <org.eventb.core.variable name="," org.eventb.core.identifier="external_events"/>
    <org.eventb.core.invariant name="-" org.eventb.core.label="inv2" org.eventb.core.predicate="external_events ∈ ℙ(Events × Terms)"/>
    <org.eventb.core.variable name="." org.eventb.core.identifier="intentions"/>
    <org.eventb.core.invariant name="/" org.eventb.core.label="inv3" org.eventb.core.predicate="intentions ∈ ℙ(Plan_body(Belief_predicates,None_belief_predicates,Terms)) "/>
    <org.eventb.core.event name="6" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SelectRelevantPlans">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="event"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="intention ∈ intentions"/>
        <org.eventb.core.parameter name="*" org.eventb.core.identifier="terms"/>
        <org.eventb.core.parameter name="," org.eventb.core.identifier="intention"/>
        <org.eventb.core.guard name="6" org.eventb.core.label="grd2" org.eventb.core.predicate="nextP∈GetFirsts(intention)"/>
        <org.eventb.core.guard name="4" org.eventb.core.comment="check the chosen top element is a basic program" org.eventb.core.label="grd3" org.eventb.core.predicate="isBasicComp(nextP)"/>
        <org.eventb.core.guard name="-" org.eventb.core.comment="destruct BasicComp to extract the terms and the event " org.eventb.core.label="grd4" org.eventb.core.predicate="getBasicPB(nextP)=event↦terms"/>
        <org.eventb.core.action name="0" org.eventb.core.assignment="intentions ≔ (intentions∖{intention}) ∪ {update(intention,nextP, newnextP)}" org.eventb.core.label="act1"/>
        <org.eventb.core.parameter name="5" org.eventb.core.identifier="nextP"/>
        <org.eventb.core.guard name="7" org.eventb.core.label="grd5" org.eventb.core.predicate="newnextP = EventComp(event↦terms, Plan_body_def(event))"/>
        <org.eventb.core.parameter name="8" org.eventb.core.identifier="newnextP"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt1" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="SelectApplicablePlan">
        <org.eventb.core.guard name="0" org.eventb.core.label="grd1" org.eventb.core.predicate="intention ∈ intentions"/>
        <org.eventb.core.guard name="8" org.eventb.core.label="grd2" org.eventb.core.predicate="nextP ∈ GetFirsts(intention)"/>
        <org.eventb.core.guard name="?" org.eventb.core.comment="check the chosen top element is an EventComp" org.eventb.core.label="grd3" org.eventb.core.predicate="isEventComp(nextP)"/>
        <org.eventb.core.action name=")" org.eventb.core.assignment="intentions ≔ (intentions ∖ {intention}) ∪ {update(intention, nextP, newnextP)}" org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="D" org.eventb.core.label="grd4" org.eventb.core.predicate="getEvent(nextP) = event ↦ terms"/>
        <org.eventb.core.guard name=";" org.eventb.core.comment="compute the applicable plan-body given the event, plan (i.e. identifier), current belief base, and the terms that are inherited from the event. The trick part to understand is that the plan body and its terms are defined together with terms  in the event and context.    " org.eventb.core.label="grd5" org.eventb.core.predicate="applicable_plan_body ∈ UserPlan(nextP)(belief_base ↦ terms)" org.eventb.core.theorem="true"/>
        <org.eventb.core.guard name="9" org.eventb.core.comment="the lambada expression is important to ensure we only remove a specific blinded plan body away from all possible blinded version for all relevant plans' plan bodies " org.eventb.core.label="grd6" org.eventb.core.predicate="newnextP = Rhd(UserP2Plan_body(applicable_plan_body, Plan_body_def), EventComp(event ↦ terms, (λ belief ↦ terms1 · terms1 ∈ Point ∣ UserPlan(nextP)(belief ↦ terms1) ∖ {applicable_plan_body}) )) "/>
        <org.eventb.core.parameter name="4" org.eventb.core.identifier="event"/>
        <org.eventb.core.parameter name="@" org.eventb.core.identifier="terms"/>
        <org.eventb.core.parameter name="1" org.eventb.core.identifier="intention"/>
        <org.eventb.core.parameter name="C" org.eventb.core.identifier="nextP"/>
        <org.eventb.core.parameter name="B" org.eventb.core.identifier="applicable_plan_body"/>
        <org.eventb.core.parameter name="E" org.eventb.core.identifier="newnextP"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="1" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="ExecuteAction">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="intention_stack"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="action"/>
        <org.eventb.core.guard name="6" org.eventb.core.label="grd1" org.eventb.core.predicate="{event ↦ terms1} ↦ intention_stack ∈ intentions "/>
        <org.eventb.core.guard name="+" org.eventb.core.label="grd2" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.action name="-" org.eventb.core.assignment="belief_base ≔ next_belief_base" org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="8" org.eventb.core.comment="type declaration" org.eventb.core.label="grd3" org.eventb.core.predicate="action ∈ Actions "/>
        <org.eventb.core.guard name="&gt;" org.eventb.core.comment="in case action is one of the concurrent program and terms2 belongs to action, not same as terms1 which belongs to event. And terms2 should be already inferred either from grounded event, or belief base." org.eventb.core.label="grd4" org.eventb.core.predicate="constructNDG({action} ↦ terms2) ∈ pop(intention_stack) "/>
        <org.eventb.core.guard name="?" org.eventb.core.comment="this expression atm is due to the set comprehension definition of Preconditions" org.eventb.core.label="grd5" org.eventb.core.predicate="action ↦terms2∈dom(Preconditions)"/>
        <org.eventb.core.guard name="1" org.eventb.core.comment="check if this action is applicable with already inferred terms2 and other related terms. This process happens in the definition of Plan_body. " org.eventb.core.label="grd6" org.eventb.core.predicate="Preconditions[{action ↦ terms2}] ⊆ belief_base"/>
        <org.eventb.core.action name="2" org.eventb.core.assignment="intentions ≔ next_intentions  " org.eventb.core.label="act2"/>
        <org.eventb.core.parameter name="4" org.eventb.core.identifier="event"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="terms1"/>
        <org.eventb.core.parameter name="5" org.eventb.core.identifier="terms2"/>
        <org.eventb.core.parameter name="9" org.eventb.core.identifier="next_intentions"/>
        <org.eventb.core.guard name="@" org.eventb.core.comment="in case there are some concurrent agent programs" org.eventb.core.label="grd7" org.eventb.core.predicate="updated_top_stack = pop(intention_stack) ∖ {constructNDG({action} ↦ terms2)}"/>
        <org.eventb.core.guard name=":" org.eventb.core.label="grd8" org.eventb.core.predicate="next_intentions=(intentions ∖ {{event ↦ terms1} ↦ intention_stack}) ∪ {{event ↦ terms1} ↦ push(updated_top_stack, next_stack(intention_stack))} "/>
        <org.eventb.core.parameter name=";" org.eventb.core.identifier="next_belief_base"/>
        <org.eventb.core.guard name="=" org.eventb.core.label="grd9" org.eventb.core.predicate="next_belief_base=(belief_base ∖ Deletion_sets[{action ↦ terms2}]) ∪ Addition_sets[{action ↦ terms2}]"/>
        <org.eventb.core.parameter name="A" org.eventb.core.identifier="updated_top_stack"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="7" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="FailureRecoveryBlockedAction">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="intention_stack"/>
        <org.eventb.core.guard name="4" org.eventb.core.label="grd1" org.eventb.core.predicate="({(event ↦ terms1)} ↦ intention_stack) ∈ intentions"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="action ∈Actions"/>
        <org.eventb.core.action name=")" org.eventb.core.assignment="intentions ≔ (intentions ∖ {{event ↦ terms1} ↦ intention_stack}) ∪  {{event ↦ terms1} ↦ push({constructNDG(dom(Plan_body(event)) ↦ terms1)},Empty)}" org.eventb.core.label="act1"/>
        <org.eventb.core.parameter name="*" org.eventb.core.identifier="action"/>
        <org.eventb.core.parameter name="+" org.eventb.core.identifier="event"/>
        <org.eventb.core.parameter name="-" org.eventb.core.identifier="terms1"/>
        <org.eventb.core.parameter name="." org.eventb.core.identifier="terms2"/>
        <org.eventb.core.guard name="5" org.eventb.core.label="grd3" org.eventb.core.predicate="notEmpty(intention_stack)" org.eventb.core.theorem="true"/>
        <org.eventb.core.guard name="1" org.eventb.core.label="grd4" org.eventb.core.predicate="constructNDG({action} ↦ terms2) ∈ pop(intention_stack) "/>
        <org.eventb.core.guard name="2" org.eventb.core.label="grd5" org.eventb.core.predicate="Preconditions[{action ↦ terms2}] ⊈ belief_base"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt8" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="FailureRecoveryNoneApplicablePlanNoneRootEvent">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="intention_stack1"/>
        <org.eventb.core.guard name="*" org.eventb.core.label="grd1" org.eventb.core.predicate="({event1 ↦ terms1} ↦ intention_stack1) ∈ intentions"/>
        <org.eventb.core.guard name="7" org.eventb.core.label="grd2" org.eventb.core.predicate="({event2 ↦ terms2} ↦ intention_stack2) ∈ intentions"/>
        <org.eventb.core.guard name="+" org.eventb.core.label="grd3" org.eventb.core.predicate="notEmpty(intention_stack1)"/>
        <org.eventb.core.action name="," org.eventb.core.assignment="intentions ≔ (intentions ∖ {{event1 ↦ terms1} ↦ intention_stack1, {event2 ↦ terms2} ↦ intention_stack2}) ∪ {{event2 ↦ terms2} ↦ push({constructNDG(dom(Plan_body(event2)) ↦ terms2)},Empty)}  " org.eventb.core.label="act1"/>
        <org.eventb.core.guard name="9" org.eventb.core.label="grd4" org.eventb.core.predicate="notEmpty(intention_stack2)"/>
        <org.eventb.core.guard name="-" org.eventb.core.label="grd5" org.eventb.core.predicate="constructNDG(relevant_plans1 ↦ terms1) ∈ pop(intention_stack1)"/>
        <org.eventb.core.guard name="=" org.eventb.core.label="grd6" org.eventb.core.predicate="constructNDG({event1} ↦ terms1) ∈ pop(intention_stack2) "/>
        <org.eventb.core.guard name="." org.eventb.core.label="grd7" org.eventb.core.predicate="∀ plan · plan ∈ relevant_plans1 ⇒  (Plan_body(event1)(plan)(belief_base↦terms1) = ∅ ∨  ( ∃ applicable_plan_body_stack · applicable_plan_body_stack ∈ Plan_body(event1)(plan)(belief_base↦terms1) ∧ event1↦terms1↦applicable_plan_body_stack  ∈ alreadytry))"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="event1"/>
        <org.eventb.core.parameter name="2" org.eventb.core.identifier="terms1"/>
        <org.eventb.core.parameter name="/" org.eventb.core.identifier="relevant_plans1"/>
        <org.eventb.core.parameter name="0" org.eventb.core.identifier="intention_stack2"/>
        <org.eventb.core.parameter name="?" org.eventb.core.identifier="event2"/>
        <org.eventb.core.parameter name="@" org.eventb.core.identifier="terms2"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt;" org.eventb.core.comment="in this case, we also simply remove the intention that is linked directly with the external event" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="FailureRecoveryNoneApplicablePlanRootEvent">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="intention_stack1"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="event1"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="terms1"/>
        <org.eventb.core.parameter name="3" org.eventb.core.identifier="relevant_plans1"/>
        <org.eventb.core.parameter name="*" org.eventb.core.identifier="intention_stack2"/>
        <org.eventb.core.guard name="+" org.eventb.core.label="grd1" org.eventb.core.predicate="({event1 ↦ terms1} ↦ intention_stack1) ∈ intentions"/>
        <org.eventb.core.guard name="," org.eventb.core.label="grd2" org.eventb.core.predicate="( ∅ ↦ intention_stack2) ∈ intentions"/>
        <org.eventb.core.guard name="-" org.eventb.core.label="grd3" org.eventb.core.predicate="notEmpty(intention_stack1)"/>
        <org.eventb.core.guard name="." org.eventb.core.label="grd4" org.eventb.core.predicate="notEmpty(intention_stack2)"/>
        <org.eventb.core.guard name="/" org.eventb.core.label="grd5" org.eventb.core.predicate="constructNDG(relevant_plans1 ↦ terms1) ∈ pop(intention_stack1)"/>
        <org.eventb.core.guard name="0" org.eventb.core.comment="i use the more precise version to hightlight the unique situation when it is for external event" org.eventb.core.label="grd6" org.eventb.core.predicate="{constructNDG({event1} ↦ terms1)} = pop(intention_stack2) "/>
        <org.eventb.core.guard name="1" org.eventb.core.label="grd7" org.eventb.core.predicate="∀ plan · plan ∈ relevant_plans1 ⇒  (Plan_body(event1)(plan)(belief_base↦terms1) = ∅ ∨  ( ∃ applicable_plan_body_stack · applicable_plan_body_stack ∈ Plan_body(event1)(plan)(belief_base↦terms1) ∧ event1↦terms1↦applicable_plan_body_stack  ∈ alreadytry))"/>
        <org.eventb.core.action name="2" org.eventb.core.assignment="intentions ≔ (intentions ∖ {{event1 ↦ terms1} ↦ intention_stack1, ∅ ↦ intention_stack2}) " org.eventb.core.comment="i may need to add a belief token to track the failure of this external event for reachability check" org.eventb.core.label="act1"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt9" org.eventb.core.comment="this means that the intention has been successfully executed for an internal event" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="RemoveEmptyNoneRootStack">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="event1"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="terms1"/>
        <org.eventb.core.guard name="*" org.eventb.core.label="grd1" org.eventb.core.predicate="{event1 ↦ terms1} ↦ Empty ∈ intentions " org.eventb.core.theorem="true"/>
        <org.eventb.core.action name="+" org.eventb.core.assignment="intentions ≔ (intentions ∖ ({{event1 ↦ terms1} ↦ Empty} ∪ {{event2 ↦ terms2} ↦intention_stack })) ∪ {{event2↦terms2} ↦next_intention_stack} " org.eventb.core.label="act1"/>
        <org.eventb.core.parameter name="," org.eventb.core.identifier="intention_stack"/>
        <org.eventb.core.parameter name="/" org.eventb.core.identifier="event2"/>
        <org.eventb.core.parameter name="0" org.eventb.core.identifier="terms2"/>
        <org.eventb.core.guard name="-" org.eventb.core.label="grd2" org.eventb.core.predicate="{event2 ↦ terms2} ↦ intention_stack ∈ intentions"/>
        <org.eventb.core.guard name="." org.eventb.core.label="grd3" org.eventb.core.predicate="constructNDG({event1} ↦ terms1) ∈ pop(intention_stack)"/>
        <org.eventb.core.parameter name="1" org.eventb.core.identifier="updated_top_stack"/>
        <org.eventb.core.guard name="2" org.eventb.core.label="grd4" org.eventb.core.predicate="updated_top_stack = pop(intention_stack) ∖ {constructNDG({event1} ↦ terms1)}"/>
        <org.eventb.core.parameter name="3" org.eventb.core.identifier="next_intention_stack"/>
        <org.eventb.core.guard name="4" org.eventb.core.comment="once i removed a stack i have to pop the internal event on the top of another stack" org.eventb.core.label="grd5" org.eventb.core.predicate="next_intention_stack = push(updated_top_stack, next_stack(intention_stack)) "/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt:" org.eventb.core.comment="this feels a bit like a replicate of the above rule, but by doing so, it allows m to know which event this stack correponds to in the beginning " org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="RemoveEmptyRootStack">
        <org.eventb.core.guard name="(" org.eventb.core.label="grd1" org.eventb.core.predicate="{event1 ↦ terms1} ↦ Empty ∈ intentions "/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="event1"/>
        <org.eventb.core.parameter name="*" org.eventb.core.identifier="terms1"/>
        <org.eventb.core.parameter name="+" org.eventb.core.identifier="intention_stack"/>
        <org.eventb.core.guard name="." org.eventb.core.label="grd2" org.eventb.core.predicate="∅  ↦ intention_stack ∈ intentions"/>
        <org.eventb.core.guard name="/" org.eventb.core.comment="i deliberately use the specific version to highlight the case of the root stack" org.eventb.core.label="grd3" org.eventb.core.predicate="{constructNDG({event1} ↦ terms1)} =  pop(intention_stack)"/>
        <org.eventb.core.action name="0" org.eventb.core.assignment="intentions ≔ intentions ∖ ({{event1 ↦ terms1} ↦ Empty} ∪ {∅ ↦intention_stack}) " org.eventb.core.comment="i could add more rules to track {event1} ↦ terms1) for LTL reachability checking" org.eventb.core.label="act1"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt=" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="DGSelectRelevantPlans">
        <org.eventb.core.parameter name="'" org.eventb.core.identifier="event"/>
        <org.eventb.core.parameter name="(" org.eventb.core.identifier="terms"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="relevant_plans"/>
        <org.eventb.core.parameter name="*" org.eventb.core.identifier="intention_stack"/>
        <org.eventb.core.guard name="+" org.eventb.core.label="grd1" org.eventb.core.predicate="intention_stack ∈ ran(intentions)"/>
        <org.eventb.core.guard name="," org.eventb.core.label="grd2" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.guard name="-" org.eventb.core.comment="success_conditions and failure conditions should have already inferred grounded terms if i am right" org.eventb.core.label="grd3" org.eventb.core.predicate="constructDG(success_conditions, {event} ↦ terms, failure_conditions) ∈ pop(intention_stack)"/>
        <org.eventb.core.guard name="." org.eventb.core.label="grd4" org.eventb.core.predicate="{event ↦ terms} ∉ dom(intentions)"/>
        <org.eventb.core.guard name="/" org.eventb.core.label="grd5" org.eventb.core.predicate="relevant_plans =dom(Plan_body(event))"/>
        <org.eventb.core.guard name="0" org.eventb.core.label="grd6" org.eventb.core.predicate="success_conditions ⊈ belief_base"/>
        <org.eventb.core.guard name="1" org.eventb.core.label="grd7" org.eventb.core.predicate="failure_conditions ⊈ belief_base"/>
        <org.eventb.core.parameter name="4" org.eventb.core.identifier="success_conditions"/>
        <org.eventb.core.parameter name="5" org.eventb.core.identifier="failure_conditions"/>
        <org.eventb.core.action name="6" org.eventb.core.assignment="intentions ≔ intentions ∪ {{(event ↦ terms)} ↦ push({constructDG(success_conditions, relevant_plans ↦terms, failure_conditions)},Empty)}" org.eventb.core.comment="the newly added stack has to inherit the success/failure conditions of the original declarative goals " org.eventb.core.label="act1"/>
    </org.eventb.core.event>
    <org.eventb.core.event name="evt7" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="test">
        <org.eventb.core.guard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="dgp ∈ Declarative_goal_programs"/>
        <org.eventb.core.guard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="SuccessConditions(DGPtoDG(dgp)) ⊈ belief_base"/>
        <org.eventb.core.parameter name=")" org.eventb.core.identifier="dgp"/>
    </org.eventb.core.event>
</org.eventb.core.machineFile>
