<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.prFile version="1">
    <org.eventb.core.prProof name="INITIALISATION/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p12">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p23"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p24"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p7,p2,p1,p4,p5,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p23,p24">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvents/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38" org.eventb.core.prSets="Actions,Belief_predicates,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_label" org.eventb.theory.core.givenType="event_label"/>
                <org.eventb.theory.core.scTypeArgument name="action_label" org.eventb.theory.core.givenType="action_label"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="labele" org.eventb.core.type="event_label"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="labela" org.eventb.core.type="action_label"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66,p67"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66,p67"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p79,p80,p81,p82"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p79,p80,p81,p82"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                        <org.eventb.core.prHypAction name="REWRITE6" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p89"/>
                                                        <org.eventb.core.prHypAction name="REWRITE7" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p90"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p93"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p94"/>
                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p95"/>
                                                                <org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p96"/>
                                                                <org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p97"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p6,p17,p31,p15,p3,p34,p5,p32,p16,p22,p37,p24,p7,p23,p13,p12,p19,p4,p8,p14,p11,p1,p38,p9,p28,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78,p79,p80,p81,p82,p83,p84,p85,p86,p87,p88,p89,p90">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="add_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="context" org.eventb.core.type="ℙ(Plan_library×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Plan_library×(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="context[{plan3}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="¬laugh_at=joke_at"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬c=ac"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="plan_body∈Plan_library ↔ predicate(Events,Actions) × Terms × ℕ1"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="add_set[{joke_at ↦ b}]={joked_at ↦ b}"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="precondition[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="plan_body[{plan2}]={action(travel) ↦ ac ↦ 1}"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬at=laughed_at"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="add_set[{travel ↦ ab}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="¬travel=joke_at"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="¬cry_at ↦ b∈dom(precondition)"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(precondition)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="add_set[{travel ↦ ac}]={at ↦ c}"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Events={arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="¬arrive_at=play_at"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="¬laugh_at=smile_at"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="precondition[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬at=cried_at"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="delete_set[{travel ↦ bc}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬c=bc"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac}"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬bc=ac"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬at=smiled_at"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="¬joke_at ↦ b∈dom(precondition)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬b=ac"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬travel=smile_at"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="triggering_event[{plan3}]={play_at ↦ b}"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬c=ab"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬at=joked_at"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬smile_at=joke_at"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="¬plan2=plan3"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="plan_body[{plan3}]={action(laugh_at) ↦ b ↦ 1,action(smile_at) ↦ b ↦ 2,action(joke_at) ↦ b ↦ 3,action(cry_at) ↦ b ↦ 4}"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬b=bc"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="¬travel=cry_at"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬a=ac"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="context[{plan2}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="precondition∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬b=ab"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="triggering_event[{plan1}]={arrive_at ↦ c}"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="delete_set[{travel ↦ ac}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬plan1=plan2"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="precondition[{travel ↦ ab}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan_body[{plan1}]={action(travel) ↦ ab ↦ 1,event(play_at) ↦ b ↦ 2,action(travel) ↦ bc ↦ 3}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="add_set[{cry_at ↦ b}]={cried_at ↦ b}"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="add_set[{smile_at ↦ b}]={smiled_at ↦ b}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac})"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="delete_set[{travel ↦ ab}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="precondition[{travel ↦ ac}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="¬plan1=plan3"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬a=bc"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="precondition[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="¬joke_at=cry_at"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬laughed_at=joked_at"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬smiled_at=joked_at"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="add_set[{laugh_at ↦ b}]={laughed_at ↦ b}"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="triggering_event∈Plan_library ↔ Events × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="precondition[{travel ↦ bc}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="triggering_event[{plan2}]={arrive_at ↦ c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="add_set[{travel ↦ bc}]={at ↦ c}"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="¬travel=laugh_at"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="intentions∈ℙ(ℙ(predicate(Events,Actions) × Terms × ℕ))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬a=ab"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="context[{plan1}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬laughed_at=cried_at"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="precondition[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="¬laugh_at=cry_at"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="¬smile_at ↦ b∈dom(precondition)"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="add_set∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬smiled_at=cried_at"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions∪{{event(event_real) ↦ terms ↦ 0}}∈ℙ(ℙ(predicate(Events,Actions) × Terms × ℕ))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="event_real ↦ terms∈external_events"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="context∈Plan_library ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬laughed_at=smiled_at"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬joked_at=cried_at"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="¬smile_at=cry_at"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬ab=bc"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬ab=ac"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p12">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p23"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p24"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p7,p2,p1,p4,p5,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p23,p24">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd2/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36,p37"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p50" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52,p53,p54"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p52,p53,p54"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p63"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p65"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p66"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬laugh_at=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬c=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null})">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=ab">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬at=laughed_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬travel=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬laugh_at=smile_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬c=null">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=null">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬c=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬bc=null">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ac=null">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬joke_at=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬laughed_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬smiled_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬bc=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬b=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬travel=laugh_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬a=ab">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms)))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(Events×Terms)×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac,null}">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬laughed_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬c=ab">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬laugh_at=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬smile_at=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬laughed_at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬b=null">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬joked_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬ab=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬ab=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬ab=null">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬b=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Predicate,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{cried_at},{next}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22,p23"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p22,p23"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{cry_at}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31,p32,p33,p34,p35,p36"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31,p32,p33,p34,p35,p36"/>
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p42">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p38"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p41"/>
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p42" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p43"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Predicate×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬at=next">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="action_real ↦ terms1∈dom(precondition)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Vector∈Terms × Terms ⇸ Terms">
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{cry_at})">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="action_real ↦ terms1∈dom(precondition)∧precondition∈Predicate × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms,terms3⦂Terms,belief⦂ℙ(Belief_predicates×Terms)·terms3∈Point∧terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧(next ↦ Vector(terms1 ↦ terms2)∈belief⇒terms2 ↦ terms3∈dom(Vector))">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms,terms3⦂Terms,belief⦂ℙ(Belief_predicates×Terms)·terms3∈Point∧terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧Vector∈Terms × Terms ⇸ Terms∧(next ↦ Vector(terms1 ↦ terms2)∈belief⇒terms2 ↦ terms3∈dom(Vector))">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms·terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms·terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧Vector∈Terms × Terms ⇸ Terms">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬plan2=plan4">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬cried_at=next">
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Point,{a},{b},{c})">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Predicate,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="precondition∈Predicate × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬smiled_at=next">
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms·terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧⊤">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="precondition∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="⊤∧precondition∈Predicate × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Predicate=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{cried_at},{next})">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬plan3=plan4">
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Actions={travel,smile_at,cry_at}">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms,terms3⦂Terms,belief⦂ℙ(Belief_predicates×Terms)·terms3∈Point∧terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧⊤∧(next ↦ Vector(terms1 ↦ terms2)∈belief⇒terms2 ↦ terms3∈dom(Vector))">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Belief_predicates={at,smiled_at,cried_at,next}">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬plan1=plan4">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p29,p30,p31,p32"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p33"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p34"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p35"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p36"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with updated_top_stack=pop(intention_stack) ∖ {constructNDG({action} ↦ terms2)}" org.eventb.core.prHyps="p8">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p37"/>
                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p8"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_belief_base=(belief_base ∖ Deletion_sets[{action ↦ terms2}])∪Addition_sets[{action ↦ terms2}]" org.eventb.core.prHyps="p17">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p17"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p25">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p38"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p39"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p23,p24"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p25"/>
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_intentions=(intentions ∖ {{event ↦ terms1} ↦ intention_stack})∪{{event ↦ terms1} ↦ push(pop(intention_stack) ∖ {constructNDG({action} ↦ terms2)},next_stack(intention_stack))}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p37">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                        <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p37"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p22,p5,p2,p7,p10,p13,p19,p15,p16,p11,p14,p18,p6,p9,p1,p20,p12,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p37,p38,p39">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="next_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="next_intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="updated_top_stack" org.eventb.core.type="ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="action ↦ terms2∈dom(Preconditions)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="updated_top_stack=pop(intention_stack) ∖ {constructNDG({action} ↦ terms2)}"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="next_belief_base=(belief_base ∖ Deletion_sets[{action ↦ terms2}])∪Addition_sets[{action ↦ terms2}]"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="action∈Actions"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Preconditions[{action ↦ terms2}]⊆belief_base"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="next_intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="constructNDG({action} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="(intentions ∖ {{event ↦ terms1} ↦ intention_stack})∪{{event ↦ terms1} ↦ push(pop(intention_stack) ∖ {constructNDG({action} ↦ terms2)},next_stack(intention_stack))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="{event ↦ terms1} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="next_intentions=(intentions ∖ {{event ↦ terms1} ↦ intention_stack})∪{{event ↦ terms1} ↦ push(updated_top_stack,next_stack(intention_stack))}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="next_intentions=(intentions ∖ {{event ↦ terms1} ↦ intention_stack})∪{{event ↦ terms1} ↦ push(pop(intention_stack) ∖ {constructNDG({action} ↦ terms2)},next_stack(intention_stack))}"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvent/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20,p21,p22,p23"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p24"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p25"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p26"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p27"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p16">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p28"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p29"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p14,p15"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p16"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p13,p4,p1,p5,p6,p7,p11,p8,p10,p9,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p28,p29">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions∪{(∅ ⦂ ℙ(None_belief_predicates×Terms)) ↦ push({constructNDG({event} ↦ terms)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="event ↦ terms∈external_events"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressInternalEvent/grd3/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36" org.eventb.core.prSets="Actions,Belief_predicates,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_label" org.eventb.theory.core.givenType="event_label"/>
                <org.eventb.theory.core.scTypeArgument name="action_label" org.eventb.theory.core.givenType="action_label"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="labele" org.eventb.core.type="event_label"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="labela" org.eventb.core.type="action_label"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64,p65"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p64,p65"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p77,p78,p79,p80"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p77,p78,p79,p80"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p86">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p81"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p82"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p84"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p85"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p87"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p88"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p89"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p90"/>
                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p91"/>
                                                                <org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p92"/>
                                                                <org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p93"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p86" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p94">
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p94" org.eventb.core.prHyps="p16,p27,p13,p4,p31,p6,p28,p15,p20,p34,p35,p14,p22,p36,p8,p30,p21,p12,p11,p5,p9,p10,p1,p32,p17,p2,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78,p79,p80,p81,p82,p83,p84,p85">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p95"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="add_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="context" org.eventb.core.type="ℙ(Plan_library×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="intention" org.eventb.core.type="ℙ(predicate(Events,Actions)×Terms×ℤ)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="number" org.eventb.core.type="ℤ"/>
        <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬travel=cry_at"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬a=ac"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="context[{plan3}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event(event_real) ↦ terms ↦ number∈intention"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="¬laugh_at=joke_at"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="number≠0"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬c=ac"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="add_set[{joke_at ↦ b}]={joked_at ↦ b}"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="context[{plan2}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="precondition∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬b=ab"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="triggering_event[{plan1}]={arrive_at ↦ c}"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬at=laughed_at"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="add_set[{travel ↦ ab}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="precondition[{smile_at ↦ b}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="∃b⦂ℤ·∀x⦂ℤ·x∈ran(intention)⇒b≤x"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="delete_set[{travel ↦ ac}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="¬plan1=plan2"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="precondition[{travel ↦ ab}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="¬travel=joke_at"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="intention∈intentions"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="add_set[{travel ↦ ac}]={at ↦ c}"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Events={arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬arrive_at=play_at"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="add_set[{cry_at ↦ b}]={cried_at ↦ b}"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="¬laugh_at=smile_at"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="add_set[{smile_at ↦ b}]={smiled_at ↦ b}"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac})"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="delete_set[{travel ↦ ab}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="precondition[{travel ↦ ac}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="¬plan1=plan3"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬a=bc"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬at=cried_at"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="delete_set[{travel ↦ bc}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬c=bc"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="intentions∈ℙ(ℙ(predicate(Events,Actions) × Terms × ℕ))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬joke_at=cry_at"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="precondition[{laugh_at ↦ b}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac}"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬laughed_at=joked_at"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬smiled_at=joked_at"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="add_set[{laugh_at ↦ b}]={laughed_at ↦ b}"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="precondition[{joke_at ↦ b}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬bc=ac"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="triggering_event∈Plan_library ↔ Events × Terms"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬at=smiled_at"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="precondition[{travel ↦ bc}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="triggering_event[{plan2}]={arrive_at ↦ c}"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="ran(intention)≠(∅ ⦂ ℙ(ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈ran(intention)⇒b≤x)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="add_set[{travel ↦ bc}]={at ↦ c}"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬b=ac"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="¬travel=smile_at"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="¬travel=laugh_at"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="¬intention=(∅ ⦂ ℙ(predicate(Events,Actions)×Terms×ℤ))∧(∃b⦂ℤ·∀x⦂ℤ·x∈ran(intention)⇒b≤x)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="¬intention=(∅ ⦂ ℙ(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="triggering_event[{plan3}]={play_at ↦ b}"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=ab"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="context[{plan1}]={at ↦ a}"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬laughed_at=cried_at"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬c=ab"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="¬laugh_at=cry_at"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="add_set∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬smiled_at=cried_at"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬at=joked_at"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="¬smile_at=joke_at"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="context∈Plan_library ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬plan2=plan3"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="precondition[{cry_at ↦ b}]={at ↦ b}"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬laughed_at=smiled_at"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬joked_at=cried_at"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="¬smile_at=cry_at"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬ab=bc"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬ab=ac"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="¬number=0"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬b=bc"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressInternalEvent/inv3/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="Actions,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_label" org.eventb.theory.core.givenType="event_label"/>
                <org.eventb.theory.core.scTypeArgument name="action_label" org.eventb.theory.core.givenType="action_label"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="labele" org.eventb.core.type="event_label"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="labela" org.eventb.core.type="action_label"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seq" org.eventb.core.label="seq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℙ(ℤ×A))" org.eventb.theory.core.wd="∀n⦂ℤ,f⦂ℙ(ℤ×A)·(n∈ℕ∧f∈1 ‥ n → a)∨¬n∈ℕ∨¬f∈1 ‥ n → a">
                <org.eventb.theory.core.scOperatorArgument name="a" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#(|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="{n⦂ℤ,f⦂ℙ(ℤ×A)·n∈ℕ∧f∈1 ‥ n → a ∣ f}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqSize" org.eventb.core.label="seqSize" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℤ" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.directOperatorDefinition#(" org.eventb.theory.core.formula="card(s)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="emptySeq" org.eventb.core.label="emptySeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.atomicExpr" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(A)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scDirectOperatorDefinition name="'" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#5|org.eventb.theory.core.directOperatorDefinition#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(A)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqHead" org.eventb.core.label="seqHead" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="A" org.eventb.theory.core.wd="1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s(1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqTail" org.eventb.core.label="seqTail" org.eventb.core.predicate="s∈seq(A)∧s≠(emptySeq ⦂ ℙ(ℤ×A))" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#," org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·finite(s)∧(i∈1 ‥ card(s) − 1⇒i+1∈dom(s)∧s∈ℤ ⇸ A)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#,|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="λi⦂ℤ·i∈1 ‥ card(s) − 1 ∣ s(i+1)"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqPrepend" org.eventb.core.label="seqPrepend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="∀i⦂ℤ·i∈2 ‥ seqSize(s)+1⇒i − 1∈dom(s)∧s∈ℤ ⇸ A">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#-|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="{1 ↦ e}∪(λi⦂ℤ·i∈2 ‥ seqSize(s)+1 ∣ s(i − 1))"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="seqAppend" org.eventb.core.label="seqAppend" org.eventb.core.predicate="s∈seq(A)" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#." org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(ℤ×A)" org.eventb.theory.core.wd="finite(s)">
                <org.eventb.theory.core.scOperatorArgument name="s" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="ℙ(ℤ×A)"/>
                <org.eventb.theory.core.scOperatorArgument name="e" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="A"/>
                <org.eventb.theory.core.scDirectOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/Seq.tuf|org.eventb.theory.core.theoryRoot#Seq|org.eventb.theory.core.newOperatorDefinition#.|org.eventb.theory.core.directOperatorDefinition#)" org.eventb.theory.core.formula="s∪{card(s)+1 ↦ e}"/>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48,p49,p50"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48,p49,p50"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p51" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p55" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                                        <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p57" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                        <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="REWRITE5" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p63"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p65"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p67"/>
                                                                <org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="HIDE6" org.eventb.core.prHyps="p69"/>
                                                                <org.eventb.core.prHypAction name="HIDE7" org.eventb.core.prHyps="p70"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with number=min(ran(intention))" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p74">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p71" org.eventb.core.prInfHyps="p72"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p60" org.eventb.core.prInfHyps="p73"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p71,p60"/>
                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p1"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="intention" org.eventb.core.type="ℙ(predicate(Events,Actions)×Terms×ℤ)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prIdent name="number" org.eventb.core.type="ℤ"/>
        <org.eventb.core.prIdent name="plan" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Plan_library×(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=ac">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="event(event_real) ↦ terms ↦ number∈intention"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="¬min(ran(intention))=0"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬laugh_at=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="number≠0"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬c=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="plan∈Plan_library"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="precondition∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬b=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬at=laughed_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="number=min(ran(intention))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬travel=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬laugh_at=smile_at">
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="event(event_real) ↦ terms ↦ min(ran(intention))∈intention"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac})">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=bc">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(intentions ∖ {intention})∪{(intention ∖ {event(event_real) ↦ terms ↦ number})∪plan_body[{plan}]}∈ℙ(ℙ(predicate(Events,Actions) × Terms × ℕ))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬c=bc">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬joke_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac}">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬laughed_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬smiled_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="(intentions ∖ {intention})∪{(intention ∖ {event(event_real) ↦ terms ↦ min(ran(intention))})∪plan_body[{plan}]}∈ℙ(ℙ(predicate(Events,Actions) × Terms × ℕ))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬bc=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="triggering_event∈Plan_library ↔ Events × Terms">
            <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="ran(intention)≠(∅ ⦂ ℙ(ℤ))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬b=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬travel=laugh_at">
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬intention=(∅ ⦂ ℙ(predicate(Events,Actions)×Terms×ℤ))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=ab">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬laughed_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬c=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬laugh_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="add_set∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="add_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬smile_at=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="context∈Plan_library ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="context" org.eventb.core.type="ℙ(Plan_library×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬laughed_at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬joked_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬ab=bc">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬ab=ac">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬number=0"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬b=bc">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL1:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Predicate×Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(Predicate×Terms),next_stack1⦂STACK(ℙ(Predicate×Terms))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd2/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{joked_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19,p20,p21"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p18,p19,p20,p21"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{joke_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27,p28,p29"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31,p32,p33,p34,p35,p36,p37"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p31,p32,p33,p34,p35,p36,p37"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p38"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="¬bc=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬a=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Actions={travel,smile_at,joke_at}">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{joked_at})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬b=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬c=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=ab">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=ab">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{joke_at})">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬travel=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬c=ab">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Events)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬smile_at=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac})">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬c=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬plan2=plan4">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬plan3=plan4">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Belief_predicates={at,smiled_at,joked_at}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac}">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬ab=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬smiled_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬ab=ac">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬plan1=plan4">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Plan_library)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=bc">
            <org.eventb.core.prIdent name="Terms" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/act2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Predicate×Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(Predicate×Terms),next_stack1⦂STACK(ℙ(Predicate×Terms))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv5/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p12">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p23"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p24"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p6,p2,p1,p7,p4,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p23,p24">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="plan_real,n" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54,p55,p56,p57"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54,p55,p56,p57"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p67">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p60"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p68"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p69"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p70"/>
                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p71"/>
                                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p72"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees plan_real,n)" org.eventb.core.prGoal="p67" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p73">
                                                                                <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Plan_library"/>
                                                                                <org.eventb.core.prIdent name="n" org.eventb.core.type="Terms"/>
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p73" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="p74">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with n=terms" org.eventb.core.prHyps="p74">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p74"/>
                                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="p2">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76">
                                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="">
                                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
                                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p77" org.eventb.core.prHyps=""/>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                                    <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬a=ac">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="triggering_event∈Plan_library ⇸ Events × Terms"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬laugh_at=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="relevant_plans∈ℙ(predicate(Events,Actions,Plan_library) × Terms)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(predicate(Events,Actions,Plan_library)×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬c=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null})">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬b=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬at=laughed_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬travel=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="n=terms">
            <org.eventb.core.prIdent name="n" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬laugh_at=smile_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬c=null">
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=bc">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬a=null">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬c=bc">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="intentions∈ℙ(STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms)))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬bc=null">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬ac=null">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬joke_at=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="triggering_event∈Plan_library → Events × Terms"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬laughed_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬smiled_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬bc=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="∀plan_real⦂Plan_library,n⦂Terms·n=terms⇒plan_real∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬b=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬travel=laugh_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=ab">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀plan_real⦂Plan_library,n⦂Terms·n=terms⇒plan_real∈dom(triggering_event)∧⊤"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac,null}">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬laughed_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬c=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬laugh_at=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="n=terms⇒plan_real∈dom(triggering_event)">
            <org.eventb.core.prIdent name="n" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="plan_real∈Plan_library">
            <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬smile_at=joke_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀plan_real⦂Plan_library,n⦂Terms·n=terms⇒plan_real∈dom(triggering_event)∧triggering_event∈Plan_library ⇸ Events × Terms"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="plan_real∈dom(triggering_event)">
            <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬laughed_at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=null">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬joked_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ab=bc">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ab=ac">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ab=null">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Actions)"/>
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬b=bc">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Plan_library"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.eqL1:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/inv4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22,p23"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p22,p23"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25,p26,p27"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p24,p25,p26,p27"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29,p30,p31"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29,p30,p31"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p33"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p34"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p35"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p36"/>
                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p37"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with relevant_plans=dom(Plan_body(event_real))" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p38">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p9"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p24">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p39"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p40"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p22,p23"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p24"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p38" org.eventb.core.prHyps="p21,p10,p5,p13,p11,p15,p19,p17,p18,p12,p16,p1,p14,p3,p4,p7,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p39,p40">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="pop(intention_stack)={constructNDG({event_real} ↦ terms)}"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="intentions∪{{event_real ↦ terms} ↦ push({constructNDG(dom(Plan_body(event_real)) ↦ terms)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="relevant_plans=dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions∪{{event_real ↦ terms} ↦ push({constructNDG(relevant_plans ↦ terms)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="{event_real ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="relevant_plans∈ℙ(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬{event_real ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd6/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p51"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p52"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p53"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p54">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p56"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p24">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p59">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="p24"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p60">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p56"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p23,p32,p26,p19,p14,p28,p2,p9,p24,p17,p29,p33,p11,p36,p30,p5,p7,p16,p13,p12,p20,p1,p15,p18,p10,p8,p31,p27,p35,p34,p25,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p55,p56">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="{plan_real} ↦ terms2∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="{plan_real} ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{plan_real} ↦ terms2∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs∧(∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45,p46"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48,p49,p50"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48,p49,p50"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52,p53,p54"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p52,p53,p54"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55,p56"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55,p56"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p59"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_real=plan_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p11">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p28" org.eventb.core.prInfHyps="p64"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p65"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p28,p4"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p11"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p47">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p66"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p46" org.eventb.core.prInfHyps="p67"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p45,p46"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p47"/>
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="p25,p39,p29,p22,p16,p32,p3,p10,p27,p19,p34,p41,p13,p44,p38,p6,p8,p18,p15,p14,p21,p1,p17,p20,p12,p9,p36,p30,p43,p40,p28,p4,p31,p33,p37,p11,p26,p35,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p64,p65,p66,p67">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p68">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p30"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_body_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Constructor4NDG({plan_real} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Constructor4NDG({plan_intention(event_real ↦ terms2)} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="{plan_real} ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ plan_body_stack∈alreadytry"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="plan_intention(event_real ↦ terms2)∈Plan_library"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="plan_real=plan_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real ↦ terms2∈dom(stack_intention)∧stack_intention∈None_belief_predicates × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="event_real ↦ terms2∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="stack_intention∈None_belief_predicates × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="event_real ↦ terms2 ↦ plan_body_stack∉alreadytry"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/inv4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p18,p19"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20,p21,p22,p23"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24,p25,p26,p27"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p24,p25,p26,p27"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p29"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p30"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p31"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p32"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p20">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p34"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p18,p19"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p20"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p17,p7,p3,p8,p10,p11,p15,p13,p14,p1,p12,p5,p9,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p33,p34">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="applicable_plan_body_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="alreadytry∪{event ↦ terms ↦ applicable_plan_body_stack}∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="{event ↦ terms} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event ↦ terms ↦ applicable_plan_body_stack∉alreadytry"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="constructNDG(relevant_plans ↦ terms)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬event ↦ terms ↦ applicable_plan_body_stack∈alreadytry"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/inv5/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p20,p21,p22"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19,p20,p21,p22"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p28"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p29"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p30"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p31"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p19">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p32"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p17,p18"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p19"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p5,p1,p7,p6,p8,p14,p11,p12,p13,p9,p2,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p32,p33">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="plan_body_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ plan_body_stack∈alreadytry"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="alreadytry∪{event_real ↦ terms2 ↦ plan_body_stack}∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="event_real ↦ terms2 ↦ plan_body_stack∉alreadytry"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/act3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Actions,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention" org.eventb.core.type="STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(predicate(Events,Actions,Plan_library)×Terms),next_stack1⦂STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))·intention=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p51"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p52"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p53"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p54">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p56"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p24,p32,p26,p20,p15,p28,p2,p10,p25,p18,p29,p33,p12,p36,p30,p5,p7,p17,p14,p13,p21,p1,p16,p19,p11,p8,p31,p27,p35,p34,p9,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p55,p56">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p57">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p56"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="p25">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p60">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p25"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="{action_real} ↦ terms1∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1))∧{action_real} ↦ terms1∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51" org.eventb.core.prSets="Actions,Belief_predicates,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{joked_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68,p69,p70,p71"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p68,p69,p70,p71"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p72,p73"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p72,p73"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{joke_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p36" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p74,p75,p76,p77"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p74,p75,p76,p77"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p78,p79,p80,p81,p82,p83,p84"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p78,p79,p80,p81,p82,p83,p84"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p31,p51">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p85">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p85" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p90">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p48" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p86"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p87" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88,p89"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p91"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p92"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p93"/>
                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p88"/>
                                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p89"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p90" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p94">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p94" org.eventb.core.prHyps="p38,p31,p51,p23,p47,p32,p1,p30,p39,p33,p19,p43,p2,p3,p37,p6,p28,p16,p10,p49,p24,p34,p12,p26,p29,p18,p17,p13,p11,p46,p44,p50,p41,p45,p35,p14,p7,p8,p15,p21,p27,p22,p42,p5,p25,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78,p79,p80,p81,p82,p83,p84,p86">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p95">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p95" org.eventb.core.prHyps="p38,p31,p51,p23,p47,p32,p1,p30,p39,p33,p19,p43,p2,p3,p37,p6,p28,p16,p10,p49,p24,p34,p12,p26,p29,p18,p17,p13,p11,p46,p44,p50,p41,p45,p35,p14,p7,p8,p15,p21,p27,p22,p42,p5,p25,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78,p79,p80,p81,p82,p83,p84,p86">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="add_set" org.eventb.core.type="ℙ(Actions×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="backups" org.eventb.core.type="ℙ(Events×Terms×ℙ(predicate(Events,Actions,Plan_library)×Terms))"/>
        <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="context" org.eventb.core.type="ℙ(Plan_library×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(Events×Terms)×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Plan_library×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Actions×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="precondition={travel ↦ ab ↦ {at ↦ a},travel ↦ bc ↦ {at ↦ b},travel ↦ ac ↦ {at ↦ a},smile_at ↦ b ↦ {at ↦ c},joke_at ↦ b ↦ {at ↦ b}}"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="plan1∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬a=ac"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="triggering_event∈Plan_library ⇸ Events × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{joked_at})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="action_real ↦ terms1∈dom(precondition)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="plan1∈dom(context)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="plan_body(plan4)=push({action(joke_at) ↦ b},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="plan4∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬c=ac"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬b=ab"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="plan1∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="action_real ↦ terms1∈dom(delete_set)∧⊤∧action_real ↦ terms1∈dom(add_set)∧⊤"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="context(plan3)={at ↦ b}"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="context(plan2)={at ↦ a}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="plan3∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="¬plan1=plan2"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬travel=joke_at"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="action_real ↦ terms1∈dom(add_set)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="plan4∈dom(context)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="backups∈Events × Terms ⇸ ℙ(predicate(Events,Actions,Plan_library) × Terms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="plan_body(plan1)=push({action(travel) ↦ ab},push({event(play_at) ↦ b},push({action(travel) ↦ bc},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))))"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="Events={arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="¬arrive_at=play_at"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="triggering_event(plan3)=play_at ↦ b"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="plan_body=(∅ ⦂ ℙ(Plan_library×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="plan2∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="context={plan1 ↦ {at ↦ a},plan2 ↦ {at ↦ a},plan3 ↦ {at ↦ b},plan4 ↦ {at ↦ b}}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac})"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="action_real ↦ terms1∈dom(delete_set)∧action_real ↦ terms1∈dom(add_set)"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬plan1=plan3"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬a=bc"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬c=bc"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="¬plan2=plan4"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="∃pop0⦂ℙ(predicate(Events,Actions,Plan_library)×Terms),next_stack1⦂STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Belief_predicates={at,smiled_at,joked_at}"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="triggering_event∈Plan_library → Events × Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="triggering_event(plan2)=arrive_at ↦ c"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac}"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="¬smiled_at=joked_at"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="terms2∈Terms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan2∈dom(context)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="pop(intention_stack)={action(action_real) ↦ terms1}"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="context∈Plan_library ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="¬bc=ac"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="plan_body(plan2)=push({action(travel) ↦ ac},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="delete_set={travel ↦ ab ↦ {at ↦ a},travel ↦ bc ↦ {at ↦ b},travel ↦ ac ↦ {at ↦ a},smile_at ↦ b ↦ (∅ ⦂ ℙ(Belief_predicates×Terms)),joke_at ↦ b ↦ (∅ ⦂ ℙ(Belief_predicates×Terms))}"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="event_real ↦ terms2∈Events × Terms"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="¬at=smiled_at"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Actions={travel,smile_at,joke_at}"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="delete_set∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="plan_body∈Plan_library → STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="triggering_event={plan1 ↦ (arrive_at ↦ c),plan2 ↦ (arrive_at ↦ c),plan3 ↦ (play_at ↦ b),plan4 ↦ (play_at ↦ b)}"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬b=ac"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="¬travel=smile_at"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬a=ab"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="plan2∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="context(plan4)={at ↦ b}"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{joke_at})"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="context(plan1)={at ↦ a}"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="action_real ↦ terms1∈dom(delete_set)∧delete_set∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)∧action_real ↦ terms1∈dom(add_set)∧add_set∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬c=ab"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="precondition∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="add_set={travel ↦ ab ↦ {at ↦ b},travel ↦ bc ↦ {at ↦ c},travel ↦ ac ↦ {at ↦ c},smile_at ↦ b ↦ {smiled_at ↦ b},joke_at ↦ b ↦ {joked_at ↦ b}}"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="triggering_event(plan4)=play_at ↦ b"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="precondition(action_real ↦ terms1)⊆belief_base"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬at=joked_at"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="¬smile_at=joke_at"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="triggering_event(plan1)=arrive_at ↦ c"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="plan_body(plan3)=push({action(smile_at) ↦ b},push({action(joke_at) ↦ b},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))))"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms)))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="plan4∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="¬plan2=plan3"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="plan3∈dom(context)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="context∈Plan_library → ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="plan_body={}"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="¬plan3=plan4"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="plan_body∈Plan_library ⇸ STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬ab=bc"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="plan3∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬ab=ac"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="add_set∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="action_real ↦ terms1∈dom(delete_set)"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="¬plan1=plan4"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬b=bc"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd6/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Actions,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p53" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54,p55,p56,p57"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54,p55,p56,p57"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="p60" org.eventb.core.prInfHyps="p59"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p61" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p63" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p65" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p66"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p67" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p68"/>
                                                                <org.eventb.core.prHypAction name="REWRITE4" org.eventb.core.prHidden="p59" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p70"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p71"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p72"/>
                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p73"/>
                                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p74"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p75">
                                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with relevant_plans={plan_real,n·triggering_event(plan_real)=event_real ↦ terms ∣ plan(plan_real) ↦ n}" org.eventb.core.prHyps="p1">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p75" org.eventb.core.prHyps="p2">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p76">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p76" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p77">
                                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p77" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p78">
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p78" org.eventb.core.prHyps="p2"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="intention_for_event" org.eventb.core.type="ℙ(Events×Terms×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(predicate(Events,Actions,Plan_library)×Terms)"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬a=ac">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="triggering_event∈Plan_library ⇸ Events × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="intention_for_event∈Events × Terms → STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬laugh_at=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="relevant_plans∈ℙ(predicate(Events,Actions,Plan_library) × Terms)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬c=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null})">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬b=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real ↦ terms∈dom(intention_for_event)∧intention_for_event∈Events × Terms ⇸ STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬at=laughed_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="intention_for_event∈Events × Terms ⇸ STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬travel=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬laugh_at=smile_at">
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬c=null">
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=bc">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬a=null">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬c=bc">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="intentions∈ℙ(STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms)))">
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬bc=null">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬ac=null">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬joke_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬laughed_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬smiled_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="∀plan_real⦂Plan_library·plan_real∈dom(triggering_event)∧⊤"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬bc=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="event_real ↦ terms∈Events × Terms"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="event_real ↦ terms∈dom(intention_for_event)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬b=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬travel=laugh_at">
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=ab">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="∀plan_real⦂Plan_library·plan_real∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac,null}">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬laughed_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬c=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬laugh_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="relevant_plans={plan_real⦂Plan_library,n⦂Terms·triggering_event(plan_real)=event_real ↦ terms ∣ plan(plan_real) ↦ n}"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬smile_at=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬laughed_at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=null">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬joked_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ab=bc">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ab=ac">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬ab=null">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="∀plan_real⦂Plan_library·plan_real∈dom(triggering_event)∧triggering_event∈Plan_library ⇸ Events × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬b=bc">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Events × Terms"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL1:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd5/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="Actions,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p37" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38,p39"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38,p39"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p52" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p54,p55,p56"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53,p54,p55,p56"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p58" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p60" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p61"/>
                                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p62" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p63"/>
                                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p64" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p67"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p68"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p69"/>
                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p70"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="intention_for_event" org.eventb.core.type="ℙ(Events×Terms×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=ac">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="partition(Actions,{travel},{laugh_at},{smile_at},{joke_at},{cry_at})">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬laugh_at=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬c=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac},{null})">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬b=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="intention_for_event∈Events × Terms ⇸ STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬at=laughed_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬travel=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="delete_set[{laugh_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬laugh_at=smile_at">
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3})">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(Belief_predicates,{at},{laughed_at},{smiled_at},{joked_at},{cried_at})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Actions={travel,laugh_at,smile_at,joke_at,cry_at}">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="delete_set[{smile_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬c=null">
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=bc">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬a=null">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬c=bc">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="intentions∈ℙ(STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms)))">
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬bc=null">
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬ac=null">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬joke_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="delete_set[{joke_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬laughed_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬smiled_at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="event_real ↦ terms2∈dom(intention_for_event)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬cry_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬bc=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3}">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="event_real ↦ terms2∈dom(intention_for_event)∧⊤"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real ↦ terms2∈dom(intention_for_event)∧intention_for_event∈Events × Terms ⇸ STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬b=ac">
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬travel=laugh_at">
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬smile_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=ab">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Belief_predicates={at,laughed_at,smiled_at,joked_at,cried_at}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac,null}">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬laughed_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬c=ab">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬laugh_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬at=joked_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="delete_set[{cry_at ↦ b}]=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬smile_at=joke_at">
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬laughed_at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="laughed_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬joke_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬b=null">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬joked_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Actions"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬ab=bc">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬ab=ac">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬ab=null">
            <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="null" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬laugh_at ↦ b∈dom(delete_set)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="laugh_at" org.eventb.core.type="Actions"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="¬b=bc">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/inv4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p31"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p32"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p33"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p34"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_intentions=(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p11">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_belief_base=(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]" org.eventb.core.prHyps="p3">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p3"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p23">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p36"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p37"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p21,p22"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p23"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p20,p6,p1,p10,p7,p13,p18,p15,p16,p17,p14,p9,p8,p5,p12,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p36,p37">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="next_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="next_intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊆belief_base"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="next_intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="next_belief_base=(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="action_real ↦ terms1∈dom(Preconditions)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="next_intentions=(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/act3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Actions,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention" org.eventb.core.type="STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(predicate(Events,Actions,Plan_library)×Terms),next_stack1⦂STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))·intention=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd5/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51" org.eventb.core.prSets="Belief_predicates,Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p41" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p53"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p53"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p32" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54,p55,p56,p57"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54,p55,p56,p57"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Predicate,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59,p60,p61"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p58,p59,p60,p61"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{cried_at},{next}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p46" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p62,p63,p64,p65,p66,p67,p68"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p62,p63,p64,p65,p66,p67,p68"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p42" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69,p70"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69,p70"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{cry_at}))" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71,p72,p73,p74"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71,p72,p73,p74"/>
                                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75,p76,p77,p78,p79,p80,p81"/>
                                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p75,p76,p77,p78,p79,p80,p81"/>
                                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p3">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p86">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p82"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p84"/>
                                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="p83" org.eventb.core.prInfHyps="p85"/>
                                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p86" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p89">
                                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p30" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p87"/>
                                                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p44" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p88"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p90"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p91"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p92"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p93"/>
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p55">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p52" org.eventb.core.prInfHyps="p94"/>
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p53" org.eventb.core.prInfHyps="p95"/>
                                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p52,p53"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p55"/>
                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Events={arrive_at,play_at}" org.eventb.core.prHyps="p69">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p96"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p58" org.eventb.core.prInfHyps="p97"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p60" org.eventb.core.prInfHyps="p98"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p61" org.eventb.core.prInfHyps="p99"/>
                                                                                                        <org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p2,p58,p60,p61"/>
                                                                                                        <org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p69"/>
                                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Actions={travel,smile_at,cry_at}" org.eventb.core.prHyps="p74">
                                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p59" org.eventb.core.prInfHyps="p100"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p97" org.eventb.core.prInfHyps="p101"/>
                                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p98" org.eventb.core.prInfHyps="p102"/>
                                                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p98,p59,p97"/>
                                                                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p74"/>
                                                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Plan_library={plan1,plan2,plan3,plan4}" org.eventb.core.prHyps="p75">
                                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p99" org.eventb.core.prInfHyps="p103"/>
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p100" org.eventb.core.prInfHyps="p104"/>
                                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p101" org.eventb.core.prInfHyps="p105"/>
                                                                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p101,p99,p100"/>
                                                                                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p75"/>
                                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p89" org.eventb.core.prHyps="p17,p40,p36,p10,p12,p7,p23,p43,p27,p45,p35,p25,p38,p37,p26,p14,p13,p18,p20,p48,p4,p3,p28,p51,p31,p5,p33,p21,p39,p49,p50,p6,p16,p29,p47,p22,p1,p19,p24,p11,p15,p2,p52,p53,p54,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p70,p71,p72,p73,p76,p77,p78,p79,p80,p81,p87,p88,p94,p95,p96,p97,p98,p99,p100,p101,p102,p103,p104,p105">
                                                                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                                                        </org.eventb.core.prRule>
                                                                                                                    </org.eventb.core.prAnte>
                                                                                                                </org.eventb.core.prRule>
                                                                                                            </org.eventb.core.prAnte>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="add_set" org.eventb.core.type="ℙ(Predicate×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(Predicate×Terms×STACK(ℙ(Predicate×Terms)))"/>
        <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Predicate×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Predicate×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Predicate×Terms))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(Predicate×Terms)×STACK(ℙ(Predicate×Terms)))"/>
        <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Predicate×ℙ(Predicate×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Predicate×Terms))))))"/>
        <org.eventb.core.prIdent name="plan_body_plan1" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_body_plan2" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_body_plan3" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_body_plan4" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(Predicate×Terms×Predicate)"/>
        <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Predicate×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(Predicate×Terms×STACK(ℙ(Predicate×Terms)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Predicate × Terms))"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms·terms1∈Point∧terms2∈Point⇒terms1 ↦ terms2∈dom(Vector)∧⊤"/>
        <org.eventb.core.prPred name="p90" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="∀terms2⦂Terms·terms2∈Point⇒(∀terms1⦂Terms·terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧⊤)"/>
        <org.eventb.core.prPred name="p94" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="arrive_at∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="plan2∈dom(plan_body(arrive_at))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{cry_at})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="card(VectorTerms)=9"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(VectorTerms)"/>
        <org.eventb.core.prPred name="p91" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="∀belief⦂ℙ(Belief_predicates×Terms),terms3⦂Terms·terms3∈Point⇒(∀terms1⦂Terms,terms2⦂Terms·terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧Vector∈Terms × Terms ⇸ Terms∧(next ↦ Vector(terms1 ↦ terms2)∈belief⇒terms2 ↦ terms3∈dom(Vector)))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="∃pop0⦂ℙ(Predicate×Terms),next_stack1⦂STACK(ℙ(Predicate×Terms))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Events={arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬arrive_at=play_at"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="∀terms2⦂Terms·terms2∈Point⇒(∀terms1⦂Terms·terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧Vector∈Terms × Terms ⇸ Terms)"/>
        <org.eventb.core.prPred name="p95" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p88" org.eventb.core.predicate="¬{event_real ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬at=cried_at"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬plan2=plan4"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="event_real∈dom(plan_body)∧⊤"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Predicate × Terms)))))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Predicate × Terms)))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬at=smiled_at"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_body(arrive_at)(plan2)=plan_body_plan2"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="¬travel=smile_at"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p101" org.eventb.core.predicate="Predicate={arrive_at,play_at}∪{travel,smile_at,cry_at}∪Plan_library"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="∀terms1⦂Terms,terms2⦂Terms·terms1∈Point∧terms2∈Point⇒terms1 ↦ terms2∈dom(Vector)∧Vector∈Terms × Terms ⇸ Terms"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬smiled_at=next"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="plan_body_plan3=(λbelief⦂ℙ(Belief_predicates×Terms) ↦ terms1⦂Terms·terms1∈Point∧at ↦ terms1∈belief ∣ {push({smile_at ↦ terms1},Empty ⦂ STACK(ℙ(Predicate×Terms)))})"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="delete_set={terms1⦂Terms,terms2⦂Terms·terms1∈Point∧terms2∈Point ∣ travel ↦ Vector(terms1 ↦ terms2) ↦ (at ↦ terms1)}"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="plan3∈dom(plan_body(play_at))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="{event_real ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="precondition={terms1⦂Terms,terms2⦂Terms·terms1∈Point∧terms2∈Point ∣ travel ↦ Vector(terms1 ↦ terms2) ↦ (at ↦ terms1)}∪{terms⦂Terms·terms∈Point ∣ smile_at ↦ terms ↦ (at ↦ terms)}∪{terms⦂Terms·terms∈Point ∣ cry_at ↦ terms ↦ (at ↦ terms)}"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{cried_at},{next})"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Predicate × Terms))"/>
        <org.eventb.core.prPred name="p92" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="¬plan2=plan3"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="plan_body(play_at)∈Predicate ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Predicate × Terms))))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="plan_body(play_at)(plan4)=plan_body_plan4"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p103" org.eventb.core.predicate="{arrive_at,play_at}∩{plan1,plan2,plan3,plan4}=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="Actions={travel,smile_at,cry_at}"/>
        <org.eventb.core.prPred name="p99" org.eventb.core.predicate="{arrive_at,play_at}∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Belief_predicates={at,smiled_at,cried_at,next}"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬plan1=plan4"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="¬travel=cry_at"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬at=next"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="plan_body∈Predicate ⇸ ℙ(Predicate × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Predicate × Terms)))))"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="Vector∈Terms × Terms ⇸ Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="plan4∈dom(plan_body(play_at))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="precondition∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real∈dom(plan_body)∧plan_body∈Predicate ⇸ ℙ(Predicate × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Predicate × Terms)))))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="pop(intention_stack)={event_real ↦ terms}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="plan_body_plan2=(λbelief⦂ℙ(Belief_predicates×Terms) ↦ terms2⦂Terms·terms2∈Point ∣ {terms1⦂Terms·terms1∈Point∧next ↦ Vector(terms1 ↦ terms2)∈belief∧at ↦ terms1∈belief ∣ push({travel ↦ Vector(terms1 ↦ terms2)},Empty ⦂ STACK(ℙ(Predicate×Terms)))})"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="¬plan1=plan2"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p97" org.eventb.core.predicate="Predicate={arrive_at,play_at}∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p105" org.eventb.core.predicate="Predicate={arrive_at,play_at}∪{travel,smile_at,cry_at}∪{plan1,plan2,plan3,plan4}"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p96" org.eventb.core.predicate="event_real∈{arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="¬plan1=plan3"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan_body_plan4=(λbelief⦂ℙ(Belief_predicates×Terms) ↦ terms1⦂Terms·terms1∈Point∧at ↦ terms1∈belief ∣ {push({cry_at ↦ terms1},Empty ⦂ STACK(ℙ(Predicate×Terms)))})"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="play_at∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="¬cried_at=next"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="delete_set∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="add_set={terms⦂Terms,terms1⦂Terms,terms2⦂Terms·terms1∈Point∧terms2∈Point∧terms=Vector(terms1 ↦ terms2) ∣ travel ↦ terms ↦ (at ↦ terms2)}∪{terms⦂Terms·terms∈Point ∣ cry_at ↦ terms ↦ (cried_at ↦ terms)}∪{terms⦂Terms·terms∈Point ∣ smile_at ↦ terms ↦ (smiled_at ↦ terms)}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan_body_plan1=(λbelief⦂ℙ(Belief_predicates×Terms) ↦ terms3⦂Terms·terms3∈Point ∣ {terms1⦂Terms,terms2⦂Terms·terms2∈Point∧terms1∈Point∧next ↦ Vector(terms1 ↦ terms2)∈belief∧next ↦ Vector(terms2 ↦ terms3)∈belief∧at ↦ terms1∈belief ∣ push({travel ↦ Vector(terms1 ↦ terms2)},push({play_at ↦ terms2},push({travel ↦ Vector(terms2 ↦ terms3)},Empty ⦂ STACK(ℙ(Predicate×Terms)))))})"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="plan1∈dom(plan_body(arrive_at))"/>
        <org.eventb.core.prPred name="p93" org.eventb.core.predicate="relevant_plans∈ℙ(Predicate × Terms)">
            <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(Predicate×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="plan_body(play_at)(plan3)=plan_body_plan3"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="partition(Predicate,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p102" org.eventb.core.predicate="{arrive_at,play_at}∩{travel,smile_at,cry_at}=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="add_set∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Predicate=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬smiled_at=cried_at"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="∀belief⦂ℙ(Belief_predicates×Terms),terms3⦂Terms·terms3∈Point⇒(∀terms1⦂Terms,terms2⦂Terms·terms2∈Point∧terms1∈Point⇒terms1 ↦ terms2∈dom(Vector)∧⊤∧(next ↦ Vector(terms1 ↦ terms2)∈belief⇒terms2 ↦ terms3∈dom(Vector)))"/>
        <org.eventb.core.prPred name="p104" org.eventb.core.predicate="{travel,smile_at,cry_at}∩{plan1,plan2,plan3,plan4}=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="plan_body(arrive_at)(plan1)=plan_body_plan1"/>
        <org.eventb.core.prPred name="p98" org.eventb.core.predicate="{arrive_at,play_at}∩Actions=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p100" org.eventb.core.predicate="{travel,smile_at,cry_at}∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="plan_body(arrive_at)∈Predicate ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Predicate × Terms))))"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="¬plan3=plan4"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="¬smile_at=cry_at"/>
        <org.eventb.core.prPred name="p89" org.eventb.core.predicate="event_real∈dom(plan_body)"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL1:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/act2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/grd2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48" org.eventb.core.prSets="Actions,Belief_predicates,Events,Plan_library,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="predicate">
                <org.eventb.theory.core.scTypeArgument name="event_predicate" org.eventb.theory.core.givenType="event_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="action_predicate" org.eventb.theory.core.givenType="action_predicate"/>
                <org.eventb.theory.core.scTypeArgument name="plan_predicate" org.eventb.theory.core.givenType="plan_predicate"/>
                <org.eventb.theory.core.scDatatypeConstructor name="event">
                    <org.eventb.theory.core.scConstructorArgument name="eventp" org.eventb.core.type="event_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="action">
                    <org.eventb.theory.core.scConstructorArgument name="actionp" org.eventb.core.type="action_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="plan">
                    <org.eventb.theory.core.scConstructorArgument name="planp" org.eventb.core.type="plan_predicate"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,{a},{b},{c},{ab},{bc},{ac}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p33" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{joked_at}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p65,p66,p67,p68"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p65,p66,p67,p68"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p69,p70"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p69,p70"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{joke_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p71,p72,p73,p74"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p71,p72,p73,p74"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p75,p76,p77,p78,p79,p80,p81"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p75,p76,p77,p78,p79,p80,p81"/>
                                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p24">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p82">
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p82" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p84">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p40" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p83"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p85"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p86"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p87"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p84" org.eventb.core.prHyps="p24,p7,p46,p43,p39,p9,p1,p5,p25,p11,p32,p34,p3,p6,p22,p10,p2,p28,p17,p42,p44,p15,p20,p47,p4,p31,p30,p21,p19,p38,p35,p45,p29,p37,p16,p23,p12,p13,p27,p36,p48,p41,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p60,p61,p62,p63,p64,p65,p66,p67,p68,p69,p70,p71,p72,p73,p74,p75,p76,p77,p78,p79,p80,p81,p83">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ab" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="ac" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="add_set" org.eventb.core.type="ℙ(Actions×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="backups" org.eventb.core.type="ℙ(Events×Terms×ℙ(predicate(Events,Actions,Plan_library)×Terms))"/>
        <org.eventb.core.prIdent name="bc" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="context" org.eventb.core.type="ℙ(Plan_library×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="delete_set" org.eventb.core.type="ℙ(Actions×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(Events×Terms)×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prIdent name="joke_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="joked_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Plan_library"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Plan_library×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Events"/>
        <org.eventb.core.prIdent name="precondition" org.eventb.core.type="ℙ(Actions×Terms×ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="travel" org.eventb.core.type="Actions"/>
        <org.eventb.core.prIdent name="triggering_event" org.eventb.core.type="ℙ(Plan_library×(Events×Terms))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="precondition={travel ↦ ab ↦ {at ↦ a},travel ↦ bc ↦ {at ↦ b},travel ↦ ac ↦ {at ↦ a},smile_at ↦ b ↦ {at ↦ c},joke_at ↦ b ↦ {at ↦ b}}"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="plan1∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬a=ac"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="triggering_event∈Plan_library ⇸ Events × Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{joked_at})"/>
        <org.eventb.core.prPred name="p84" org.eventb.core.predicate="action_real ↦ terms1∈dom(precondition)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="plan1∈dom(context)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="plan_body(plan4)=push({action(joke_at) ↦ b},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="plan4∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="¬c=ac"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬b=ab"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="plan1∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="context(plan3)={at ↦ b}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="context(plan2)={at ↦ a}"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="plan3∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p76" org.eventb.core.predicate="¬plan1=plan2"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p73" org.eventb.core.predicate="¬travel=joke_at"/>
        <org.eventb.core.prPred name="p86" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)">
            <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(Events×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="plan4∈dom(context)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="backups∈Events × Terms ⇸ ℙ(predicate(Events,Actions,Plan_library) × Terms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="plan_body(plan1)=push({action(travel) ↦ ab},push({event(play_at) ↦ b},push({action(travel) ↦ bc},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))))"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="Events={arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="¬arrive_at=play_at"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="triggering_event(plan3)=play_at ↦ b"/>
        <org.eventb.core.prPred name="p83" org.eventb.core.predicate="plan_body=(∅ ⦂ ℙ(Plan_library×STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan2∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="context={plan1 ↦ {at ↦ a},plan2 ↦ {at ↦ a},plan3 ↦ {at ↦ b},plan4 ↦ {at ↦ b}}"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="partition(Terms,{a},{b},{c},{ab},{bc},{ac})"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p77" org.eventb.core.predicate="¬plan1=plan3"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬a=bc"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="¬c=bc"/>
        <org.eventb.core.prPred name="p80" org.eventb.core.predicate="¬plan2=plan4"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="∃pop0⦂ℙ(predicate(Events,Actions,Plan_library)×Terms),next_stack1⦂STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Belief_predicates={at,smiled_at,joked_at}"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="triggering_event∈Plan_library → Events × Terms"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="triggering_event(plan2)=arrive_at ↦ c"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Terms={a,b,c,ab,bc,ac}"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="¬smiled_at=joked_at"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="plan2∈dom(context)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="pop(intention_stack)={action(action_real) ↦ terms1}"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="context∈Plan_library ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬bc=ac"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="plan_body(plan2)=push({action(travel) ↦ ac},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms)))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="delete_set={travel ↦ ab ↦ {at ↦ a},travel ↦ bc ↦ {at ↦ b},travel ↦ ac ↦ {at ↦ a},smile_at ↦ b ↦ (∅ ⦂ ℙ(Belief_predicates×Terms)),joke_at ↦ b ↦ (∅ ⦂ ℙ(Belief_predicates×Terms))}"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬at=smiled_at"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="Actions={travel,smile_at,joke_at}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="delete_set∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="action_real ↦ terms1∈dom(precondition)∧precondition∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="plan_body∈Plan_library → STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="triggering_event={plan1 ↦ (arrive_at ↦ c),plan2 ↦ (arrive_at ↦ c),plan3 ↦ (play_at ↦ b),plan4 ↦ (play_at ↦ b)}"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬b=ac"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="¬travel=smile_at"/>
        <org.eventb.core.prPred name="p75" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="¬a=ab"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="plan2∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="context(plan4)={at ↦ b}"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{joke_at})"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="context(plan1)={at ↦ a}"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬c=ab"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="precondition∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="add_set={travel ↦ ab ↦ {at ↦ b},travel ↦ bc ↦ {at ↦ c},travel ↦ ac ↦ {at ↦ c},smile_at ↦ b ↦ {smiled_at ↦ b},joke_at ↦ b ↦ {joked_at ↦ b}}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="triggering_event(plan4)=play_at ↦ b"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="¬at=joked_at"/>
        <org.eventb.core.prPred name="p85" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p74" org.eventb.core.predicate="¬smile_at=joke_at"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="triggering_event(plan1)=arrive_at ↦ c"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="plan_body(plan3)=push({action(smile_at) ↦ b},push({action(joke_at) ↦ b},Empty ⦂ STACK(ℙ(predicate(Events,Actions,Plan_library)×Terms))))"/>
        <org.eventb.core.prPred name="p87" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="plan4∈dom(triggering_event)"/>
        <org.eventb.core.prPred name="p79" org.eventb.core.predicate="¬plan2=plan3"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="plan3∈dom(context)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="context∈Plan_library → ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="plan_body={}"/>
        <org.eventb.core.prPred name="p81" org.eventb.core.predicate="¬plan3=plan4"/>
        <org.eventb.core.prPred name="p82" org.eventb.core.predicate="action_real ↦ terms1∈dom(precondition)∧⊤"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="plan_body∈Plan_library ⇸ STACK(ℙ(predicate(Events,Actions,Plan_library) × Terms))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="¬ab=bc"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="plan3∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬ab=ac"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="add_set∈Actions × Terms ⇸ ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p78" org.eventb.core.predicate="¬plan1=plan4"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬b=bc"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46,p47,p48"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45,p46,p47,p48"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50,p51,p52"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p49,p50,p51,p52"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53,p54"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p53,p54"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p33">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p55">
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p55" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p60">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58,p59"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p61"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p62"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p63"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p59"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p45">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p43" org.eventb.core.prInfHyps="p66"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p44" org.eventb.core.prInfHyps="p67"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p43,p44"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p45"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p28,p38,p30,p25,p19,p32,p3,p13,p29,p22,p34,p40,p16,p42,p37,p8,p10,p21,p18,p17,p24,p1,p20,p23,p14,p11,p35,p31,p41,p12,p39,p5,p36,p7,p33,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p56,p57,p58,p66,p67">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p68">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p68" org.eventb.core.prHyps="p34"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p69">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p45">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p43" org.eventb.core.prInfHyps="p66"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p44" org.eventb.core.prInfHyps="p67"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p43,p44"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p45"/>
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event_real)" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p34">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p70">
                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p69" org.eventb.core.prHyps="p29">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p71">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p71" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p72">
                                                                                                        <org.eventb.core.prRule name="r10" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p72" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p70" org.eventb.core.predicate="Plan_body(event_real)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs))))"/>
        <org.eventb.core.prPred name="p69" org.eventb.core.predicate="dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="terms2∈Terms"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="event_real ↦ terms2∈Events × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({action_real} ↦ terms1)}"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬Preconditions[{action_real ↦ terms1}]⊆belief_base"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊈belief_base"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)∧⊤"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p71" org.eventb.core.predicate="dom(Plan_body(event_real)) ↦ terms2∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p72" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r10" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="UserP">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="BasicP">
                    <org.eventb.theory.core.scConstructorArgument name="getBasicP" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Seq">
                    <org.eventb.theory.core.scConstructorArgument name="leftSeq" org.eventb.core.type="UserP"/>
                    <org.eventb.theory.core.scConstructorArgument name="rightSeq" org.eventb.core.type="UserP"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Concurrent">
                    <org.eventb.theory.core.scConstructorArgument name="leftConc" org.eventb.core.type="UserP"/>
                    <org.eventb.theory.core.scConstructorArgument name="rightConc" org.eventb.core.type="UserP"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Goal">
                    <org.eventb.theory.core.scConstructorArgument name="SuccesUser" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="EventUser" org.eventb.core.type="non_belief_predicates×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureUser" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="Plan_body">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="NilComp"/>
                <org.eventb.theory.core.scDatatypeConstructor name="BasicPComp">
                    <org.eventb.theory.core.scConstructorArgument name="getBasicPB" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="SeqComp">
                    <org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.type="Plan_body"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="ConcurrentComp">
                    <org.eventb.theory.core.scConstructorArgument name="left" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="right" org.eventb.core.type="Plan_body"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="GoalComp">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessComp" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="getGoalPlanBody" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureComp" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Rhd">
                    <org.eventb.theory.core.scConstructorArgument name="current" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="backup" org.eventb.core.type="Plan_body"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="EventComp">
                    <org.eventb.theory.core.scConstructorArgument name="getEvent" org.eventb.core.type="non_belief_predicates×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="UserPlan" org.eventb.core.type="ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms)))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isEventComp" org.eventb.core.label="isEventComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="UserP2Plan_body" org.eventb.core.label="UserP2Plan_body" org.eventb.core.predicate="Plan_library∈non_belief_predicates ⇸ (ℙ(belief_predicates × terms) × terms ⇸ ℙ(UserP(belief_predicates,non_belief_predicates,terms)))" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="uP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="Plan_library" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(non_belief_predicates×ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms))))"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="uP">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Goal(succes,evtxterms,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="GoalComp(succes,EventComp(evtxterms,Plan_library((prj1 ⦂ ℙ(non_belief_predicates×terms×non_belief_predicates))(evtxterms))),fail)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="BasicP(nonbeliefpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms) ◁ (id ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)×Plan_body(belief_predicates,non_belief_predicates,terms))))(BasicPComp(nonbeliefpred))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="SeqComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="ConcurrentComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="GetFirsts" org.eventb.core.label="GetFirsts" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)) ◁ (id ⦂ ℙ(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))×ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)))))({BasicPComp(evt)})"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="{EventComp(evt,planlib)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="GetFirsts(l)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="GetFirsts(l)∪GetFirsts(r)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{GoalComp(succes,planrec,failure)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="GetFirsts(cur)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="update" org.eventb.core.label="update" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="prev" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="new" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="new"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="new"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="new"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="SeqComp(update(l,prev,new),r)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{pre⦂Plan_body(belief_predicates,non_belief_predicates,terms),ne⦂Plan_body(belief_predicates,non_belief_predicates,terms)·(pre∈GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(update(l,pre,new),r))∨(pre∈GetFirsts(r)∧ne=ConcurrentComp(l,update(r,pre,new)))∨(pre∉GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(l,r)) ∣ pre ↦ ne}(prev)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="GoalComp(succes,update(planrec,prev,new),failure)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="Rhd(update(cur,prev,new),back)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isBasicComp" org.eventb.core.label="isBasicComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeqComp" org.eventb.core.label="isSeqComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isConcurrentComp" org.eventb.core.label="isConcurrentComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isGoalComp" org.eventb.core.label="isGoalComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isRhd" org.eventb.core.label="isRhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvent/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="UserP">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="BasicP">
                    <org.eventb.theory.core.scConstructorArgument name="getBasicP" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Seq">
                    <org.eventb.theory.core.scConstructorArgument name="leftSeq" org.eventb.core.type="UserP"/>
                    <org.eventb.theory.core.scConstructorArgument name="rightSeq" org.eventb.core.type="UserP"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Concurrent">
                    <org.eventb.theory.core.scConstructorArgument name="leftConc" org.eventb.core.type="UserP"/>
                    <org.eventb.theory.core.scConstructorArgument name="rightConc" org.eventb.core.type="UserP"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Goal">
                    <org.eventb.theory.core.scConstructorArgument name="SuccesUser" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="EventUser" org.eventb.core.type="non_belief_predicates×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureUser" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="Plan_body">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="NilComp"/>
                <org.eventb.theory.core.scDatatypeConstructor name="BasicPComp">
                    <org.eventb.theory.core.scConstructorArgument name="getBasicPB" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="SeqComp">
                    <org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.type="Plan_body"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="ConcurrentComp">
                    <org.eventb.theory.core.scConstructorArgument name="left" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="right" org.eventb.core.type="Plan_body"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="GoalComp">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessComp" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="getGoalPlanBody" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureComp" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="Rhd">
                    <org.eventb.theory.core.scConstructorArgument name="current" org.eventb.core.type="Plan_body"/>
                    <org.eventb.theory.core.scConstructorArgument name="backup" org.eventb.core.type="Plan_body"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="EventComp">
                    <org.eventb.theory.core.scConstructorArgument name="getEvent" org.eventb.core.type="non_belief_predicates×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="UserPlan" org.eventb.core.type="ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms)))"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isEventComp" org.eventb.core.label="isEventComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="." org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#." org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="UserP2Plan_body" org.eventb.core.label="UserP2Plan_body" org.eventb.core.predicate="Plan_library∈non_belief_predicates ⇸ (ℙ(belief_predicates × terms) × terms ⇸ ℙ(UserP(belief_predicates,non_belief_predicates,terms)))" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="uP" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="UserP(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="Plan_library" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="ℙ(non_belief_predicates×ℙ(ℙ(belief_predicates×terms)×terms×ℙ(UserP(belief_predicates,non_belief_predicates,terms))))"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="uP">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Goal(succes,evtxterms,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="GoalComp(succes,EventComp(evtxterms,Plan_library((prj1 ⦂ ℙ(non_belief_predicates×terms×non_belief_predicates))(evtxterms))),fail)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="BasicP(nonbeliefpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="(Plan_body(belief_predicates,non_belief_predicates,terms) ◁ (id ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)×Plan_body(belief_predicates,non_belief_predicates,terms))))(BasicPComp(nonbeliefpred))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="Seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="SeqComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="Concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element;|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="ConcurrentComp(UserP2Plan_body(ag1,Plan_library),UserP2Plan_body(ag2,Plan_library))"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="GetFirsts" org.eventb.core.label="GetFirsts" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="∅ ⦂ ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)) ◁ (id ⦂ ℙ(ℙ(Plan_body(belief_predicates,non_belief_predicates,terms))×ℙ(Plan_body(belief_predicates,non_belief_predicates,terms)))))({BasicPComp(evt)})"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="{EventComp(evt,planlib)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="GetFirsts(l)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="GetFirsts(l)∪GetFirsts(r)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{GoalComp(succes,planrec,failure)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element=|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="GetFirsts(cur)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="update" org.eventb.core.label="update" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="prev" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="new" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="*" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="new"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="new"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="new"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="SeqComp(update(l,prev,new),r)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{pre⦂Plan_body(belief_predicates,non_belief_predicates,terms),ne⦂Plan_body(belief_predicates,non_belief_predicates,terms)·(pre∈GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(update(l,pre,new),r))∨(pre∈GetFirsts(r)∧ne=ConcurrentComp(l,update(r,pre,new)))∨(pre∉GetFirsts(l)∧pre∉GetFirsts(r)∧ne=ConcurrentComp(l,r)) ∣ pre ↦ ne}(prev)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="GoalComp(succes,update(planrec,prev,new),failure)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element&gt;|org.eventb.theory.core.recursiveOperatorDefinition#*|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="Rhd(update(cur,prev,new),back)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isBasicComp" org.eventb.core.label="isBasicComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element?|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeqComp" org.eventb.core.label="isSeqComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element@|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isConcurrentComp" org.eventb.core.label="isConcurrentComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementA|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isGoalComp" org.eventb.core.label="isGoalComp" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementB|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isRhd" org.eventb.core.label="isRhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="plan" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="Plan_body(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="plan">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="NilComp ⦂ Plan_body(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="BasicPComp(evt)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="-" org.eventb.core.expression="EventComp(evt,planlib)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#-" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="SeqComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="ConcurrentComp(l,r)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="GoalComp(succes,planrec,failure)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="Rhd(cur,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#elementC|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16,p17"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15,p16,p17"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p18,p19"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p23"/>
                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p24"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p14">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p25"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p13" org.eventb.core.prInfHyps="p26"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p12,p13"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p14"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p11,p8,p4,p2,p1,p5,p9,p6,p12,p13,p14,p15,p16,p17,p18,p19,p25,p26">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body_def" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(UserP(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="intentions∈ℙ(Plan_body(Belief_predicates,None_belief_predicates,Terms))">
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(Plan_body(Belief_predicates,None_belief_predicates,Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="external_events ∖ {event ↦ terms}∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Plan_body_def∈Events ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(UserP(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="None_belief_predicates=Events∪Actions"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="event ↦ terms∈external_events"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p33"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p34"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p35"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with relevant_plans=dom(Plan_body(event))" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p23">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p37"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p38"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p21,p22"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p23"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p19,p7,p3,p10,p12,p13,p17,p15,p16,p8,p14,p9,p11,p5,p2,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p37,p38">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="{event ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬{event ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="relevant_plans=dom(Plan_body(event))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions∪{{event ↦ terms} ↦ push({constructNDG(relevant_plans ↦ terms)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="event∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="constructNDG({event} ↦ terms)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="intentions∪{{event ↦ terms} ↦ push({constructNDG(dom(Plan_body(event)) ↦ terms)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p31"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p32"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p33"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p34"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p35"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p23">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p36"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p37"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p21,p22"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p20,p7,p3,p9,p11,p13,p18,p15,p16,p12,p17,p14,p8,p10,p5,p1,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p36,p37">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Preconditions[{action ↦ terms2}]⊈belief_base"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬Preconditions[{action ↦ terms2}]⊆belief_base"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="action∈Actions"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="event∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="constructNDG({action} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(intentions ∖ {{event ↦ terms1} ↦ intention_stack})∪{{event ↦ terms1} ↦ push({constructNDG(dom(Plan_body(event)) ↦ terms1)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="{event ↦ terms1} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd8/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/grd9/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/act1/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1" org.eventb.core.prSets="Terms" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p2"/>
                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p3"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4"/>
                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p5">
                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p5" org.eventb.core.prHyps="p1"/>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p6"/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="a ↦ b∈dom(Vector)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Vector∈Terms × Terms ⇸ Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="b ↦ c∈dom(Vector)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="a ↦ b∈dom(Vector)∧Vector∈Terms × Terms ⇸ Terms∧b ↦ c∈dom(Vector)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv6/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p12">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p23"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p24"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p6,p2,p1,p7,p4,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p23,p24">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms×None_belief_predicates))∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/inv6/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/StackTheory/StackTheo.tuf|org.eventb.theory.core.theoryRoot#StackTheo|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊥ hyp" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="⊥"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.falseHyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv7/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p12">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p23"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p24"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p10,p11"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p9,p6,p2,p1,p7,p4,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p23,p24">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∈Events × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="UnifyOnePlanApplicablePlan/grd1/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0,p1,p2,p3" org.eventb.core.prSets="Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Predicate,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{cried_at},{next}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{cry_at}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30,p31,p32,p33"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30,p31,p32,p33"/>
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p36"/>
                                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p37"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p38"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p4"/>
                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Events={arrive_at,play_at}" org.eventb.core.prHyps="p21">
                                                                                    <org.eventb.core.prAnte name="'">
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p9" org.eventb.core.prInfHyps="p39"/>
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p10" org.eventb.core.prInfHyps="p40"/>
                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p11" org.eventb.core.prInfHyps="p41"/>
                                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p9,p10,p11"/>
                                                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p21"/>
                                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Actions={travel,smile_at,cry_at}" org.eventb.core.prHyps="p23">
                                                                                            <org.eventb.core.prAnte name="'">
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p12" org.eventb.core.prInfHyps="p42"/>
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p39" org.eventb.core.prInfHyps="p43"/>
                                                                                                <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p40" org.eventb.core.prInfHyps="p44"/>
                                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p12,p39,p40"/>
                                                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p23"/>
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Plan_library={plan1,plan2,plan3,plan4}" org.eventb.core.prHyps="p27">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p46"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p41" org.eventb.core.prInfHyps="p47"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF2" org.eventb.core.prHyps="p42" org.eventb.core.prInfHyps="p48"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF3" org.eventb.core.prHyps="p43" org.eventb.core.prInfHyps="p49"/>
                                                                                                        <org.eventb.core.prHypAction name="DESELECT4" org.eventb.core.prHyps="p45,p41,p42,p43"/>
                                                                                                        <org.eventb.core.prHypAction name="HIDE5" org.eventb.core.prHyps="p27"/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬travel=cry_at"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬at=next">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="plan_real∈{plan1,plan2,plan3,plan4}">
            <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{cry_at})"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬plan1=plan2"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Predicate={arrive_at,play_at}∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Events={arrive_at,play_at}"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬arrive_at=play_at"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Predicate={arrive_at,play_at}∪{travel,smile_at,cry_at}∪{plan1,plan2,plan3,plan4}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬plan1=plan3"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="test_stack∈STACK(ℙ(Predicate × Terms))">
            <org.eventb.core.prIdent name="test_stack" org.eventb.core.type="STACK(ℙ(Predicate×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬plan2=plan4"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬cried_at=next">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Predicate,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬travel=smile_at"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Predicate={arrive_at,play_at}∪{travel,smile_at,cry_at}∪Plan_library"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬smiled_at=next">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="{arrive_at,play_at}∩{travel,smile_at,cry_at}=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Predicate=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="plan_real∈Plan_library">
            <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{cried_at},{next})">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="{travel,smile_at,cry_at}∩{plan1,plan2,plan3,plan4}=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="{arrive_at,play_at}∩Actions=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬plan2=plan3"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="{travel,smile_at,cry_at}∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬plan3=plan4"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="{arrive_at,play_at}∩{plan1,plan2,plan3,plan4}=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬smile_at=cry_at"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Actions={travel,smile_at,cry_at}"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="{arrive_at,play_at}∩Plan_library=(∅ ⦂ ℙ(Predicate))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Belief_predicates={at,smiled_at,cried_at,next}">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬plan1=plan4"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL1:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="UnifyOnePlanApplicablePlan/grd6/WD"/>
    <org.eventb.core.prProof name="UnifyOnePlanApplicablePlan/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Predicate,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{cried_at},{next}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22,p23"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p22,p23"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{cry_at}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31,p32,p33,p34,p35,p36"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31,p32,p33,p34,p35,p36"/>
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Predicate×Predicate×ℙ(ℙ(Belief_predicates×Terms)×Terms×STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="plan_real ↦ event_real∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬at=next">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Point,{a},{b},{c})">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Predicate,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="plan_real ↦ event_real∈dom(plan_body)∧plan_body∈Predicate × Predicate ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × STACK(ℙ(Predicate × Terms)))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{cry_at})">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬smiled_at=next">
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="plan_body∈Predicate × Predicate ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × STACK(ℙ(Predicate × Terms)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Predicate=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{cried_at},{next})">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬plan2=plan4">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬plan3=plan4">
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Actions={travel,smile_at,cry_at}">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬cried_at=next">
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Belief_predicates={at,smiled_at,cried_at,next}">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬plan1=plan4">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="UnifyOnePlanApplicablePlan/act1/FIS" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="" org.eventb.core.prSets="Belief_predicates,Predicate,Terms" org.eventb.core.psManual="true">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p3">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2"/>
                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p3" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p4">
                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p4" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p5">
                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p6"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p7"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p8"/>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Predicate×Predicate×ℙ(ℙ(Belief_predicates×Terms)×Terms×STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="test_stack∈STACK(ℙ(Predicate × Terms))">
            <org.eventb.core.prIdent name="test_stack" org.eventb.core.type="STACK(ℙ(Predicate×Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point⊆Terms">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{plan_body_stack⦂STACK(ℙ(Predicate×Terms))·belief_base ↦ terms2 ↦ plan_body_stack∈plan_body(plan_real ↦ event_real) ∣ plan_body_stack}≠(∅ ⦂ ℙ(STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="∃plan_body_stack⦂STACK(ℙ(Predicate×Terms))·¬¬belief_base ↦ terms2 ↦ plan_body_stack∈plan_body(plan_real ↦ event_real)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="¬(∀plan_body_stack⦂STACK(ℙ(Predicate×Terms))·¬belief_base ↦ terms2 ↦ plan_body_stack∈plan_body(plan_real ↦ event_real))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="∃plan_body_stack⦂STACK(ℙ(Predicate×Terms))·belief_base ↦ terms2 ↦ plan_body_stack∈plan_body(plan_real ↦ event_real)"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="UnifyOnePlanApplicablePlan/grd10/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,Predicate,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Predicate,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Belief_predicates,{at},{smiled_at},{cried_at},{next}))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15,p16,p17,p18,p19,p20"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Events,{arrive_at},{play_at}))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22,p23"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p22,p23"/>
                                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Actions,{travel},{smile_at},{cry_at}))" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Plan_library,{plan1},{plan2},{plan3},{plan4}))" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p29" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31,p32,p33,p34,p35,p36"/>
                                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31,p32,p33,p34,p35,p36"/>
                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37">
                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p38" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps=""/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prIdent name="plan_body" org.eventb.core.type="ℙ(Predicate×Predicate×ℙ(ℙ(Belief_predicates×Terms)×Terms×STACK(ℙ(Predicate×Terms))))"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="Predicate"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬travel=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="⊤∧⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="plan_real ↦ event_real∈dom(plan_body)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬at=next">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="¬at=smiled_at">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Point,{a},{b},{c})">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Predicate,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬travel=smile_at">
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="partition(Plan_library,{plan1},{plan2},{plan3},{plan4})">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="plan_real ↦ event_real∈dom(plan_body)∧plan_body∈Predicate × Predicate ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × STACK(ℙ(Predicate × Terms)))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(Actions,{travel},{smile_at},{cry_at})">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_library={plan1,plan2,plan3,plan4}">
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬smiled_at=next">
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="plan_body∈Predicate × Predicate ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × STACK(ℙ(Predicate × Terms)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬plan1=plan2">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c">
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(Predicate))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Events,{arrive_at},{play_at})">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Predicate=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(Predicate)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬smiled_at=cried_at">
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Events={arrive_at,play_at}">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬arrive_at=play_at">
            <org.eventb.core.prIdent name="arrive_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="play_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}">
            <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b">
            <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
            <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="partition(Belief_predicates,{at},{smiled_at},{cried_at},{next})">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬plan2=plan3">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="¬plan1=plan3">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="¬at=cried_at">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬plan2=plan4">
            <org.eventb.core.prIdent name="plan2" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬plan3=plan4">
            <org.eventb.core.prIdent name="plan3" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬smile_at=cry_at">
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Actions={travel,smile_at,cry_at}">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(Predicate)"/>
            <org.eventb.core.prIdent name="cry_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="smile_at" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="travel" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬cried_at=next">
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Belief_predicates={at,smiled_at,cried_at,next}">
            <org.eventb.core.prIdent name="at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="cried_at" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="next" org.eventb.core.type="Belief_predicates"/>
            <org.eventb.core.prIdent name="smiled_at" org.eventb.core.type="Belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬plan1=plan4">
            <org.eventb.core.prIdent name="plan1" org.eventb.core.type="Predicate"/>
            <org.eventb.core.prIdent name="plan4" org.eventb.core.type="Predicate"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL4:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/inv7/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0,p1" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p3,p4"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p3,p4"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6,p7,p8"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6,p7,p8"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p9" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p10,p11,p12,p13"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p10,p11,p12,p13"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p15,p16"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p15,p16"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p24"/>
                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p25"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with relevant_plans=dom(Plan_body(event_real))" org.eventb.core.prHyps="p1">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p27"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p26"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p1"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p5">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p28"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p29"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p3,p4"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p5"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="relevant_plans=dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="{event_real ↦ terms}∉dom(intentions)">
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
            <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="relevant_plans∈ℙ(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬{event_real ↦ terms}∈dom(intentions)">
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
            <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="one_plan∈dom(Plan_body(event_real))">
            <org.eventb.core.prIdent name="one_plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="one_plan∈relevant_plans">
            <org.eventb.core.prIdent name="one_plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd10/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p25"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p26"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="Agent_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="Agent_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)∧plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="Agent_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="INITIALISATION/inv8/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p20,p21,p22"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19,p20,p21,p22"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p14" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p29"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p30"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p31"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p19">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p32"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p33"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p17,p18"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p19"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p13,p10,p9,p11,p5,p2,p6,p1,p12,p7,p8,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p32,p33">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="card(VectorTerms)=9"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(VectorTerms)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs))))∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/inv7/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29,p30,p31"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29,p30,p31"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33,p34,p35"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33,p34,p35"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p38"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p39"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p40"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p41"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_real=plan_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p7">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p42"/>
                                                        <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p14"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p7"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_body_stack=stack_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p15">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p43"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p37"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p28">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p44"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p45"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p26,p27"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p28"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p12,p16,p1,p6,p17,p21,p10,p24,p9,p20,p8,p25,p22,p14,p13,p19,p18,p5,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p42,p43,p44,p45">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="plan_body_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ plan_body_stack∈alreadytry"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="plan_intention(event_real ↦ terms2)∈Plan_library"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ stack_intention(event_real ↦ terms2)∈alreadytry"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="stack_intention∈None_belief_predicates × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="plan_real=plan_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="plan_body_stack=stack_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="event_real ↦ terms2∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="event_real ↦ terms2 ↦ plan_body_stack∉alreadytry"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{event_real ↦ terms2} ⩤ stack_intention∈Events × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="compute_plan/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36,p37"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38,p39,p40,p41"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38,p39,p40,p41"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43,p44,p45"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43,p44,p45"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p47"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p47"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p2">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p48">
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p48" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p51">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p34" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p52"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p53"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p54"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p55"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p51" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p56">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p57"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p58"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p24,p32,p26,p20,p15,p28,p3,p10,p25,p18,p29,p33,p12,p35,p30,p6,p8,p17,p14,p13,p21,p1,p16,p19,p11,p9,p31,p27,p2,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p49,p50,p57,p58">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p59">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="p29"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p60">
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p31"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p61">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p57"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p58"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="p24,p32,p26,p20,p15,p28,p3,p10,p25,p18,p29,p33,p12,p35,p30,p6,p8,p17,p14,p13,p21,p1,p16,p19,p11,p9,p31,p27,p2,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p49,p50,p57,p58">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p62">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p57"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p58"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event_real)" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p29">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p63">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p62" org.eventb.core.prHyps="p63"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p64">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p57"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p58"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p24,p32,p26,p20,p15,p28,p3,p10,p25,p18,p29,p33,p12,p35,p30,p6,p8,p17,p14,p13,p21,p1,p16,p19,p11,p9,p31,p27,p2,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p49,p50,p57,p58">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p65">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p57"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p58"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for plan_intention(event_real ↦ terms)" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p31">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p66">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event_real)" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p29">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p63">
                                                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event_real)(plan_intention(event_real ↦ terms))" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p63">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p65">
                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="p65"/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.1"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧⊤∧plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates∧plan_intention(event_real ↦ terms)∈dom(Plan_body(event_real))∧Plan_body(event_real)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs))))∧belief_base ↦ terms∈dom(Plan_body(event_real)(plan_intention(event_real ↦ terms)))∧Plan_body(event_real)(plan_intention(event_real ↦ terms))∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Plan_body(event_real)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs))))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="belief_base ↦ terms∈dom(Plan_body(event_real)(plan_intention(event_real ↦ terms)))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬event_real ↦ terms∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates∧plan_intention(event_real ↦ terms)∈dom(Plan_body(event_real))∧Plan_body(event_real)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs))))∧belief_base ↦ terms∈dom(Plan_body(event_real)(plan_intention(event_real ↦ terms)))∧Plan_body(event_real)(plan_intention(event_real ↦ terms))∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real ↦ terms∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="plan_intention(event_real ↦ terms)∈dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="plan_intention(event_real ↦ terms)∈Plan_library"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Plan_body(event_real)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs))))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧event_real ↦ terms∈dom(plan_intention)∧plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates∧plan_intention(event_real ↦ terms)∈dom(Plan_body(event_real))∧Plan_body(event_real)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs))))∧belief_base ↦ terms∈dom(Plan_body(event_real)(plan_intention(event_real ↦ terms)))∧Plan_body(event_real)(plan_intention(event_real ↦ terms))∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="Plan_body(event_real)(plan_intention(event_real ↦ terms))∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="event_real ↦ terms∉dom(stack_intention)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="compute_plan/inv8/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33,p34"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p33,p34"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35,p36,p37,p38"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p35,p36,p37,p38"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p31" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p47"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p48"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p49"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p35">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p33" org.eventb.core.prInfHyps="p51"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p34" org.eventb.core.prInfHyps="p52"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p33,p34"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p35"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p21,p18,p12,p11,p13,p25,p3,p9,p22,p14,p27,p30,p15,p10,p8,p29,p24,p1,p32,p2,p16,p28,p7,p23,p17,p26,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p51,p52">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="one_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="card(VectorTerms)=9"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(VectorTerms)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="belief_base ↦ terms∈dom(Plan_body(event_real)(plan_intention(event_real ↦ terms)))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬event_real ↦ terms∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="event_real ↦ terms∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="plan_intention(event_real ↦ terms)∈dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Plan_body(event_real)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Plan_body(event_real)(plan_intention(event_real ↦ terms))∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="event_real ↦ terms∉dom(stack_intention)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="one_stack∈Plan_body(event_real)(plan_intention(event_real ↦ terms))(belief_base ↦ terms)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="stack_intention{event_real ↦ terms ↦ one_stack}∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/inv8/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p35" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p51"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p52"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p53"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p54"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_real=plan_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p8">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p55"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p56"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p21,p3"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p8"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_body_stack=stack_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p23">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p50" org.eventb.core.prInfHyps="p57"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p50"/>
                                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p23"/>
                                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p58"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p59"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p18,p15,p11,p10,p12,p25,p1,p7,p20,p13,p28,p33,p14,p9,p6,p31,p22,p36,p34,p21,p3,p24,p27,p32,p8,p19,p29,p26,p30,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p55,p56,p57,p58,p59">
                                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_body_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Constructor4NDG({plan_real} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ stack_intention(event_real ↦ terms2)∈alreadytry"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="card(VectorTerms)=9"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Constructor4NDG({plan_intention(event_real ↦ terms2)} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(VectorTerms)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="plan_body_stack=stack_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{plan_real} ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ plan_body_stack∈alreadytry"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="plan_intention(event_real ↦ terms2)∈Plan_library"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="plan_real=plan_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{event_real ↦ terms2} ⩤ stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="event_real ↦ terms2∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="stack_intention∈None_belief_predicates × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="event_real ↦ terms2 ↦ plan_body_stack∉alreadytry"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvent/act3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Agent_programs,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p25"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p26"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p24" org.eventb.core.prHyps="p1">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="{event_real} ↦ terms∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd5/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="goal">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="nonGoal">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="lhd">
                    <org.eventb.theory.core.scConstructorArgument name="currentplan" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="backup" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="seq">
                    <org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.type="AgentPrograms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="concurrent">
                    <org.eventb.theory.core.scConstructorArgument name="left" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="right" org.eventb.core.type="AgentPrograms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="nil"/>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isGoal" org.eventb.core.label="isGoal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNonGoal" org.eventb.core.label="isNonGoal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="element1" org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#element1" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isLhd" org.eventb.core.label="isLhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeq" org.eventb.core.label="isSeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="element1" org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#element1" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isConcurrent" org.eventb.core.label="isConcurrent" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNil" org.eventb.core.label="isNil" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="WellCons" org.eventb.core.label="WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="isNonGoal(agrec)∨isLhd(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="WellCons(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="WellCons(ag1)∧WellCons(ag2)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="WellCons(ag1)∧WellCons(ag2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="GetNonBeliefPred" org.eventb.core.label="GetNonBeliefPred" org.eventb.core.predicate="WellCons(ag)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(non_belief_predicates×terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{nonbeliedpred}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="∅ ⦂ ℙ(non_belief_predicates×terms)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="GetNonBeliefPred(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="GetNonBeliefPred(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="GetNonBeliefPred(ag1)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="GetNonBeliefPred(ag1)∪GetNonBeliefPred(ag2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="remove" org.eventb.core.label="remove" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(AgentPrograms(belief_predicates,non_belief_predicates,terms))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="non_belief" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="non_belief_predicates×terms"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="element1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliefpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{a⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·a∈AgentPrograms(belief_predicates,non_belief_predicates,terms)∧((a=(nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms))∧nonbeliefpred=non_belief)∨(a=nonGoal(nonbeliefpred)∧nonbeliefpred≠non_belief)) ∣ a}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="{a⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·a=(nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms))∧a∈AgentPrograms(belief_predicates,non_belief_predicates,terms) ∣ a}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(agrec,non_belief) ∣ goal(succes,agbis,fail)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(agrec,non_belief) ∣ lhd(agbis,back)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(ag2,non_belief) ∣ seq(agbis,ag2)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{ag1bis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms),ag2bis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·(ag1bis∈remove(ag1,non_belief)∧ag2bis=ag2∧non_belief∈GetNonBeliefPred(ag1))∨(ag2bis∈remove(ag2,non_belief)∧ag1bis=ag1∧non_belief∈GetNonBeliefPred(ag2))∨(non_belief∈GetNonBeliefPred(ag1)∧non_belief∈GetNonBeliefPred(ag2)∧ag1bis=ag1∧ag2bis=ag2) ∣ concurrent(ag1bis,ag2bis)}"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p19"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="intentions∈ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="&#9;END&#10;&#10;&#9;⚬&#9;FailureRecoveryBlockedAction/grd2/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Agent_programs,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p20"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p24">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p25"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p26"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p25"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p26"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p1">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p30">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="{action_real} ↦ terms1∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1))∧{action_real} ↦ terms1∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="&#9;END&#10;&#10;&#9;⚬&#9;FailureRecoveryBlockedAction/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35,p36"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p35,p36"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38,p39,p40"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38,p39,p40"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42,p43,p44"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42,p43,p44"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45,p46"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49,p50"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p51"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p52"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p53"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p54"/>
                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p37">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p35" org.eventb.core.prInfHyps="p55"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p56"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p35,p36"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p37"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p24,p21,p16,p15,p17,p27,p2,p11,p25,p18,p29,p32,p19,p12,p9,p30,p26,p34,p10,p33,p5,p31,p7,p28,p1,p20,p14,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p55,p56">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ push({Constructor4NDG(dom(Plan_body(event_real)) ↦ terms2)},Empty ⦂ STACK(ℙ(Agent_programs)))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(VectorTerms)=9"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(VectorTerms)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="terms2∈Terms"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="event_real ↦ terms2∈Events × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({action_real} ↦ terms1)}"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬Preconditions[{action_real ↦ terms1}]⊆belief_base"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊈belief_base"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="&#9;END&#10;&#10;&#9;⚬&#9;FailureRecoveryBlockedAction/act1/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p8,p9,p10,p11"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p8,p9,p10,p11"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p13,p14,p15,p16"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p13,p14,p15,p16"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p18,p19"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p18,p19"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="generalized MP" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p20" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
                                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p24"/>
                                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p29"/>
                                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p30"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p31"/>
                                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p32"/>
                                                                <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p27"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p33">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p8">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p34"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p7" org.eventb.core.prInfHyps="p35"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p6,p7"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p8"/>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p36">
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p2"/>
                                                                    </org.eventb.core.prAnte>
                                                                    <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p37">
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p8">
                                                                            <org.eventb.core.prAnte name="'">
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p34"/>
                                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p7" org.eventb.core.prInfHyps="p35"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p6,p7"/>
                                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p8"/>
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event_real)" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p2">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p38">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p37" org.eventb.core.prHyps="p3">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p39">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p39" org.eventb.core.prHyps="">
                                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                                                                        <org.eventb.core.prRule name="r9" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p40" org.eventb.core.prHyps=""/>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0.0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="event_real ↦ terms2∈Events × Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬Preconditions[{action_real ↦ terms1}]⊆belief_base">
            <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
            <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊈belief_base">
            <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
            <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
            <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Plan_body(event_real)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs))))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)∧⊤"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="dom(Plan_body(event_real)) ↦ terms2∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))∧dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="terms2∈Terms"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.genMPL4"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
        <org.eventb.core.prReas name="r9" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvent/inv4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20,p21,p22,p23"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p24"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p25"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p26"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p27"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p16">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p28"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p29"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p14,p15"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p16"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p13,p5,p1,p7,p6,p8,p11,p9,p10,p3,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p28,p29">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="event_real ↦ terms∈external_events"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions∪{(∅ ⦂ ℙ(None_belief_predicates×Terms)) ↦ push({constructNDG({event_real} ↦ terms)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvent/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Agent_programs,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p18"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p24"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p25">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p26"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p27"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p1">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p28">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p28" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p18">
                                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p18" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p1"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="{event_real} ↦ terms∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd3/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36,p37"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p38,p39,p40,p41"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p38,p39,p40,p41"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43,p44,p45"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43,p44,p45"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p21" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p47"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p47"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p49"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p51"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p52"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p53">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p54"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p53" org.eventb.core.prHyps="p23,p32,p25,p19,p14,p27,p2,p9,p24,p17,p29,p33,p11,p35,p30,p5,p7,p16,p13,p12,p20,p1,p15,p18,p10,p8,p31,p26,p28,p34,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p54,p55">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p56">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p38">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p36" org.eventb.core.prInfHyps="p54"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p36,p37"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p38"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p56" org.eventb.core.prHyps="p24">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p57">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p58" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p59">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps="p24"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1))∧{event_real} ↦ terms∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="{event_real} ↦ terms∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd7/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p42,p43"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p42,p43"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44,p45,p46,p47"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44,p45,p46,p47"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49,p50,p51"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49,p50,p51"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p53"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p53"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p56"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p57"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p58"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p59"/>
                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p60"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p61">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p44">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p42" org.eventb.core.prInfHyps="p62"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p43" org.eventb.core.prInfHyps="p63"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p42,p43"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p44"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="p24,p38,p27,p21,p15,p30,p3,p10,p26,p18,p32,p40,p12,p41,p37,p6,p8,p17,p14,p13,p20,p1,p16,p19,p11,p9,p35,p28,p29,p39,p33,p36,p34,p31,p2,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p62,p63">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p64">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="p32"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="¬{event_real ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="{event_real ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="relevant_plans∈ℙ(None_belief_predicates)">
            <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({event_real} ↦ terms)}"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd7/THM" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44,p45"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p44,p45"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p47,p48,p49"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p47,p48,p49"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p50,p51,p52,p53"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p50,p51,p52,p53"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p24" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p54,p55"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p54,p55"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p27" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p58"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p59"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p46">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p44" org.eventb.core.prInfHyps="p63"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p64"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p44,p45"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p46"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p26,p40,p29,p23,p16,p32,p5,p11,p28,p19,p34,p42,p13,p43,p39,p7,p9,p18,p15,p14,p22,p1,p17,p20,p12,p10,p37,p30,p31,p41,p35,p38,p36,p33,p2,p3,p21,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p63,p64">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="relevant_plans=dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬{event_real ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="{event_real ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="relevant_plans∈ℙ(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({event_real} ↦ terms)}"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/inv6/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44,p45" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p46,p47"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p46,p47"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p48,p49,p50,p51"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p48,p49,p50,p51"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p52,p53,p54,p55"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p52,p53,p54,p55"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p56,p57"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p56,p57"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p58"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p28" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p59"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p63"/>
                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p64"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with relevant_plans=dom(Plan_body(event_real))" org.eventb.core.prHyps="p9">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p44" org.eventb.core.prInfHyps="p65"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p44"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p9"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p48">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p46" org.eventb.core.prInfHyps="p66"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p47" org.eventb.core.prInfHyps="p67"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p46,p47"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p48"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p27,p41,p30,p24,p17,p33,p5,p12,p29,p20,p35,p43,p14,p45,p40,p7,p10,p19,p16,p15,p23,p1,p18,p21,p13,p11,p38,p31,p32,p42,p36,p39,p37,p34,p2,p3,p22,p44,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p58,p59,p65,p66,p67">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="one_plan" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="relevant_plans=dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="¬{event_real ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="plan_intention{event_real ↦ terms ↦ one_plan}∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="{event_real ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="relevant_plans∈ℙ(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="one_plan∈dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({event_real} ↦ terms)}"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="{event_real} ↦ terms∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="one_plan∈relevant_plans"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="compute_plan/inv7/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29,p30,p31"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29,p30,p31"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33,p34,p35"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33,p34,p35"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p38"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p39"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p40"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p41"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p28">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p42"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p43"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p26,p27"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p28"/>
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p18,p3,p10,p19,p22,p13,p24,p12,p21,p11,p1,p25,p2,p7,p20,p9,p5,p14,p17,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p42,p43">
                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="one_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="event_real ↦ terms∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Plan_body(event_real)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="plan_intention(event_real ↦ terms)∈dom(Plan_body(event_real))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="belief_base ↦ terms∈dom(Plan_body(event_real)(plan_intention(event_real ↦ terms)))"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="stack_intention{event_real ↦ terms ↦ one_stack}∈Events × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Plan_body(event_real)(plan_intention(event_real ↦ terms))∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="event_real ↦ terms∉dom(stack_intention)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬event_real ↦ terms∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="one_stack∈Plan_body(event_real)(plan_intention(event_real ↦ terms))(belief_base ↦ terms)"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd5/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p41,p42"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p41,p42"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44,p45,p46"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44,p45,p46"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48,p49,p50"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48,p49,p50"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p52"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p53"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p54"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p55"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p56"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p57"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p43">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p41" org.eventb.core.prInfHyps="p59"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p42" org.eventb.core.prInfHyps="p60"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p41,p42"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p43"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p24,p36,p27,p21,p15,p30,p2,p10,p25,p18,p32,p38,p12,p40,p35,p6,p8,p17,p14,p13,p20,p1,p16,p19,p11,p9,p33,p28,p39,p37,p26,p4,p29,p31,p34,p41,p42,p43,p44,p45,p46,p47,p48,p49,p50,p51,p52,p53,p59,p60">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p61">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p61" org.eventb.core.prHyps="p33"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Constructor4NDG({plan_real} ↦ terms2)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)∧plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="{plan_real} ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/inv6/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p26,p27"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p26,p27"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p28,p29,p30,p31"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p28,p29,p30,p31"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33,p34,p35"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33,p34,p35"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p38"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p39"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p40"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p41"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_real=plan_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p7">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p42"/>
                                                        <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p14"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p7"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with plan_body_stack=stack_intention(event_real ↦ terms2)" org.eventb.core.prHyps="p15">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p43"/>
                                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p37"/>
                                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p28">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p26" org.eventb.core.prInfHyps="p44"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p27" org.eventb.core.prInfHyps="p45"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p26,p27"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p28"/>
                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p12,p16,p1,p6,p17,p21,p10,p24,p9,p20,p8,p25,p22,p14,p13,p19,p18,p5,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p42,p43,p44,p45">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="plan_body_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="plan_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ plan_body_stack∈alreadytry"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="plan_intention(event_real ↦ terms2)∈Plan_library"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬event_real ↦ terms2 ↦ stack_intention(event_real ↦ terms2)∈alreadytry"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="stack_intention∈None_belief_predicates × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="plan_real=plan_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="event_real ↦ terms2∈dom(plan_intention)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="plan_real∈Plan_library"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="plan_body_stack=stack_intention(event_real ↦ terms2)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="event_real ↦ terms2∈dom(stack_intention)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="{event_real ↦ terms2} ⩤ plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan_intention∈None_belief_predicates × Terms ⇸ None_belief_predicates"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="event_real ↦ terms2 ↦ plan_body_stack∉alreadytry"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="ExecuteAction/inv2/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p42,p43,p44" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p26" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p45,p46"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48,p49,p50"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48,p49,p50"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p51,p52,p53,p54"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p51,p52,p53,p54"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p25" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p55,p56"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p55,p56"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p5" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p57"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p59"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p60"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p61"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p62"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_intentions=(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}" org.eventb.core.prHyps="p36">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p36"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_belief_base=(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="p31">
                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p63">
                                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p31"/>
                                                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prGoal="p63" org.eventb.core.prHyps="">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p64">
                                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p64" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p65">
                                                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="remove ¬ in goal" org.eventb.core.prGoal="p65" org.eventb.core.prHyps="">
                                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p66">
                                                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p47">
                                                                                                    <org.eventb.core.prAnte name="'">
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p45" org.eventb.core.prInfHyps="p67"/>
                                                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p46" org.eventb.core.prInfHyps="p68"/>
                                                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p45,p46"/>
                                                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p47"/>
                                                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p66" org.eventb.core.prHyps="p27,p40,p29,p24,p18,p33,p3,p13,p28,p21,p35,p42,p15,p44,p39,p7,p9,p20,p17,p16,p23,p1,p19,p22,p14,p11,p37,p30,p43,p41,p12,p4,p38,p6,p34,p32,p10,p45,p46,p47,p48,p49,p50,p51,p52,p53,p54,p55,p56,p57,p67,p68">
                                                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                                                        </org.eventb.core.prRule>
                                                                                                    </org.eventb.core.prAnte>
                                                                                                </org.eventb.core.prRule>
                                                                                            </org.eventb.core.prAnte>
                                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                                        </org.eventb.core.prRule>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="next_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="next_intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p67" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="next_belief_base=(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]"/>
        <org.eventb.core.prPred name="p68" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p64" org.eventb.core.predicate="¬(belief_base⊆Deletion_sets[{action_real ↦ terms1}]∧¬action_real ↦ terms1∈dom(Addition_sets))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="action_real ↦ terms1∈dom(Preconditions)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="next_intentions=(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({action_real} ↦ terms1)}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊆belief_base"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p66" org.eventb.core.predicate="¬belief_base⊆Deletion_sets[{action_real ↦ terms1}]∨action_real ↦ terms1∈dom(Addition_sets)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="next_belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p65" org.eventb.core.predicate="¬belief_base⊆Deletion_sets[{action_real ↦ terms1}]∨¬¬action_real ↦ terms1∈dom(Addition_sets)"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="¬next_belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p62" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p63" org.eventb.core.predicate="¬(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p61" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.rn"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p36" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p23" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p37,p38"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p37,p38"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p39,p40,p41,p42"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p43,p44,p45,p46"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p47,p48"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p47,p48"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p49"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p51"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p52"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p53"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p54">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p56"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p54" org.eventb.core.prHyps="p24,p32,p26,p20,p15,p28,p2,p10,p25,p18,p29,p33,p12,p36,p30,p5,p7,p17,p14,p13,p21,p1,p16,p19,p11,p8,p31,p27,p35,p9,p34,p37,p38,p39,p40,p41,p42,p43,p44,p45,p46,p47,p48,p49,p55,p56">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p57">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p39">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p37" org.eventb.core.prInfHyps="p55"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p38" org.eventb.core.prInfHyps="p56"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p37,p38"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p39"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p57" org.eventb.core.prHyps="p25">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p58">
                                                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prGoal="p58" org.eventb.core.prHyps="">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p59">
                                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⊤ goal" org.eventb.core.prGoal="p59" org.eventb.core.prHyps=""/>
                                                                                    </org.eventb.core.prAnte>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p60">
                                                                <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p60" org.eventb.core.prHyps="p25"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4DG" org.eventb.core.type="ℙ(ℙ(Belief_predicates×Terms)×(ℙ(None_belief_predicates)×Terms)×ℙ(Belief_predicates×Terms)×Agent_programs)"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p55" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p57" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="card(None_belief_predicates)=9"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="card(Declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="card(Terms)=10"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="card(Agent_programs)=10"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p56" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p60" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p58" org.eventb.core.predicate="{action_real} ↦ terms1∈ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p54" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="card(Vector)=9"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="finite(None_belief_predicates)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="finite(Agent_programs)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="finite(Belief_predicates)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="card(None_declarative_goal_programs)=10"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="finite(Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="finite(Terms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="finite(None_declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Constructor4DG∈ℙ(Belief_predicates × Terms) × (ℙ(None_belief_predicates) × Terms) × ℙ(Belief_predicates × Terms) ⤖ Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="card(Terms)=12"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p59" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="finite(Vector)"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p53" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="card(Belief_predicates)=4"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1))∧{action_real} ↦ terms1∈dom(Constructor4NDG)∧Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="ℙ(None_belief_predicates) × Terms"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.trueGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/inv4/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p29" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p18" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p30,p31"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p30,p31"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p32,p33,p34,p35"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p32,p33,p34,p35"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p36,p37,p38,p39"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p36,p37,p38,p39"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p40,p41"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p40,p41"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p42"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p43"/>
                                                <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p13" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p44"/>
                                                <org.eventb.core.prHypAction name="REWRITE3" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p45,p46"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p47"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p48"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p49"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p50"/>
                                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p46"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p32">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p30" org.eventb.core.prInfHyps="p51"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p31" org.eventb.core.prInfHyps="p52"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p30,p31"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p32"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p19,p22,p2,p11,p20,p24,p27,p15,p12,p9,p25,p21,p29,p10,p28,p5,p26,p7,p23,p1,p16,p14,p30,p31,p32,p33,p34,p35,p36,p37,p38,p39,p40,p41,p43,p44,p45,p51,p52">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Constructor4NDG" org.eventb.core.type="ℙ(ℙ(None_belief_predicates)×Terms×Agent_programs)"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(Agent_programs))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="plan_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×None_belief_predicates)"/>
        <org.eventb.core.prIdent name="stack_intention" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p47" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p45" org.eventb.core.predicate="event_real∈Events"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p51" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ push({Constructor4NDG(dom(Plan_body(event_real)) ↦ terms2)},Empty ⦂ STACK(ℙ(Agent_programs)))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="{action_real} ↦ terms1∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(Agent_programs)))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="dom(Plan_body(event_real)) ↦ terms2∈dom(Constructor4NDG)"/>
        <org.eventb.core.prPred name="p48" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⤖ None_declarative_goal_programs"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p52" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Constructor4NDG∈ℙ(None_belief_predicates) × Terms ⇸ Agent_programs"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="plan_intention∈Events × Terms ⇸ Plan_library"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="∃pop0⦂ℙ(Agent_programs),next_stack1⦂STACK(ℙ(Agent_programs))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p46" org.eventb.core.predicate="terms2∈Terms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="event_real∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="event_real ↦ terms2∈Events × Terms"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="pop(intention_stack)={Constructor4NDG({action_real} ↦ terms1)}"/>
        <org.eventb.core.prPred name="p44" org.eventb.core.predicate="¬Preconditions[{action_real ↦ terms1}]⊆belief_base"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊈belief_base"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(Agent_programs)))))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="stack_intention∈Events × Terms ⇸ STACK(ℙ(Agent_programs))"/>
        <org.eventb.core.prPred name="p50" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p43" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p49" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="evt1/grd2/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3" org.eventb.core.prSets="Agent_programs,Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="DeclarativeGoals">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Constructor4DG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="GoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p5,p6"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p5,p6"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p7,p8,p9,p10"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p7,p8,p9,p10"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p11" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p12,p13,p14,p15"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p12,p13,p14,p15"/>
                                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs))" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18"/>
                                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18"/>
                                        <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p19"/>
                                                <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p23"/>
                                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p24"/>
                                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p25"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p7">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p27"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p6" org.eventb.core.prInfHyps="p28"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p5,p6"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p7"/>
                                                                        <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="total function dom substitution in goal" org.eventb.core.prGoal="p26" org.eventb.core.prHyps="p3">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p1">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p1" org.eventb.core.prHyps="p1"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="1"/>
                                                                            <org.eventb.core.prExprRef name=".subst" org.eventb.core.prRef="e0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="p3"/>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="DGPtoDG" org.eventb.core.type="ℙ(Agent_programs×DeclarativeGoals(Belief_predicates,None_belief_predicates,Terms))"/>
        <org.eventb.core.prIdent name="Declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="dgp" org.eventb.core.type="Agent_programs"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="DGPtoDG∈Agent_programs ⇸ DeclarativeGoals(Belief_predicates,None_belief_predicates,Terms)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="dgp∈dom(DGPtoDG)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="belief_base≠(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="dgp∈Declarative_goal_programs"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="dgp∈dom(DGPtoDG)∧DGPtoDG∈Agent_programs ⇸ DeclarativeGoals(Belief_predicates,None_belief_predicates,Terms)"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="DGPtoDG∈Declarative_goal_programs ⤖ DeclarativeGoals(Belief_predicates,None_belief_predicates,Terms)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="None_declarative_goal_programs∩Declarative_goal_programs=(∅ ⦂ ℙ(Agent_programs))">
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(Agent_programs,None_declarative_goal_programs,Declarative_goal_programs)">
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="⊤"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Agent_programs=None_declarative_goal_programs∪Declarative_goal_programs">
            <org.eventb.core.prIdent name="None_declarative_goal_programs" org.eventb.core.type="ℙ(Agent_programs)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬belief_base=(∅ ⦂ ℙ(Belief_predicates×Terms))">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prExpr name="e0" org.eventb.core.expression="Declarative_goal_programs"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.totalDom:2"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd3/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectApplicablePlan/grd8/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="&#10;&#10;&#9;⚬&#9;ExecuteA/grd7/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="&#10;&#10;&#9;⚬&#9;ExecuteA/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p19" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p27,p28,p29,p30"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p31"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p32"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p33"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p34"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_intentions=(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p11">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p35">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p11"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_belief_base=(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]" org.eventb.core.prHyps="p3">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p3"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p23">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p21" org.eventb.core.prInfHyps="p36"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p22" org.eventb.core.prInfHyps="p37"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p21,p22"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p23"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p20,p6,p1,p10,p7,p13,p18,p15,p16,p17,p14,p9,p8,p5,p12,p21,p22,p23,p24,p25,p26,p27,p28,p29,p30,p36,p37">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="action_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event_real" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="next_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="next_intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions[{action_real ↦ terms1}]⊆belief_base"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="action_real∈Actions"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="next_intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="next_belief_base=(belief_base ∖ Deletion_sets[{action_real ↦ terms1}])∪Addition_sets[{action_real ↦ terms1}]"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="action_real ↦ terms1∈dom(Preconditions)"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="next_intentions=(intentions ∖ {{event_real ↦ terms2} ↦ intention_stack})∪{{event_real ↦ terms2} ↦ next_stack(intention_stack)}"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="{event_real ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryBlockedAction/grd3/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlan/grd3/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlan/grd4/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="plan" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees plan)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p30">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)(plan)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p31">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="relevant_plans1" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Plan_body(event1)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan∈relevant_plans1">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="event1∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan∈dom(Plan_body(event1))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="belief_base ↦ terms1∈dom(Plan_body(event1)(plan))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀plan⦂None_belief_predicates·plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlan/inv3/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlan/act1/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p20"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p2"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event2" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event2∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="event2∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlan/grd9/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyNoneRootStack/grd1/THM" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyNoneRootStack/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p16" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p20"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19,p20"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22,p23,p24"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22,p23,p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p29"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p30"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p31"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p32"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with updated_top_stack=pop(intention_stack) ∖ {constructNDG({event1} ↦ terms1)}" org.eventb.core.prHyps="p10">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p33"/>
                                                <org.eventb.core.prHypAction name="DESELECT1" org.eventb.core.prHyps="p18"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p10"/>
                                                <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p21">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p34"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p35"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p19,p20"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p21"/>
                                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with next_intention_stack=push(pop(intention_stack) ∖ {constructNDG({event1} ↦ terms1)},next_stack(intention_stack))" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p33">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p36">
                                                                <org.eventb.core.prHypAction name="DESELECT0" org.eventb.core.prHyps="p33"/>
                                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p36" org.eventb.core.prHyps="p17,p5,p1,p8,p6,p11,p14,p12,p13,p15,p7,p3,p9,p18,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p33,p34,p35">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="event2" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="next_intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="terms2" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="updated_top_stack" org.eventb.core.type="ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="(intentions ∖ ({{event1 ↦ terms1} ↦ (Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∪{{event2 ↦ terms2} ↦ intention_stack}))∪{{event2 ↦ terms2} ↦ next_intention_stack}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="constructNDG({event1} ↦ terms1)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="{event2 ↦ terms2} ↦ intention_stack∈intentions"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="next_intention_stack=push(pop(intention_stack) ∖ {constructNDG({event1} ↦ terms1)},next_stack(intention_stack))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="(intentions ∖ ({{event1 ↦ terms1} ↦ (Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∪{{event2 ↦ terms2} ↦ intention_stack}))∪{{event2 ↦ terms2} ↦ push(pop(intention_stack) ∖ {constructNDG({event1} ↦ terms1)},next_stack(intention_stack))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="{event1 ↦ terms1} ↦ (Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∈intentions"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="updated_top_stack=pop(intention_stack) ∖ {constructNDG({event1} ↦ terms1)}"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="next_intention_stack=push(updated_top_stack,next_stack(intention_stack))"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyRootStack/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p15" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p17,p18"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p17,p18"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p20,p21,p22"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19,p20,p21,p22"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24,p25,p26"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24,p25,p26"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p27"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p28"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p29"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p30"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p19">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p17" org.eventb.core.prInfHyps="p31"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p18" org.eventb.core.prInfHyps="p32"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p17,p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p19"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p16,p5,p1,p7,p6,p9,p12,p10,p11,p14,p13,p3,p8,p17,p18,p19,p20,p21,p22,p23,p24,p25,p26,p31,p32">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="{event1 ↦ terms1} ↦ (Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∈intentions"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="{constructNDG({event1} ↦ terms1)}=pop(intention_stack)"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions ∖ ({{event1 ↦ terms1} ↦ (Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∪{(∅ ⦂ ℙ(None_belief_predicates×Terms)) ↦ intention_stack})∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms)) ↦ intention_stack∈intentions"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanNoneRootEvent/grd6/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanNoneRootEvent/grd7/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="plan" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees plan)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p30">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)(plan)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p31">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="relevant_plans1" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Plan_body(event1)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan∈relevant_plans1">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="event1∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan∈dom(Plan_body(event1))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="belief_base ↦ terms1∈dom(Plan_body(event1)(plan))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀plan⦂None_belief_predicates·plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanNoneRootEvent/grd8/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="plan" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees plan)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p30">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)(plan)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p31">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="relevant_plans1" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Plan_body(event1)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan∈relevant_plans1">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="event1∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan∈dom(Plan_body(event1))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="belief_base ↦ terms1∈dom(Plan_body(event1)(plan))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀plan⦂None_belief_predicates·plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanNoneRootEvent/inv3/INV" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanNoneRootEvent/act1/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p20"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p22">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p22" org.eventb.core.prHyps="p1"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event2" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event2∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="event2∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanNoneRootEvent/grd5/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanRootEvent/grd6/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanRootEvent/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p17" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p19,p20"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p19,p20"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p21,p22,p23,p24"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p21,p22,p23,p24"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p29"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p30"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p31"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p32"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p21">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p19" org.eventb.core.prInfHyps="p33"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p20" org.eventb.core.prInfHyps="p34"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p19,p20"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p21"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p18,p5,p2,p10,p6,p12,p15,p13,p14,p9,p8,p11,p1,p16,p7,p19,p20,p21,p22,p23,p24,p25,p26,p27,p28,p33,p34">
                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack1" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intention_stack2" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="notEmpty(intention_stack2)"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="{event1 ↦ terms1} ↦ intention_stack1∈intentions"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack2=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="(∅ ⦂ ℙ(None_belief_predicates×Terms)) ↦ intention_stack2∈intentions"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="notEmpty(intention_stack1)"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions ∖ {{event1 ↦ terms1} ↦ intention_stack1,(∅ ⦂ ℙ(None_belief_predicates×Terms)) ↦ intention_stack2}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="constructNDG({event1} ↦ terms1)∈pop(intention_stack2)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanRootEvent/grd5/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="FailureRecoveryNoneApplicablePlanRootEvent/grd7/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="plan" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees plan)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p19">
                                                <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p19" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="p20">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p21" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p22">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p25">
                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p25" org.eventb.core.prHyps="p2"/>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name=")" org.eventb.core.prGoal="p26">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="*" org.eventb.core.prGoal="p27">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p27" org.eventb.core.prHyps="p28"/>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="+" org.eventb.core.prGoal="p29">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="," org.eventb.core.prGoal="p30">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                        <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p2">
                                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                <org.eventb.core.prRule name="r7" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional image goal for Plan_body(event1)(plan)" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p28">
                                                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30">
                                                                                        <org.eventb.core.prRule name="r8" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p30" org.eventb.core.prHyps="p30"/>
                                                                                    </org.eventb.core.prAnte>
                                                                                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0"/>
                                                                                </org.eventb.core.prRule>
                                                                            </org.eventb.core.prAnte>
                                                                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue="0.0"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="-" org.eventb.core.prGoal="p31">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p23"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p24"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event1" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="relevant_plans1" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="terms1" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="Plan_body(event1)∈Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="plan∈relevant_plans1">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="event1∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="plan∈dom(Plan_body(event1))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="belief_base ↦ terms1∈dom(Plan_body(event1)(plan))">
            <org.eventb.core.prIdent name="plan" org.eventb.core.type="None_belief_predicates"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀plan⦂None_belief_predicates·plan∈relevant_plans1⇒event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))∧(Plan_body(event1)(plan)(belief_base ↦ terms1)=(∅ ⦂ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∨(event1∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))∧plan∈dom(Plan_body(event1))∧Plan_body(event1)∈None_belief_predicates ⇸ ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))∧belief_base ↦ terms1∈dom(Plan_body(event1)(plan))∧Plan_body(event1)(plan)∈ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))))"/>
        <org.eventb.core.prReas name="r8" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
        <org.eventb.core.prReas name="r7" org.eventb.core.prRID="org.eventb.core.seqprover.funImgGoal"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="DGSelectRelevantPlans/grd3/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="DGSelectRelevantPlans/grd5/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="goal">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="nonGoal">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="lhd">
                    <org.eventb.theory.core.scConstructorArgument name="currentplan" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="backup" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="seq">
                    <org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.type="AgentPrograms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="concurrent">
                    <org.eventb.theory.core.scConstructorArgument name="left" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="right" org.eventb.core.type="AgentPrograms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="nil"/>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isGoal" org.eventb.core.label="isGoal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNonGoal" org.eventb.core.label="isNonGoal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="element1" org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#element1" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isLhd" org.eventb.core.label="isLhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeq" org.eventb.core.label="isSeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="element1" org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#element1" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isConcurrent" org.eventb.core.label="isConcurrent" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNil" org.eventb.core.label="isNil" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="WellCons" org.eventb.core.label="WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="isNonGoal(agrec)∨isLhd(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="WellCons(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="WellCons(ag1)∧WellCons(ag2)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="WellCons(ag1)∧WellCons(ag2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="GetNonBeliefPred" org.eventb.core.label="GetNonBeliefPred" org.eventb.core.predicate="WellCons(ag)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(non_belief_predicates×terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{nonbeliedpred}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="∅ ⦂ ℙ(non_belief_predicates×terms)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="GetNonBeliefPred(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="GetNonBeliefPred(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="GetNonBeliefPred(ag1)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="GetNonBeliefPred(ag1)∪GetNonBeliefPred(ag2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="remove" org.eventb.core.label="remove" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(AgentPrograms(belief_predicates,non_belief_predicates,terms))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="non_belief" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="non_belief_predicates×terms"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="element1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliefpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{a⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·a∈AgentPrograms(belief_predicates,non_belief_predicates,terms)∧((a=(nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms))∧nonbeliefpred=non_belief)∨(a=nonGoal(nonbeliefpred)∧nonbeliefpred≠non_belief)) ∣ a}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="{a⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·a=(nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms))∧a∈AgentPrograms(belief_predicates,non_belief_predicates,terms) ∣ a}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(agrec,non_belief) ∣ goal(succes,agbis,fail)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(agrec,non_belief) ∣ lhd(agbis,back)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(ag2,non_belief) ∣ seq(agbis,ag2)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{ag1bis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms),ag2bis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·(ag1bis∈remove(ag1,non_belief)∧ag2bis=ag2∧non_belief∈GetNonBeliefPred(ag1))∨(ag2bis∈remove(ag2,non_belief)∧ag1bis=ag1∧non_belief∈GetNonBeliefPred(ag2))∨(non_belief∈GetNonBeliefPred(ag1)∧non_belief∈GetNonBeliefPred(ag2)∧ag1bis=ag1∧ag2bis=ag2) ∣ concurrent(ag1bis,ag2bis)}"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p6,p7,p8,p9"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p10" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p11,p12,p13,p14"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p17"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p18"/>
                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p19"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p20">
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p6">
                                                    <org.eventb.core.prAnte name="'">
                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p4" org.eventb.core.prInfHyps="p21"/>
                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p5" org.eventb.core.prInfHyps="p22"/>
                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p4,p5"/>
                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p6"/>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p23">
                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="functional goal" org.eventb.core.prGoal="p23" org.eventb.core.prHyps="p1"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="event∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="event∈dom(Plan_body)∧Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="intentions∈ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))">
            <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.isFunGoal"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="DGSelectRelevantPlans/inv3/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13,p14,p15,p16,p17,p18,p19,p20,p21,p22" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p20" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p23,p24"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p23,p24"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p7" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p25,p26,p27,p28"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p25,p26,p27,p28"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p4" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p29,p30,p31,p32"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p29,p30,p31,p32"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="simplification rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p22" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p33"/>
                                        <org.eventb.core.prHypAction name="REWRITE1" org.eventb.core.prHidden="p6" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p34"/>
                                        <org.eventb.core.prHypAction name="REWRITE2" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p35"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p36"/>
                                                <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p37"/>
                                                <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p38"/>
                                                <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p39"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with relevant_plans=dom(Plan_body(event))" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p40">
                                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p1"/>
                                                        <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p25">
                                                            <org.eventb.core.prAnte name="'">
                                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p23" org.eventb.core.prInfHyps="p41"/>
                                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p24" org.eventb.core.prInfHyps="p42"/>
                                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p23,p24"/>
                                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p25"/>
                                                                <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p40" org.eventb.core.prHyps="p21,p9,p3,p11,p14,p15,p19,p17,p18,p10,p16,p12,p13,p5,p2,p23,p24,p25,p26,p27,p28,p29,p30,p31,p32,p33,p34,p35,p41,p42">
                                                                    <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="alreadytry" org.eventb.core.type="ℙ(None_belief_predicates×Terms×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="failure_conditions" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(ℙ(None_belief_predicates×Terms)×STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prIdent name="relevant_plans" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="success_conditions" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p40" org.eventb.core.predicate="intentions∪{{event ↦ terms} ↦ push({constructDG(success_conditions,dom(Plan_body(event)) ↦ terms,failure_conditions)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p36" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Plan_body∈None_belief_predicates ⇸ ℙ(None_belief_predicates × ℙ(ℙ(Belief_predicates × Terms) × Terms × AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p41" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="intentions∪{{event ↦ terms} ↦ push({constructDG(success_conditions,relevant_plans ↦ terms,failure_conditions)},Empty ⦂ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))}∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="alreadytry∈Events × Terms ↔ STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p37" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="{event ↦ terms}∉dom(intentions)"/>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="¬{event ↦ terms}∈dom(intentions)"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="relevant_plans=dom(Plan_body(event))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="event∈dom(Plan_body)"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="success_conditions⊈belief_base"/>
        <org.eventb.core.prPred name="p39" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="failure_conditions⊈belief_base"/>
        <org.eventb.core.prPred name="p42" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="intention_stack∈ran(intentions)"/>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="¬success_conditions⊆belief_base"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="constructDG(success_conditions,{event} ↦ terms,failure_conditions)∈pop(intention_stack)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="notEmpty(intention_stack)"/>
        <org.eventb.core.prPred name="p38" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="intentions∈ℙ(ℙ(Events × Terms) × STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="¬failure_conditions⊆belief_base"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.autoRewritesL5:0"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyNoneRootStack/grd3/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyNoneRootStack/act1/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyNoneRootStack/grd4/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyNoneRootStack/grd5/WD" org.eventb.core.confidence="1000" org.eventb.core.prFresh="" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="hyp" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p0"/>
        <org.eventb.core.prIdent name="intention_stack" org.eventb.core.type="STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∃pop0⦂ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)),next_stack1⦂STACK(ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))·intention_stack=push(pop0,next_stack1)"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.hyp"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="RemoveEmptyRootStack/grd3/WD" org.eventb.core.confidence="0" org.eventb.core.prFresh="" org.eventb.core.prHyps="p0" org.eventb.core.prSets="Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="STACK">
                <org.eventb.theory.core.scTypeArgument name="EL" org.eventb.theory.core.givenType="EL"/>
                <org.eventb.theory.core.scDatatypeConstructor name="Empty"/>
                <org.eventb.theory.core.scDatatypeConstructor name="push">
                    <org.eventb.theory.core.scConstructorArgument name="pop" org.eventb.core.type="EL"/>
                    <org.eventb.theory.core.scConstructorArgument name="next_stack" org.eventb.core.type="STACK"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="@" org.eventb.core.label="@" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="infix extended expression group" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="INFIX" org.eventb.theory.core.type="STACK(EL)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack1" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scOperatorArgument name="stack2" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.operatorArgument#(" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name=")" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)" org.eventb.theory.core.inductiveArgument="stack1">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="stack2"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#)|org.eventb.theory.core.recursiveOperatorDefinition#)|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="push(e,s @ stack2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="notEmpty" org.eventb.core.label="notEmpty" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="stack" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="STACK(EL)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="stack">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="Empty ⦂ STACK(EL)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="push(e,s)" org.eventb.core.source="/BasicTheory/StackStructure.tuf|org.eventb.theory.core.theoryRoot#StackStructure|org.eventb.theory.core.newOperatorDefinition#*|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="constructDG">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="constructNDG">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
            </org.eventb.theory.core.scDatatypeDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p1" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p2,p3"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p2,p3"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p0" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p4,p5,p6,p7"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p8" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p9,p10,p11,p12"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p13"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p14"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p15"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p16"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p4">
                                            <org.eventb.core.prAnte name="'">
                                                <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p2" org.eventb.core.prInfHyps="p17"/>
                                                <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p3" org.eventb.core.prInfHyps="p18"/>
                                                <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p2,p3"/>
                                                <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p4"/>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="Terms=Point∪VectorTerms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Belief_predicates" org.eventb.core.type="ℙ(Belief_predicates)"/>
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="VectorTerms⊆Terms">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))">
            <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
            <org.eventb.core.prIdent name="None_belief_predicates" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)">
            <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="AddressExternalEvent/inv5/INV" org.eventb.core.confidence="1000" org.eventb.core.prFresh="ag" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="p1,p2,p3,p4,p5,p6,p7,p8,p9,p10,p11,p12,p13" org.eventb.core.prSets="Belief_predicates,None_belief_predicates,Terms">
        <org.eventb.core.lang name="L">
            <org.eventb.theory.core.scDatatypeDefinition name="AgentPrograms">
                <org.eventb.theory.core.scTypeArgument name="belief_predicates" org.eventb.theory.core.givenType="belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="non_belief_predicates" org.eventb.theory.core.givenType="non_belief_predicates"/>
                <org.eventb.theory.core.scTypeArgument name="terms" org.eventb.theory.core.givenType="terms"/>
                <org.eventb.theory.core.scDatatypeConstructor name="goal">
                    <org.eventb.theory.core.scConstructorArgument name="SuccessConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                    <org.eventb.theory.core.scConstructorArgument name="DGGoalPlanBodies" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="FailureConditions" org.eventb.core.type="ℙ(belief_predicates×terms)"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="nonGoal">
                    <org.eventb.theory.core.scConstructorArgument name="NDGGoalPlanBodies" org.eventb.core.type="non_belief_predicates×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="lhd">
                    <org.eventb.theory.core.scConstructorArgument name="currentplan" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="backup" org.eventb.core.type="ℙ(non_belief_predicates)×terms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="seq">
                    <org.eventb.theory.core.scConstructorArgument name="head" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="tail" org.eventb.core.type="AgentPrograms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="concurrent">
                    <org.eventb.theory.core.scConstructorArgument name="left" org.eventb.core.type="AgentPrograms"/>
                    <org.eventb.theory.core.scConstructorArgument name="right" org.eventb.core.type="AgentPrograms"/>
                </org.eventb.theory.core.scDatatypeConstructor>
                <org.eventb.theory.core.scDatatypeConstructor name="nil"/>
            </org.eventb.theory.core.scDatatypeDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isGoal" org.eventb.core.label="isGoal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#+|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNonGoal" org.eventb.core.label="isNonGoal" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="element1" org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#element1" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element1|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isLhd" org.eventb.core.label="isLhd" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element2|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isSeq" org.eventb.core.label="isSeq" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="element1" org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#element1" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element3|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isConcurrent" org.eventb.core.label="isConcurrent" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element4|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊤"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="isNil" org.eventb.core.label="isNil" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="⊥"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element9|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="⊥"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="WellCons" org.eventb.core.label="WellCons" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="false" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="⊤"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="isNonGoal(agrec)∨isLhd(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="WellCons(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="WellCons(ag1)∧WellCons(ag2)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element5|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="WellCons(ag1)∧WellCons(ag2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="GetNonBeliefPred" org.eventb.core.label="GetNonBeliefPred" org.eventb.core.predicate="WellCons(ag)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(non_belief_predicates×terms)" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="(" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliedpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{nonbeliedpred}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="∅ ⦂ ℙ(non_belief_predicates×terms)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="GetNonBeliefPred(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="GetNonBeliefPred(agrec)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="GetNonBeliefPred(ag1)"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element7|org.eventb.theory.core.recursiveOperatorDefinition#(|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="GetNonBeliefPred(ag1)∪GetNonBeliefPred(ag2)"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
            <org.eventb.theory.core.scNewOperatorDefinition name="remove" org.eventb.core.label="remove" org.eventb.core.predicate="⊤" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8" org.eventb.theory.core.associative="false" org.eventb.theory.core.commutative="false" org.eventb.theory.core.formulaType="true" org.eventb.theory.core.groupID="org.eventb.core.ast.closed" org.eventb.theory.core.hasError="false" org.eventb.theory.core.notationType="PREFIX" org.eventb.theory.core.type="ℙ(AgentPrograms(belief_predicates,non_belief_predicates,terms))" org.eventb.theory.core.wd="⊤">
                <org.eventb.theory.core.scOperatorArgument name="ag" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#'" org.eventb.core.type="AgentPrograms(belief_predicates,non_belief_predicates,terms)"/>
                <org.eventb.theory.core.scOperatorArgument name="non_belief" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.operatorArgument#)" org.eventb.core.type="non_belief_predicates×terms"/>
                <org.eventb.theory.core.scRecursiveOperatorDefinition name="element1" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1" org.eventb.theory.core.inductiveArgument="ag">
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="(" org.eventb.core.expression="nonGoal(nonbeliefpred)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#(" org.eventb.theory.core.formula="{a⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·a∈AgentPrograms(belief_predicates,non_belief_predicates,terms)∧((a=(nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms))∧nonbeliefpred=non_belief)∨(a=nonGoal(nonbeliefpred)∧nonbeliefpred≠non_belief)) ∣ a}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="," org.eventb.core.expression="nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#," org.eventb.theory.core.formula="{a⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·a=(nil ⦂ AgentPrograms(belief_predicates,non_belief_predicates,terms))∧a∈AgentPrograms(belief_predicates,non_belief_predicates,terms) ∣ a}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="'" org.eventb.core.expression="goal(succes,agrec,fail)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#'" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(agrec,non_belief) ∣ goal(succes,agbis,fail)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name=")" org.eventb.core.expression="lhd(agrec,back)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#)" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(agrec,non_belief) ∣ lhd(agbis,back)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="*" org.eventb.core.expression="seq(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#*" org.eventb.theory.core.formula="{agbis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·agbis∈remove(ag2,non_belief) ∣ seq(agbis,ag2)}"/>
                    <org.eventb.theory.core.scRecursiveDefinitionCase name="+" org.eventb.core.expression="concurrent(ag1,ag2)" org.eventb.core.source="/BasicTheory/AgentProgramConstructor.tuf|org.eventb.theory.core.theoryRoot#AgentProgramConstructor|org.eventb.theory.core.newOperatorDefinition#element8|org.eventb.theory.core.recursiveOperatorDefinition#element1|org.eventb.theory.core.recursiveDefinitionCase#+" org.eventb.theory.core.formula="{ag1bis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms),ag2bis⦂AgentPrograms(belief_predicates,non_belief_predicates,terms)·(ag1bis∈remove(ag1,non_belief)∧ag2bis=ag2∧non_belief∈GetNonBeliefPred(ag1))∨(ag2bis∈remove(ag2,non_belief)∧ag1bis=ag1∧non_belief∈GetNonBeliefPred(ag2))∨(non_belief∈GetNonBeliefPred(ag1)∧non_belief∈GetNonBeliefPred(ag2)∧ag1bis=ag1∧ag2bis=ag2) ∣ concurrent(ag1bis,ag2bis)}"/>
                </org.eventb.theory.core.scRecursiveOperatorDefinition>
            </org.eventb.theory.core.scNewOperatorDefinition>
        </org.eventb.core.lang>
        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Terms,Point,VectorTerms))" org.eventb.core.prHyps="">
            <org.eventb.core.prAnte name="'">
                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p12" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p14,p15"/>
                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p14,p15"/>
                <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(Point,{a},{b},{c}))" org.eventb.core.prHyps="">
                    <org.eventb.core.prAnte name="'">
                        <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p3" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p16,p17,p18,p19"/>
                        <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p16,p17,p18,p19"/>
                        <org.eventb.core.prRule name="r0" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="Partition rewrites in hyp (partition(None_belief_predicates,Events,Actions,Plan_library))" org.eventb.core.prHyps="">
                            <org.eventb.core.prAnte name="'">
                                <org.eventb.core.prHypAction name="REWRITE0" org.eventb.core.prHidden="p2" org.eventb.core.prHyps="" org.eventb.core.prInfHyps="p20,p21,p22,p23"/>
                                <org.eventb.core.prHypAction name="SELECT1" org.eventb.core.prHyps="p20,p21,p22,p23"/>
                                <org.eventb.core.prRule name="r1" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="type rewrites" org.eventb.core.prHyps="">
                                    <org.eventb.core.prAnte name="'">
                                        <org.eventb.core.prHypAction name="HIDE0" org.eventb.core.prHyps="p24"/>
                                        <org.eventb.core.prHypAction name="HIDE1" org.eventb.core.prHyps="p25"/>
                                        <org.eventb.core.prHypAction name="HIDE2" org.eventb.core.prHyps="p26"/>
                                        <org.eventb.core.prHypAction name="HIDE3" org.eventb.core.prHyps="p27"/>
                                        <org.eventb.core.prHypAction name="HIDE4" org.eventb.core.prHyps="p28"/>
                                        <org.eventb.core.prRule name="r2" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∀ goal (frees ag)" org.eventb.core.prGoal="p0" org.eventb.core.prHyps="">
                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p29">
                                                <org.eventb.core.prIdent name="ag" org.eventb.core.type="AgentPrograms(Belief_predicates,None_belief_predicates,Terms)"/>
                                                <org.eventb.core.prRule name="r3" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="⇒ goal" org.eventb.core.prGoal="p29" org.eventb.core.prHyps="">
                                                    <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="p30">
                                                        <org.eventb.core.prRule name="r4" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="∧ goal" org.eventb.core.prGoal="p31" org.eventb.core.prHyps="">
                                                            <org.eventb.core.prAnte name="'" org.eventb.core.prGoal="p32">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p16">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p33"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p34"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p14,p15"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p16"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p32" org.eventb.core.prHyps="p13,p4,p1,p5,p10,p8,p11,p6,p7,p9,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p30,p33,p34">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                            <org.eventb.core.prAnte name="(" org.eventb.core.prGoal="p35">
                                                                <org.eventb.core.prRule name="r5" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="eh with Point={a,b,c}" org.eventb.core.prHyps="p16">
                                                                    <org.eventb.core.prAnte name="'">
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF0" org.eventb.core.prHyps="p14" org.eventb.core.prInfHyps="p33"/>
                                                                        <org.eventb.core.prHypAction name="FORWARD_INF1" org.eventb.core.prHyps="p15" org.eventb.core.prInfHyps="p34"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT2" org.eventb.core.prHyps="p14,p15"/>
                                                                        <org.eventb.core.prHypAction name="DESELECT3" org.eventb.core.prHyps="p16"/>
                                                                        <org.eventb.core.prRule name="r6" org.eventb.core.confidence="1000" org.eventb.core.prDisplay="ML" org.eventb.core.prGoal="p35" org.eventb.core.prHyps="p13,p4,p1,p5,p10,p8,p11,p6,p7,p9,p14,p15,p16,p17,p18,p19,p20,p21,p22,p23,p30,p33,p34">
                                                                            <org.eventb.core.prString name=".arg" org.eventb.core.prSValue="0;1:500"/>
                                                                        </org.eventb.core.prRule>
                                                                    </org.eventb.core.prAnte>
                                                                </org.eventb.core.prRule>
                                                            </org.eventb.core.prAnte>
                                                        </org.eventb.core.prRule>
                                                    </org.eventb.core.prAnte>
                                                </org.eventb.core.prRule>
                                            </org.eventb.core.prAnte>
                                        </org.eventb.core.prRule>
                                    </org.eventb.core.prAnte>
                                </org.eventb.core.prRule>
                            </org.eventb.core.prAnte>
                            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                        </org.eventb.core.prRule>
                    </org.eventb.core.prAnte>
                    <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
                </org.eventb.core.prRule>
            </org.eventb.core.prAnte>
            <org.eventb.core.prString name=".pos" org.eventb.core.prSValue=""/>
        </org.eventb.core.prRule>
        <org.eventb.core.prIdent name="Actions" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Addition_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Deletion_sets" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Events" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Initial_external_event_set" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="Plan_body" org.eventb.core.type="ℙ(None_belief_predicates×ℙ(None_belief_predicates×ℙ(ℙ(Belief_predicates×Terms)×Terms×ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))))"/>
        <org.eventb.core.prIdent name="Plan_library" org.eventb.core.type="ℙ(None_belief_predicates)"/>
        <org.eventb.core.prIdent name="Point" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="Preconditions" org.eventb.core.type="ℙ(None_belief_predicates×Terms×(Belief_predicates×Terms))"/>
        <org.eventb.core.prIdent name="Vector" org.eventb.core.type="ℙ(Terms×Terms×Terms)"/>
        <org.eventb.core.prIdent name="VectorTerms" org.eventb.core.type="ℙ(Terms)"/>
        <org.eventb.core.prIdent name="a" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="b" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="backupAgentProgamms" org.eventb.core.type="ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)×ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms)))"/>
        <org.eventb.core.prIdent name="c" org.eventb.core.type="Terms"/>
        <org.eventb.core.prIdent name="event" org.eventb.core.type="None_belief_predicates"/>
        <org.eventb.core.prIdent name="external_events" org.eventb.core.type="ℙ(None_belief_predicates×Terms)"/>
        <org.eventb.core.prIdent name="intentions" org.eventb.core.type="ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        <org.eventb.core.prIdent name="terms" org.eventb.core.type="Terms"/>
        <org.eventb.core.prPred name="p24" org.eventb.core.predicate="Point⊆Terms"/>
        <org.eventb.core.prPred name="p1" org.eventb.core.predicate="Deletion_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p2" org.eventb.core.predicate="partition(None_belief_predicates,Events,Actions,Plan_library)"/>
        <org.eventb.core.prPred name="p35" org.eventb.core.predicate="ag∈intentions∪{nonGoal(event ↦ terms)}">
            <org.eventb.core.prIdent name="ag" org.eventb.core.type="AgentPrograms(Belief_predicates,None_belief_predicates,Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p33" org.eventb.core.predicate="Terms={a,b,c}∪VectorTerms"/>
        <org.eventb.core.prPred name="p3" org.eventb.core.predicate="partition(Point,{a},{b},{c})"/>
        <org.eventb.core.prPred name="p32" org.eventb.core.predicate="isLhd(ag)">
            <org.eventb.core.prIdent name="ag" org.eventb.core.type="AgentPrograms(Belief_predicates,None_belief_predicates,Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p20" org.eventb.core.predicate="None_belief_predicates=Events∪Actions∪Plan_library"/>
        <org.eventb.core.prPred name="p0" org.eventb.core.predicate="∀ag⦂AgentPrograms(Belief_predicates,None_belief_predicates,Terms)·ag∈dom(backupAgentProgamms)⇒isLhd(ag)∧ag∈intentions∪{nonGoal(event ↦ terms)}"/>
        <org.eventb.core.prPred name="p22" org.eventb.core.predicate="Events∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p5" org.eventb.core.predicate="Addition_sets∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p14" org.eventb.core.predicate="Terms=Point∪VectorTerms"/>
        <org.eventb.core.prPred name="p10" org.eventb.core.predicate="Plan_body∈Events ⇸ (Plan_library ⇸ (ℙ(Belief_predicates × Terms) × Terms ⇸ ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))))"/>
        <org.eventb.core.prPred name="p25" org.eventb.core.predicate="VectorTerms⊆Terms"/>
        <org.eventb.core.prPred name="p18" org.eventb.core.predicate="¬a=c"/>
        <org.eventb.core.prPred name="p23" org.eventb.core.predicate="Actions∩Plan_library=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p11" org.eventb.core.predicate="external_events∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p19" org.eventb.core.predicate="¬b=c"/>
        <org.eventb.core.prPred name="p21" org.eventb.core.predicate="Events∩Actions=(∅ ⦂ ℙ(None_belief_predicates))"/>
        <org.eventb.core.prPred name="p12" org.eventb.core.predicate="partition(Terms,Point,VectorTerms)"/>
        <org.eventb.core.prPred name="p13" org.eventb.core.predicate="Vector∈Point × Point ↣ VectorTerms"/>
        <org.eventb.core.prPred name="p31" org.eventb.core.predicate="isLhd(ag)∧ag∈intentions∪{nonGoal(event ↦ terms)}">
            <org.eventb.core.prIdent name="ag" org.eventb.core.type="AgentPrograms(Belief_predicates,None_belief_predicates,Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p16" org.eventb.core.predicate="Point={a,b,c}"/>
        <org.eventb.core.prPred name="p17" org.eventb.core.predicate="¬a=b"/>
        <org.eventb.core.prPred name="p30" org.eventb.core.predicate="ag∈dom(backupAgentProgamms)">
            <org.eventb.core.prIdent name="ag" org.eventb.core.type="AgentPrograms(Belief_predicates,None_belief_predicates,Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p27" org.eventb.core.predicate="belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p34" org.eventb.core.predicate="{a,b,c}∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p4" org.eventb.core.predicate="Preconditions∈Actions × Terms ↔ Belief_predicates × Terms"/>
        <org.eventb.core.prPred name="p6" org.eventb.core.predicate="backupAgentProgamms∈AgentPrograms(Belief_predicates,None_belief_predicates,Terms) ⇸ ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        <org.eventb.core.prPred name="p7" org.eventb.core.predicate="∀ag⦂AgentPrograms(Belief_predicates,None_belief_predicates,Terms)·ag∈dom(backupAgentProgamms)⇒isLhd(ag)∧ag∈intentions"/>
        <org.eventb.core.prPred name="p8" org.eventb.core.predicate="Initial_external_event_set∈ℙ(Events × Terms)"/>
        <org.eventb.core.prPred name="p26" org.eventb.core.predicate="Initial_belief_base∈ℙ(Belief_predicates × Terms)">
            <org.eventb.core.prIdent name="Initial_belief_base" org.eventb.core.type="ℙ(Belief_predicates×Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p15" org.eventb.core.predicate="Point∩VectorTerms=(∅ ⦂ ℙ(Terms))"/>
        <org.eventb.core.prPred name="p29" org.eventb.core.predicate="ag∈dom(backupAgentProgamms)⇒isLhd(ag)∧ag∈intentions∪{nonGoal(event ↦ terms)}">
            <org.eventb.core.prIdent name="ag" org.eventb.core.type="AgentPrograms(Belief_predicates,None_belief_predicates,Terms)"/>
        </org.eventb.core.prPred>
        <org.eventb.core.prPred name="p9" org.eventb.core.predicate="event ↦ terms∈external_events"/>
        <org.eventb.core.prPred name="p28" org.eventb.core.predicate="intentions∈ℙ(AgentPrograms(Belief_predicates,None_belief_predicates,Terms))"/>
        <org.eventb.core.prReas name="r1" org.eventb.core.prRID="org.eventb.core.seqprover.typeRewrites:1"/>
        <org.eventb.core.prReas name="r2" org.eventb.core.prRID="org.eventb.core.seqprover.allI"/>
        <org.eventb.core.prReas name="r3" org.eventb.core.prRID="org.eventb.core.seqprover.impI"/>
        <org.eventb.core.prReas name="r0" org.eventb.core.prRID="org.eventb.core.seqprover.partitionRewrites"/>
        <org.eventb.core.prReas name="r6" org.eventb.core.prRID="com.clearsy.atelierb.provers.core.externalML:1"/>
        <org.eventb.core.prReas name="r5" org.eventb.core.prRID="org.eventb.core.seqprover.eqL2:1"/>
        <org.eventb.core.prReas name="r4" org.eventb.core.prRID="org.eventb.core.seqprover.conj:0"/>
    </org.eventb.core.prProof>
    <org.eventb.core.prProof name="SelectRelevantPlans/inv5/INV"/>
    <org.eventb.core.prProof name="SelectRelevantPlans/grd6/THM"/>
</org.eventb.core.prFile>
